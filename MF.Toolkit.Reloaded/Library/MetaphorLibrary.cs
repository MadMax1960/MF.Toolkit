using SharedScans.Interfaces;

using MF.Toolkit.Interfaces.Library;
using static MF.Toolkit.Interfaces.Library.MetaphorDefinitions;

namespace MF.Toolkit.Reloaded.Library;

internal class MetaphorLibrary : IMetaphorLibrary
{
	private readonly WrapperContainer<seterrorhandler> _seterrorhandler;
	private readonly WrapperContainer<setdebughook> _setdebughook;
	private readonly WrapperContainer<enabledebuginfo> _enabledebuginfo;
	private readonly WrapperContainer<getstackinfos> _getstackinfos;
	private readonly WrapperContainer<getroottable> _getroottable;
	private readonly WrapperContainer<setroottable> _setroottable;
	private readonly WrapperContainer<getconsttable> _getconsttable;
	private readonly WrapperContainer<setconsttable> _setconsttable;
	private readonly WrapperContainer<assert> _assert;
	private readonly WrapperContainer<error> _error;
	private readonly WrapperContainer<compilestring> _compilestring;
	private readonly WrapperContainer<newthread> _newthread;
	private readonly WrapperContainer<suspend> _suspend;
	private readonly WrapperContainer<array> _array;
	private readonly WrapperContainer<type> _type;
	private readonly WrapperContainer<callee> _callee;
	private readonly WrapperContainer<dummy> _dummy;
	private readonly WrapperContainer<collectgarbage> _collectgarbage;
	private readonly WrapperContainer<resurrectunreachable> _resurrectunreachable;
	private readonly WrapperContainer<CMD_GET_AND> _CMD_GET_AND;
	private readonly WrapperContainer<CMD_GET_OR> _CMD_GET_OR;
	private readonly WrapperContainer<CMD_GET_XOR> _CMD_GET_XOR;
	private readonly WrapperContainer<CMD_GET_NOT> _CMD_GET_NOT;
	private readonly WrapperContainer<CMD_GET_L_SHIFT> _CMD_GET_L_SHIFT;
	private readonly WrapperContainer<CMD_GET_R_SHIFT> _CMD_GET_R_SHIFT;
	private readonly WrapperContainer<CMD_ADD> _CMD_ADD;
	private readonly WrapperContainer<CMD_SUB> _CMD_SUB;
	private readonly WrapperContainer<CMD_MUL> _CMD_MUL;
	private readonly WrapperContainer<CMD_DIV> _CMD_DIV;
	private readonly WrapperContainer<CMD_SURPLUS> _CMD_SURPLUS;
	private readonly WrapperContainer<CMD_SIN> _CMD_SIN;
	private readonly WrapperContainer<CMD_COS> _CMD_COS;
	private readonly WrapperContainer<CMD_TAN> _CMD_TAN;
	private readonly WrapperContainer<CMD_ASIN> _CMD_ASIN;
	private readonly WrapperContainer<CMD_ACOS> _CMD_ACOS;
	private readonly WrapperContainer<CMD_ATAN> _CMD_ATAN;
	private readonly WrapperContainer<CMD_ATAN2> _CMD_ATAN2;
	private readonly WrapperContainer<CMD_SQRT> _CMD_SQRT;
	private readonly WrapperContainer<CMD_GET_MAX> _CMD_GET_MAX;
	private readonly WrapperContainer<CMD_GET_MIN> _CMD_GET_MIN;
	private readonly WrapperContainer<XU_AAAAA> _XU_AAAAA;
	private readonly WrapperContainer<XU_BBBBB> _XU_BBBBB;
	private readonly WrapperContainer<Daily_Process> _Daily_Process;
	private readonly WrapperContainer<GetRandomRate> _GetRandomRate;
	private readonly WrapperContainer<Sqrt> _Sqrt;
	private readonly WrapperContainer<ScriptSkipStopMark> _ScriptSkipStopMark;
	private readonly WrapperContainer<BitGet> _BitGet;
	private readonly WrapperContainer<BitOn> _BitOn;
	private readonly WrapperContainer<BitOff> _BitOff;
	private readonly WrapperContainer<CounterGet> _CounterGet;
	private readonly WrapperContainer<CounterSet> _CounterSet;
	private readonly WrapperContainer<GetDifficulty> _GetDifficulty;
	private readonly WrapperContainer<TravelersVoiceAddValueFromRewardID> _TravelersVoiceAddValueFromRewardID;
	private readonly WrapperContainer<TravelersVoiceAddValue> _TravelersVoiceAddValue;
	private readonly WrapperContainer<TravelersVoicePartySendRequest> _TravelersVoicePartySendRequest;
	private readonly WrapperContainer<GetDeltaTime> _GetDeltaTime;
	private readonly WrapperContainer<GetElapsedTime> _GetElapsedTime;
	private readonly WrapperContainer<IsTimeProgressUI> _IsTimeProgressUI;
	private readonly WrapperContainer<GameStartInitialize> _GameStartInitialize;
	private readonly WrapperContainer<GetMoney> _GetMoney;
	private readonly WrapperContainer<SetMoney> _SetMoney;
	private readonly WrapperContainer<AddMoney> _AddMoney;
	private readonly WrapperContainer<SetMag> _SetMag;
	private readonly WrapperContainer<AddMag> _AddMag;
	private readonly WrapperContainer<OpenMoneyUI> _OpenMoneyUI;
	private readonly WrapperContainer<AddMoneyUI> _AddMoneyUI;
	private readonly WrapperContainer<CloseMoneyUI> _CloseMoneyUI;
	private readonly WrapperContainer<IsAddMoneyUIClosed> _IsAddMoneyUIClosed;
	private readonly WrapperContainer<OpenMagUI> _OpenMagUI;
	private readonly WrapperContainer<AddMagUI> _AddMagUI;
	private readonly WrapperContainer<CloseMagUI> _CloseMagUI;
	private readonly WrapperContainer<IsAddMagUIClosed> _IsAddMagUIClosed;
	private readonly WrapperContainer<OpenEventAddedMagUI> _OpenEventAddedMagUI;
	private readonly WrapperContainer<IsEventAddedMagUIClosed> _IsEventAddedMagUIClosed;
	private readonly WrapperContainer<SetBagItem> _SetBagItem;
	private readonly WrapperContainer<AddBagItem> _AddBagItem;
	private readonly WrapperContainer<GetBagItem> _GetBagItem;
	private readonly WrapperContainer<HasItemType> _HasItemType;
	private readonly WrapperContainer<JoinParty> _JoinParty;
	private readonly WrapperContainer<JoinPartyNoRecovery> _JoinPartyNoRecovery;
	private readonly WrapperContainer<LeaveParty> _LeaveParty;
	private readonly WrapperContainer<SetPartyHeroOnly> _SetPartyHeroOnly;
	private readonly WrapperContainer<SetPartyGameClear> _SetPartyGameClear;
	private readonly WrapperContainer<InitialClearParty> _InitialClearParty;
	private readonly WrapperContainer<IsInParty> _IsInParty;
	private readonly WrapperContainer<JoinPartyAsGuest> _JoinPartyAsGuest;
	private readonly WrapperContainer<SetBattleParty> _SetBattleParty;
	private readonly WrapperContainer<GetBattleParty> _GetBattleParty;
	private readonly WrapperContainer<SetBattlePartyFormation> _SetBattlePartyFormation;
	private readonly WrapperContainer<SetPartyMemberAwakened> _SetPartyMemberAwakened;
	private readonly WrapperContainer<AcquireClass> _AcquireClass;
	private readonly WrapperContainer<CanAcquireClass> _CanAcquireClass;
	private readonly WrapperContainer<LearnRoyalClassOnPreviousRound> _LearnRoyalClassOnPreviousRound;
	private readonly WrapperContainer<GetClassLevel> _GetClassLevel;
	private readonly WrapperContainer<GetPartyLearnedClassNum> _GetPartyLearnedClassNum;
	private readonly WrapperContainer<SetHeroDefaultParam> _SetHeroDefaultParam;
	private readonly WrapperContainer<IsRoundPlay> _IsRoundPlay;
	private readonly WrapperContainer<PartyPreset> _PartyPreset;
	private readonly WrapperContainer<GetLearnedClassRateRewardProgress> _GetLearnedClassRateRewardProgress;
	private readonly WrapperContainer<GetLearnedClassRateRewardItemRecievedProgress> _GetLearnedClassRateRewardItemRecievedProgress;
	private readonly WrapperContainer<GetLearnedClassRateRewardItemID> _GetLearnedClassRateRewardItemID;
	private readonly WrapperContainer<GetLearnedClassRateRewardItemNum> _GetLearnedClassRateRewardItemNum;
	private readonly WrapperContainer<SetLearnedClassRateRewardItemRecieved> _SetLearnedClassRateRewardItemRecieved;
	private readonly WrapperContainer<PadIsTrigOK> _PadIsTrigOK;
	private readonly WrapperContainer<PadIsTrigOKCancel> _PadIsTrigOKCancel;
	private readonly WrapperContainer<PadGet> _PadGet;
	private readonly WrapperContainer<PadRumbleStart> _PadRumbleStart;
	private readonly WrapperContainer<PadRumbleStop> _PadRumbleStop;
	private readonly WrapperContainer<DebugPadRumblePresetRuntimeTest> _DebugPadRumblePresetRuntimeTest;
	private readonly WrapperContainer<SndPlayBgm> _SndPlayBgm;
	private readonly WrapperContainer<SndStopBgm> _SndStopBgm;
	private readonly WrapperContainer<SndFadeOutBgm> _SndFadeOutBgm;
	private readonly WrapperContainer<SndPlaySystemSe> _SndPlaySystemSe;
	private readonly WrapperContainer<SndPlaySystemSeWithPos> _SndPlaySystemSeWithPos;
	private readonly WrapperContainer<SndPlaySystemSeStr> _SndPlaySystemSeStr;
	private readonly WrapperContainer<SndPlaySystemSeStrWithPos> _SndPlaySystemSeStrWithPos;
	private readonly WrapperContainer<SndStopSystemSe> _SndStopSystemSe;
	private readonly WrapperContainer<SndStopAll> _SndStopAll;
	private readonly WrapperContainer<SndSetBgmByMapID> _SndSetBgmByMapID;
	private readonly WrapperContainer<SndSetEnvByMapID> _SndSetEnvByMapID;
	private readonly WrapperContainer<SndPlayEnv> _SndPlayEnv;
	private readonly WrapperContainer<SndStopEnv> _SndStopEnv;
	private readonly WrapperContainer<SndPlayPartVoice> _SndPlayPartVoice;
	private readonly WrapperContainer<CameraShakeAnimStart> _CameraShakeAnimStart;
	private readonly WrapperContainer<CameraShakeAnimStop> _CameraShakeAnimStop;
	private readonly WrapperContainer<CameraShakeAnimSetScale> _CameraShakeAnimSetScale;
	private readonly WrapperContainer<CameraShakeAnimSetSpeed> _CameraShakeAnimSetSpeed;
	private readonly WrapperContainer<CameraShakeProgramStart> _CameraShakeProgramStart;
	private readonly WrapperContainer<CameraShakeProgramStop> _CameraShakeProgramStop;
	private readonly WrapperContainer<SetSchedulerAutoProceedTime> _SetSchedulerAutoProceedTime;
	private readonly WrapperContainer<GetCalendarDay> _GetCalendarDay;
	private readonly WrapperContainer<SetCalendarDay> _SetCalendarDay;
	private readonly WrapperContainer<GetYear> _GetYear;
	private readonly WrapperContainer<SetYear> _SetYear;
	private readonly WrapperContainer<GetMonth> _GetMonth;
	private readonly WrapperContainer<SetMonth> _SetMonth;
	private readonly WrapperContainer<GetDay> _GetDay;
	private readonly WrapperContainer<SetDay> _SetDay;
	private readonly WrapperContainer<GetCalendarDow> _GetCalendarDow;
	private readonly WrapperContainer<SetCalendarDow> _SetCalendarDow;
	private readonly WrapperContainer<GetCalendarTime> _GetCalendarTime;
	private readonly WrapperContainer<SetCalendarTime> _SetCalendarTime;
	private readonly WrapperContainer<IsCalendarHoliday> _IsCalendarHoliday;
	private readonly WrapperContainer<GetCalendarTemperature> _GetCalendarTemperature;
	private readonly WrapperContainer<GetCalendarWeather> _GetCalendarWeather;
	private readonly WrapperContainer<GetCalendarWeatherByPoint> _GetCalendarWeatherByPoint;
	private readonly WrapperContainer<SetCalendarWeather> _SetCalendarWeather;
	private readonly WrapperContainer<GetCalendarGFakeWeather> _GetCalendarGFakeWeather;
	private readonly WrapperContainer<SetCalendarGFakeWeather> _SetCalendarGFakeWeather;
	private readonly WrapperContainer<ClearCalendarGFakeWeather> _ClearCalendarGFakeWeather;
	private readonly WrapperContainer<GetCalendarOverwriteWeatherEndTotalDay> _GetCalendarOverwriteWeatherEndTotalDay;
	private readonly WrapperContainer<IsCalendarOverwriteWeatherEnable> _IsCalendarOverwriteWeatherEnable;
	private readonly WrapperContainer<SetCalendarOverwriteWeather> _SetCalendarOverwriteWeather;
	private readonly WrapperContainer<ClearCalendarOverwriteWeather> _ClearCalendarOverwriteWeather;
	private readonly WrapperContainer<IsCalendarBadWeather> _IsCalendarBadWeather;
	private readonly WrapperContainer<GetCalendarRegion> _GetCalendarRegion;
	private readonly WrapperContainer<SetCalendarRegion> _SetCalendarRegion;
	private readonly WrapperContainer<GetWwbgID> _GetWwbgID;
	private readonly WrapperContainer<SetWwbgID> _SetWwbgID;
	private readonly WrapperContainer<MsgOpen> _MsgOpen;
	private readonly WrapperContainer<MsgGetHandleID> _MsgGetHandleID;
	private readonly WrapperContainer<MsgCheckOpened> _MsgCheckOpened;
	private readonly WrapperContainer<MsgRequest> _MsgRequest;
	private readonly WrapperContainer<MsgRequestID> _MsgRequestID;
	private readonly WrapperContainer<MsgRequestAccessSpot> _MsgRequestAccessSpot;
	private readonly WrapperContainer<MsgRequestAuto> _MsgRequestAuto;
	private readonly WrapperContainer<MsgRequestIDAuto> _MsgRequestIDAuto;
	private readonly WrapperContainer<MsgRequestSystemMessage> _MsgRequestSystemMessage;
	private readonly WrapperContainer<MsgRequestSystemMessageID> _MsgRequestSystemMessageID;
	private readonly WrapperContainer<MsgRequestSubtitles> _MsgRequestSubtitles;
	private readonly WrapperContainer<MsgRequestSubtitlesAuto> _MsgRequestSubtitlesAuto;
	private readonly WrapperContainer<MsgRequestNarration> _MsgRequestNarration;
	private readonly WrapperContainer<MsgRequestSelect> _MsgRequestSelect;
	private readonly WrapperContainer<MsgRequestSelect_CancelExit> _MsgRequestSelect_CancelExit;
	private readonly WrapperContainer<MsgRequestSelectID> _MsgRequestSelectID;
	private readonly WrapperContainer<MsgRequestSystemMessageSelect> _MsgRequestSystemMessageSelect;
	private readonly WrapperContainer<MsgRequestSystemMessageSelectID> _MsgRequestSystemMessageSelectID;
	private readonly WrapperContainer<MsgRequestSelect_Ex> _MsgRequestSelect_Ex;
	private readonly WrapperContainer<MsgRequestSelectID_Ex> _MsgRequestSelectID_Ex;
	private readonly WrapperContainer<MsgRequestSelectAccessSpot> _MsgRequestSelectAccessSpot;
	private readonly WrapperContainer<MsgRequestSelectAccessSpot_Ex> _MsgRequestSelectAccessSpot_Ex;
	private readonly WrapperContainer<MsgRequestSystemMessageSelect_Ex> _MsgRequestSystemMessageSelect_Ex;
	private readonly WrapperContainer<MsgRequestSystemMessageSelectID_Ex> _MsgRequestSystemMessageSelectID_Ex;
	private readonly WrapperContainer<MsgRequestSelect_Shop> _MsgRequestSelect_Shop;
	private readonly WrapperContainer<MsgEnd_KeepVoice> _MsgEnd_KeepVoice;
	private readonly WrapperContainer<MsgCheckEnd> _MsgCheckEnd;
	private readonly WrapperContainer<MsgCheckWindowClosed> _MsgCheckWindowClosed;
	private readonly WrapperContainer<MsgIsSelectWindowOpened> _MsgIsSelectWindowOpened;
	private readonly WrapperContainer<MsgGetSelectedID> _MsgGetSelectedID;
	private readonly WrapperContainer<MsgGetSelectNum> _MsgGetSelectNum;
	private readonly WrapperContainer<MsgCanClose> _MsgCanClose;
	private readonly WrapperContainer<MsgClose> _MsgClose;
	private readonly WrapperContainer<MsgBacklogSeparator> _MsgBacklogSeparator;
	private readonly WrapperContainer<MsgGreetingRequest> _MsgGreetingRequest;
	private readonly WrapperContainer<MsgGreetingRequestID> _MsgGreetingRequestID;
	private readonly WrapperContainer<MsgGreetingRequest_Option> _MsgGreetingRequest_Option;
	private readonly WrapperContainer<MsgGreetingRequestID_Option> _MsgGreetingRequestID_Option;
	private readonly WrapperContainer<MsgGreetingClose> _MsgGreetingClose;
	private readonly WrapperContainer<MsgGreetingCheckEnd> _MsgGreetingCheckEnd;
	private readonly WrapperContainer<MsgSetVariable> _MsgSetVariable;
	private readonly WrapperContainer<MsgSetVariableINT> _MsgSetVariableINT;
	private readonly WrapperContainer<MsgSetVariableMapName> _MsgSetVariableMapName;
	private readonly WrapperContainer<MsgClearVariable> _MsgClearVariable;
	private readonly WrapperContainer<MsgSetSelectMaskID> _MsgSetSelectMaskID;
	private readonly WrapperContainer<MsgSetSelectMaskLabel> _MsgSetSelectMaskLabel;
	private readonly WrapperContainer<MsgSetSelectMask> _MsgSetSelectMask;
	private readonly WrapperContainer<MsgSystemConfirm> _MsgSystemConfirm;
	private readonly WrapperContainer<MsgSystemConfirmCheckEnd> _MsgSystemConfirmCheckEnd;
	private readonly WrapperContainer<MsgSystemConfirmGetSelectedID> _MsgSystemConfirmGetSelectedID;
	private readonly WrapperContainer<MsgReportOpen> _MsgReportOpen;
	private readonly WrapperContainer<MsgReportOpenID> _MsgReportOpenID;
	private readonly WrapperContainer<MsgReportOpenType> _MsgReportOpenType;
	private readonly WrapperContainer<MsgReportOpenTypeID> _MsgReportOpenTypeID;
	private readonly WrapperContainer<MsgReportOpenEx> _MsgReportOpenEx;
	private readonly WrapperContainer<MsgReportOpenIDEx> _MsgReportOpenIDEx;
	private readonly WrapperContainer<MsgReportClearRequested> _MsgReportClearRequested;
	private readonly WrapperContainer<MsgBustupSetFace> _MsgBustupSetFace;
	private readonly WrapperContainer<MsgBustupChangeFace> _MsgBustupChangeFace;
	private readonly WrapperContainer<MsgBustupSetOFF> _MsgBustupSetOFF;
	private readonly WrapperContainer<MsgBustupSetCostume> _MsgBustupSetCostume;
	private readonly WrapperContainer<TutorialWindowStart> _TutorialWindowStart;
	private readonly WrapperContainer<IsTutorialWindowReady> _IsTutorialWindowReady;
	private readonly WrapperContainer<TutorialWindowOpen> _TutorialWindowOpen;
	private readonly WrapperContainer<TutorialWindowIsEnd> _TutorialWindowIsEnd;
	private readonly WrapperContainer<TutorialWindowEnd> _TutorialWindowEnd;
	private readonly WrapperContainer<EventUIBegin> _EventUIBegin;
	private readonly WrapperContainer<EventUIEnd> _EventUIEnd;
	private readonly WrapperContainer<EventMessageBgClose> _EventMessageBgClose;
	private readonly WrapperContainer<WipeStart> _WipeStart;
	private readonly WrapperContainer<IsWipeStarted> _IsWipeStarted;
	private readonly WrapperContainer<WipeIsEnd> _WipeIsEnd;
	private readonly WrapperContainer<WipePreRead> _WipePreRead;
	private readonly WrapperContainer<EventWipeStartOut> _EventWipeStartOut;
	private readonly WrapperContainer<EventWipeStartIn> _EventWipeStartIn;
	private readonly WrapperContainer<EventWipeIsOutEnd> _EventWipeIsOutEnd;
	private readonly WrapperContainer<EventWipeIsOutPlayEnd> _EventWipeIsOutPlayEnd;
	private readonly WrapperContainer<EventWipeIsInEnd> _EventWipeIsInEnd;
	private readonly WrapperContainer<WipeAreaChangeStart> _WipeAreaChangeStart;
	private readonly WrapperContainer<WipeAreaChangeStartBoat> _WipeAreaChangeStartBoat;
	private readonly WrapperContainer<WipeAreaChangeOutIsEnd> _WipeAreaChangeOutIsEnd;
	private readonly WrapperContainer<WipeAreaChangeInIsEnd> _WipeAreaChangeInIsEnd;
	private readonly WrapperContainer<WipeAreaChangeInStart> _WipeAreaChangeInStart;
	private readonly WrapperContainer<WipeIsNeedToWaitOut> _WipeIsNeedToWaitOut;
	private readonly WrapperContainer<FadeIn> _FadeIn;
	private readonly WrapperContainer<FadeOut> _FadeOut;
	private readonly WrapperContainer<FadeIsEnd> _FadeIsEnd;
	private readonly WrapperContainer<AnimFadeOut> _AnimFadeOut;
	private readonly WrapperContainer<EventFadeSetPartsBehavior> _EventFadeSetPartsBehavior;
	private readonly WrapperContainer<EventFadeOut> _EventFadeOut;
	private readonly WrapperContainer<EventFadeIn> _EventFadeIn;
	private readonly WrapperContainer<FadeOut_Plain> _FadeOut_Plain;
	private readonly WrapperContainer<EventFadeOut_Plain> _EventFadeOut_Plain;
	private readonly WrapperContainer<FadeWipeIsEndOut> _FadeWipeIsEndOut;
	private readonly WrapperContainer<ResrcReloadClothDataByCurrentSequence> _ResrcReloadClothDataByCurrentSequence;
	private readonly WrapperContainer<ResrcClothStatSetting> _ResrcClothStatSetting;
	private readonly WrapperContainer<ResrcGetClothStatSetting> _ResrcGetClothStatSetting;
	private readonly WrapperContainer<ResrcSearchFieldCharModel> _ResrcSearchFieldCharModel;
	private readonly WrapperContainer<ResrcSearchUniqID> _ResrcSearchUniqID;
	private readonly WrapperContainer<ResrcGetGroupIdNum> _ResrcGetGroupIdNum;
	private readonly WrapperContainer<ResrcGetGroupId> _ResrcGetGroupId;
	private readonly WrapperContainer<ResrcGetFaceObjectNum> _ResrcGetFaceObjectNum;
	private readonly WrapperContainer<ResrcGetFaceObject> _ResrcGetFaceObject;
	private readonly WrapperContainer<ResrcRead> _ResrcRead;
	private readonly WrapperContainer<ResrcReadWithUid> _ResrcReadWithUid;
	private readonly WrapperContainer<ResrcRead_ATypeModel> _ResrcRead_ATypeModel;
	private readonly WrapperContainer<ResrcReadBaseAnimation> _ResrcReadBaseAnimation;
	private readonly WrapperContainer<ResrcReadEventBaseAnimation> _ResrcReadEventBaseAnimation;
	private readonly WrapperContainer<ResrcSync> _ResrcSync;
	private readonly WrapperContainer<ResrcDestroy> _ResrcDestroy;
	private readonly WrapperContainer<ResrcBgCacheDestroy> _ResrcBgCacheDestroy;
	private readonly WrapperContainer<ResrcAtachScene> _ResrcAtachScene;
	private readonly WrapperContainer<ResrcDetachScene> _ResrcDetachScene;
	private readonly WrapperContainer<ResrcCameraSet> _ResrcCameraSet;
	private readonly WrapperContainer<ResrcCameraReset> _ResrcCameraReset;
	private readonly WrapperContainer<ResrcSetVisible> _ResrcSetVisible;
	private readonly WrapperContainer<ResrcGetVisible> _ResrcGetVisible;
	private readonly WrapperContainer<ResrcSetVisibleGID> _ResrcSetVisibleGID;
	private readonly WrapperContainer<ResrcGetVisibleGID> _ResrcGetVisibleGID;
	private readonly WrapperContainer<ResrcSetTranslate> _ResrcSetTranslate;
	private readonly WrapperContainer<ResrcSetRotate> _ResrcSetRotate;
	private readonly WrapperContainer<ResrcSetTranslateToResrc> _ResrcSetTranslateToResrc;
	private readonly WrapperContainer<ResrcSetScale> _ResrcSetScale;
	private readonly WrapperContainer<ResrcAdjustGpPos> _ResrcAdjustGpPos;
	private readonly WrapperContainer<ResrcSetAnim> _ResrcSetAnim;
	private readonly WrapperContainer<ResrcSetAnimNext> _ResrcSetAnimNext;
	private readonly WrapperContainer<ResrcSetAnimWithoutSE> _ResrcSetAnimWithoutSE;
	private readonly WrapperContainer<ResrcSyncAnim> _ResrcSyncAnim;
	private readonly WrapperContainer<ResrcSetAnimSpeed> _ResrcSetAnimSpeed;
	private readonly WrapperContainer<ResrcSetAnimSpeedNext> _ResrcSetAnimSpeedNext;
	private readonly WrapperContainer<ResrcSetAnimCurrentTime> _ResrcSetAnimCurrentTime;
	private readonly WrapperContainer<ResrcGetAnimDuration> _ResrcGetAnimDuration;
	private readonly WrapperContainer<ResrcAddColObject> _ResrcAddColObject;
	private readonly WrapperContainer<ResrcRebuildColObject> _ResrcRebuildColObject;
	private readonly WrapperContainer<ResrcIsContainLayoutName> _ResrcIsContainLayoutName;
	private readonly WrapperContainer<PostLoadSearchByUidInObj> _PostLoadSearchByUidInObj;
	private readonly WrapperContainer<PostLoadSearchByUidInDoor> _PostLoadSearchByUidInDoor;
	private readonly WrapperContainer<PostLoadGetGidNum> _PostLoadGetGidNum;
	private readonly WrapperContainer<PostLoadGetGidByIndex> _PostLoadGetGidByIndex;
	private readonly WrapperContainer<PostLoadGetEffectNum> _PostLoadGetEffectNum;
	private readonly WrapperContainer<PostLoadGetEffectByIndex> _PostLoadGetEffectByIndex;
	private readonly WrapperContainer<PostLoadConnectBgMng> _PostLoadConnectBgMng;
	private readonly WrapperContainer<PostLoadAdjustGpPos> _PostLoadAdjustGpPos;
	private readonly WrapperContainer<PostLoadAddColObject> _PostLoadAddColObject;
	private readonly WrapperContainer<PostLoadSetVisibleByGidInObj> _PostLoadSetVisibleByGidInObj;
	private readonly WrapperContainer<PostLoadSetEnableBgData> _PostLoadSetEnableBgData;
	private readonly WrapperContainer<GetPlayerUnitID> _GetPlayerUnitID;
	private readonly WrapperContainer<UnitGetLevel> _UnitGetLevel;
	private readonly WrapperContainer<UnitGetMaxHP> _UnitGetMaxHP;
	private readonly WrapperContainer<UnitGetParam> _UnitGetParam;
	private readonly WrapperContainer<UnitGetEquipWeaponParam> _UnitGetEquipWeaponParam;
	private readonly WrapperContainer<UnitGetEquipArmorParam> _UnitGetEquipArmorParam;
	private readonly WrapperContainer<UnitGetAffinity> _UnitGetAffinity;
	private readonly WrapperContainer<UnitGetAffinityType> _UnitGetAffinityType;
	private readonly WrapperContainer<UnitFullRecoveryAll> _UnitFullRecoveryAll;
	private readonly WrapperContainer<UnitHPRecoveryAll> _UnitHPRecoveryAll;
	private readonly WrapperContainer<UnitMPRecoveryAll> _UnitMPRecoveryAll;
	private readonly WrapperContainer<UnitBadStatusRecoveryAll> _UnitBadStatusRecoveryAll;
	private readonly WrapperContainer<CharaAddMaxHP> _CharaAddMaxHP;
	private readonly WrapperContainer<CharaAddHP> _CharaAddHP;
	private readonly WrapperContainer<CharaRecoveryHP> _CharaRecoveryHP;
	private readonly WrapperContainer<CharaAddMaxMP> _CharaAddMaxMP;
	private readonly WrapperContainer<CharaRecoveryMP> _CharaRecoveryMP;
	private readonly WrapperContainer<CharaRecoveryBadStatus> _CharaRecoveryBadStatus;
	private readonly WrapperContainer<CharaGetClassID> _CharaGetClassID;
	private readonly WrapperContainer<CharaSetClass> _CharaSetClass;
	private readonly WrapperContainer<CharaAddBaseParam> _CharaAddBaseParam;
	private readonly WrapperContainer<CharaSetEquip> _CharaSetEquip;
	private readonly WrapperContainer<CharaGetEquip> _CharaGetEquip;
	private readonly WrapperContainer<AddNotCompanionCharaEquip> _AddNotCompanionCharaEquip;
	private readonly WrapperContainer<AnalyzeOpenAttribute> _AnalyzeOpenAttribute;
	private readonly WrapperContainer<FldVoicePackOpen> _FldVoicePackOpen;
	private readonly WrapperContainer<FldVoicePackIsEndOpen> _FldVoicePackIsEndOpen;
	private readonly WrapperContainer<FldVoicePackSetActive> _FldVoicePackSetActive;
	private readonly WrapperContainer<FldVoicePackClose> _FldVoicePackClose;
	private readonly WrapperContainer<FldAccessSpotInitEveryDay> _FldAccessSpotInitEveryDay;
	private readonly WrapperContainer<FldSpecialDayGet> _FldSpecialDayGet;
	private readonly WrapperContainer<FldEventRewardSet_VariableBufferByUpPcParam> _FldEventRewardSet_VariableBufferByUpPcParam;
	private readonly WrapperContainer<FldEventRewardGet_TravelersVoiceID> _FldEventRewardGet_TravelersVoiceID;
	private readonly WrapperContainer<FldEventRewardGet_PcParam> _FldEventRewardGet_PcParam;
	private readonly WrapperContainer<FldEventRewardGet_ItemID> _FldEventRewardGet_ItemID;
	private readonly WrapperContainer<FldEventRewardGet_ItemNum> _FldEventRewardGet_ItemNum;
	private readonly WrapperContainer<FldEventRewardGet_Money> _FldEventRewardGet_Money;
	private readonly WrapperContainer<FldEventRewardGet_Mag> _FldEventRewardGet_Mag;
	private readonly WrapperContainer<FldEventRewardGet_CharaID> _FldEventRewardGet_CharaID;
	private readonly WrapperContainer<FldEventRewardGet_Parameter> _FldEventRewardGet_Parameter;
	private readonly WrapperContainer<FldEventRewardGet_MaxHP> _FldEventRewardGet_MaxHP;
	private readonly WrapperContainer<FldEventRewardGet_MaxMP> _FldEventRewardGet_MaxMP;
	private readonly WrapperContainer<FldEventRewardGet_ATCategoryID> _FldEventRewardGet_ATCategoryID;
	private readonly WrapperContainer<FldEventRewardGet_ATCategoryExp> _FldEventRewardGet_ATCategoryExp;
	private readonly WrapperContainer<FldEventRewardGet_QuestID> _FldEventRewardGet_QuestID;
	private readonly WrapperContainer<FldGetCurrentMapID> _FldGetCurrentMapID;
	private readonly WrapperContainer<FldGetPreMapID> _FldGetPreMapID;
	private readonly WrapperContainer<FldSetMapEntered> _FldSetMapEntered;
	private readonly WrapperContainer<FldGetCurrentMapZoneID> _FldGetCurrentMapZoneID;
	private readonly WrapperContainer<FldDoorSaveDataClear> _FldDoorSaveDataClear;
	private readonly WrapperContainer<FldGetSeason> _FldGetSeason;
	private readonly WrapperContainer<FldCameraIsEndImmidiateChange> _FldCameraIsEndImmidiateChange;
	private readonly WrapperContainer<FldTopUIClose> _FldTopUIClose;
	private readonly WrapperContainer<FldTopUIIsClosed> _FldTopUIIsClosed;
	private readonly WrapperContainer<FldPreKeyFreeUIOpen> _FldPreKeyFreeUIOpen;
	private readonly WrapperContainer<FldPreKeyFreeUIClose> _FldPreKeyFreeUIClose;
	private readonly WrapperContainer<FldMapGetCategory> _FldMapGetCategory;
	private readonly WrapperContainer<FldMapGetRegion> _FldMapGetRegion;
	private readonly WrapperContainer<FldMapGetGenericMapType> _FldMapGetGenericMapType;
	private readonly WrapperContainer<FldScriptFuncGetArg_Int> _FldScriptFuncGetArg_Int;
	private readonly WrapperContainer<FldScriptFuncGetArg_Float> _FldScriptFuncGetArg_Float;
	private readonly WrapperContainer<FldScriptFuncGetArg_Bool> _FldScriptFuncGetArg_Bool;
	private readonly WrapperContainer<FldScriptFuncSetResult_Int> _FldScriptFuncSetResult_Int;
	private readonly WrapperContainer<FldScriptFuncSetResult_Float> _FldScriptFuncSetResult_Float;
	private readonly WrapperContainer<FldScriptFuncSetResult_Bool> _FldScriptFuncSetResult_Bool;
	private readonly WrapperContainer<FldMorningSetStatusIndex> _FldMorningSetStatusIndex;
	private readonly WrapperContainer<FldDinnerSetStatusIndex> _FldDinnerSetStatusIndex;
	private readonly WrapperContainer<FldTravelGetZoneIDByMapID> _FldTravelGetZoneIDByMapID;
	private readonly WrapperContainer<FldTravelSetMoveType> _FldTravelSetMoveType;
	private readonly WrapperContainer<FldTravelGetMoveType> _FldTravelGetMoveType;
	private readonly WrapperContainer<FldTravelIsCarMove> _FldTravelIsCarMove;
	private readonly WrapperContainer<FldTravelGetNowPathID> _FldTravelGetNowPathID;
	private readonly WrapperContainer<FldTravelGetQuestID> _FldTravelGetQuestID;
	private readonly WrapperContainer<FldTravelGetMsgNum> _FldTravelGetMsgNum;
	private readonly WrapperContainer<FldTravelMsgRequest> _FldTravelMsgRequest;
	private readonly WrapperContainer<FldTravelIsSeason> _FldTravelIsSeason;
	private readonly WrapperContainer<FldTravelIsNeedTimeZoneTransitionDirection> _FldTravelIsNeedTimeZoneTransitionDirection;
	private readonly WrapperContainer<FldTravelResetTimeZoneTransitionExecutionHistory> _FldTravelResetTimeZoneTransitionExecutionHistory;
	private readonly WrapperContainer<FldCookItemReset> _FldCookItemReset;
	private readonly WrapperContainer<FldPresetCharaArchitype> _FldPresetCharaArchitype;
	private readonly WrapperContainer<ElectionRankUp_Rival> _ElectionRankUp_Rival;
	private readonly WrapperContainer<ElectionRankUp_PlaySpot> _ElectionRankUp_PlaySpot;
	private readonly WrapperContainer<ElectionRankUp_Follower> _ElectionRankUp_Follower;
	private readonly WrapperContainer<Election_Daily_Process> _Election_Daily_Process;
	private readonly WrapperContainer<ElectionRankUp_IsEnd> _ElectionRankUp_IsEnd;
	private readonly WrapperContainer<Election_SetRank> _Election_SetRank;
	private readonly WrapperContainer<Election_SetRankByFlag> _Election_SetRankByFlag;
	private readonly WrapperContainer<Election_IsHighestRank> _Election_IsHighestRank;
	private readonly WrapperContainer<Election_Display_Open> _Election_Display_Open;
	private readonly WrapperContainer<Election_Display_Close> _Election_Display_Close;
	private readonly WrapperContainer<BtlGetEncountIDByPack> _BtlGetEncountIDByPack;
	private readonly WrapperContainer<BtlLoadPrereadData> _BtlLoadPrereadData;
	private readonly WrapperContainer<BtlLoadPrereadMultiDataByPack> _BtlLoadPrereadMultiDataByPack;
	private readonly WrapperContainer<BtlLoadPrereadRandomDataByPack> _BtlLoadPrereadRandomDataByPack;
	private readonly WrapperContainer<BtlIsLoadedPrereadData> _BtlIsLoadedPrereadData;
	private readonly WrapperContainer<BtlGetResult> _BtlGetResult;
	private readonly WrapperContainer<BtlGetElapsedPlayerTurn> _BtlGetElapsedPlayerTurn;
	private readonly WrapperContainer<BtlGetGameOverSelectId> _BtlGetGameOverSelectId;
	private readonly WrapperContainer<SeqCallField_MapID> _SeqCallField_MapID;
	private readonly WrapperContainer<SeqCallField_MapIDByNpcPos> _SeqCallField_MapIDByNpcPos;
	private readonly WrapperContainer<SeqCallField_BgID> _SeqCallField_BgID;
	private readonly WrapperContainer<SeqCallField_Eva> _SeqCallField_Eva;
	private readonly WrapperContainer<SeqCallField_EvaPlayerPos> _SeqCallField_EvaPlayerPos;
	private readonly WrapperContainer<SeqCallField_MapID_DungeonEvent> _SeqCallField_MapID_DungeonEvent;
	private readonly WrapperContainer<SeqCallField_MapIDByNpcPos_DungeonEvent> _SeqCallField_MapIDByNpcPos_DungeonEvent;
	private readonly WrapperContainer<SeqCallField_Eva_DungeonEvent> _SeqCallField_Eva_DungeonEvent;
	private readonly WrapperContainer<SeqCallField_EvaPlayerPos_DungeonEvent> _SeqCallField_EvaPlayerPos_DungeonEvent;
	private readonly WrapperContainer<SeqFieldFadeInLockOff> _SeqFieldFadeInLockOff;
	private readonly WrapperContainer<SeqExistFieldEva> _SeqExistFieldEva;
	private readonly WrapperContainer<SeqExistField> _SeqExistField;
	private readonly WrapperContainer<SeqExistFieldByUid> _SeqExistFieldByUid;
	private readonly WrapperContainer<SeqReadyField> _SeqReadyField;
	private readonly WrapperContainer<SeqIdleField> _SeqIdleField;
	private readonly WrapperContainer<SeqFieldIsCanUseCommand> _SeqFieldIsCanUseCommand;
	private readonly WrapperContainer<SeqEndWait> _SeqEndWait;
	private readonly WrapperContainer<SeqCallTitle> _SeqCallTitle;
	private readonly WrapperContainer<SeqCallCamp> _SeqCallCamp;
	private readonly WrapperContainer<SeqCallEvent> _SeqCallEvent;
	private readonly WrapperContainer<SeqExistEvent> _SeqExistEvent;
	private readonly WrapperContainer<SeqCallModelViewer_1031> _SeqCallModelViewer_1031;
	private readonly WrapperContainer<SeqCallCalendar> _SeqCallCalendar;
	private readonly WrapperContainer<SeqCallCalendarMDT> _SeqCallCalendarMDT;
	private readonly WrapperContainer<SeqExistCalendar> _SeqExistCalendar;
	private readonly WrapperContainer<SeqCallBattle> _SeqCallBattle;
	private readonly WrapperContainer<SeqCallBattleByPack> _SeqCallBattleByPack;
	private readonly WrapperContainer<SeqExistBattle> _SeqExistBattle;
	private readonly WrapperContainer<SeqCurrentDestroy> _SeqCurrentDestroy;
	private readonly WrapperContainer<SeqCallStartMenu> _SeqCallStartMenu;
	private readonly WrapperContainer<SeqSetSoftResetEnable> _SeqSetSoftResetEnable;
	private readonly WrapperContainer<NovelStart> _NovelStart;
	private readonly WrapperContainer<NovelIsReady> _NovelIsReady;
	private readonly WrapperContainer<NovelEnd> _NovelEnd;
	private readonly WrapperContainer<NovelIsEnd> _NovelIsEnd;
	private readonly WrapperContainer<WorldMapStart> _WorldMapStart;
	private readonly WrapperContainer<WorldMapIsReady> _WorldMapIsReady;
	private readonly WrapperContainer<WorldMapOpen> _WorldMapOpen;
	private readonly WrapperContainer<WorldMapOpenNowMap> _WorldMapOpenNowMap;
	private readonly WrapperContainer<WorldMapIsOpened> _WorldMapIsOpened;
	private readonly WrapperContainer<WorldMapClose> _WorldMapClose;
	private readonly WrapperContainer<WorldMapIsClosed> _WorldMapIsClosed;
	private readonly WrapperContainer<WorldMapGetSelected> _WorldMapGetSelected;
	private readonly WrapperContainer<WorldMapEnd> _WorldMapEnd;
	private readonly WrapperContainer<MapOpen> _MapOpen;
	private readonly WrapperContainer<MapOpenEx> _MapOpenEx;
	private readonly WrapperContainer<MapOpenWithID> _MapOpenWithID;
	private readonly WrapperContainer<MapIsEnd> _MapIsEnd;
	private readonly WrapperContainer<MapIsShortcut> _MapIsShortcut;
	private readonly WrapperContainer<GetShortcutMapID> _GetShortcutMapID;
	private readonly WrapperContainer<GetShortcutPositionID> _GetShortcutPositionID;
	private readonly WrapperContainer<ItemGetWindowEventOpen> _ItemGetWindowEventOpen;
	private readonly WrapperContainer<ItemGetWindowIsEnd> _ItemGetWindowIsEnd;
	private readonly WrapperContainer<ItemGetTreasure> _ItemGetTreasure;
	private readonly WrapperContainer<ItemGet> _ItemGet;
	private readonly WrapperContainer<FclShopStart> _FclShopStart;
	private readonly WrapperContainer<FclShopIsEnd> _FclShopIsEnd;
	private readonly WrapperContainer<FclShopGetItemID> _FclShopGetItemID;
	private readonly WrapperContainer<FclShopIsFirstInfoItem> _FclShopIsFirstInfoItem;
	private readonly WrapperContainer<FclShopGetSelectedMenu> _FclShopGetSelectedMenu;
	private readonly WrapperContainer<FclShopExit> _FclShopExit;
	private readonly WrapperContainer<FclRecruitmentStart> _FclRecruitmentStart;
	private readonly WrapperContainer<FclRecruitmentTitleStart> _FclRecruitmentTitleStart;
	private readonly WrapperContainer<FclRecruitmentIsClearEvent> _FclRecruitmentIsClearEvent;
	private readonly WrapperContainer<FclRecruitmentIsEnd> _FclRecruitmentIsEnd;
	private readonly WrapperContainer<FclRecruitmentExit> _FclRecruitmentExit;
	private readonly WrapperContainer<FclNameEntryStart> _FclNameEntryStart;
	private readonly WrapperContainer<FclNameEntryIsEnd> _FclNameEntryIsEnd;
	private readonly WrapperContainer<FclPlayerNameEntryStart> _FclPlayerNameEntryStart;
	private readonly WrapperContainer<FclPlayerNameEntryIsEnd> _FclPlayerNameEntryIsEnd;
	private readonly WrapperContainer<DifficultySelectStart> _DifficultySelectStart;
	private readonly WrapperContainer<DifficultySelectIsReady> _DifficultySelectIsReady;
	private readonly WrapperContainer<DifficultySelectOpen> _DifficultySelectOpen;
	private readonly WrapperContainer<DifficultySelectIsEnd> _DifficultySelectIsEnd;
	private readonly WrapperContainer<DifficultySelectDestroy> _DifficultySelectDestroy;
	private readonly WrapperContainer<AcademiaStart> _AcademiaStart;
	private readonly WrapperContainer<AcademiaWaitUIOpend> _AcademiaWaitUIOpend;
	private readonly WrapperContainer<AcademiaIsEnd> _AcademiaIsEnd;
	private readonly WrapperContainer<AcademiaIsTopMenu> _AcademiaIsTopMenu;
	private readonly WrapperContainer<AcademiaItemGetWindowEventOpen> _AcademiaItemGetWindowEventOpen;
	private readonly WrapperContainer<AcademiaTalk_LabelNum> _AcademiaTalk_LabelNum;
	private readonly WrapperContainer<AcademiaTalk_RequestMessage> _AcademiaTalk_RequestMessage;
	private readonly WrapperContainer<AcademiaLearnTalk_GetClassID> _AcademiaLearnTalk_GetClassID;
	private readonly WrapperContainer<AcademiaLearnTalk_GetCharaID> _AcademiaLearnTalk_GetCharaID;
	private readonly WrapperContainer<AcademiaLearnTalk_GetNeedMag> _AcademiaLearnTalk_GetNeedMag;
	private readonly WrapperContainer<AcademiaLearnTalk_SetVariableBufferClass> _AcademiaLearnTalk_SetVariableBufferClass;
	private readonly WrapperContainer<AcademiaLearnTalk_NotDispAcademia> _AcademiaLearnTalk_NotDispAcademia;
	private readonly WrapperContainer<AcademiaLearnTalk_DispAcademia> _AcademiaLearnTalk_DispAcademia;
	private readonly WrapperContainer<DateProgressUI_Start> _DateProgressUI_Start;
	private readonly WrapperContainer<DateProgressUI_IsReady> _DateProgressUI_IsReady;
	private readonly WrapperContainer<DateProgressUI_Open> _DateProgressUI_Open;
	private readonly WrapperContainer<DateProgressUI_OpenNoMessage> _DateProgressUI_OpenNoMessage;
	private readonly WrapperContainer<DateProgressUI_IsClosed> _DateProgressUI_IsClosed;
	private readonly WrapperContainer<DateProgressUI_End> _DateProgressUI_End;
	private readonly WrapperContainer<DateUI_ChangeTime> _DateUI_ChangeTime;
	private readonly WrapperContainer<Quest_GetStatus> _Quest_GetStatus;
	private readonly WrapperContainer<Quest_SetState_Obtained> _Quest_SetState_Obtained;
	private readonly WrapperContainer<Quest_SetState_Accepted> _Quest_SetState_Accepted;
	private readonly WrapperContainer<Quest_SetState_ReadyToDebrief> _Quest_SetState_ReadyToDebrief;
	private readonly WrapperContainer<Quest_SetState_Completed> _Quest_SetState_Completed;
	private readonly WrapperContainer<Quest_SetState_Expired> _Quest_SetState_Expired;
	private readonly WrapperContainer<Quest_GetProgression> _Quest_GetProgression;
	private readonly WrapperContainer<Quest_AdvanceProgression> _Quest_AdvanceProgression;
	private readonly WrapperContainer<Quest_SetProgression> _Quest_SetProgression;
	private readonly WrapperContainer<Quest_SetDestinationOpen> _Quest_SetDestinationOpen;
	private readonly WrapperContainer<Quest_IsDestinationOpened> _Quest_IsDestinationOpened;
	private readonly WrapperContainer<Quest_GetRemainDays> _Quest_GetRemainDays;
	private readonly WrapperContainer<Quest_GetTargetEnemyGoalCount> _Quest_GetTargetEnemyGoalCount;
	private readonly WrapperContainer<Quest_GetTargetEnemyNowCount> _Quest_GetTargetEnemyNowCount;
	private readonly WrapperContainer<Quest_GetTargetEnemyID> _Quest_GetTargetEnemyID;
	private readonly WrapperContainer<Quest_GetTargetItemID> _Quest_GetTargetItemID;
	private readonly WrapperContainer<Quest_Change_RewardMoney_Type> _Quest_Change_RewardMoney_Type;
	private readonly WrapperContainer<Quest_GetRewardMoney> _Quest_GetRewardMoney;
	private readonly WrapperContainer<Quest_Daily_Process> _Quest_Daily_Process;
	private readonly WrapperContainer<Quest_GetNum_ReadyToDebrief> _Quest_GetNum_ReadyToDebrief;
	private readonly WrapperContainer<Quest_GetNumSpecifiedDaysToLimit> _Quest_GetNumSpecifiedDaysToLimit;
	private readonly WrapperContainer<QuestUI_Start> _QuestUI_Start;
	private readonly WrapperContainer<QuestUI_IsReady> _QuestUI_IsReady;
	private readonly WrapperContainer<QuestUI_Open_Accept> _QuestUI_Open_Accept;
	private readonly WrapperContainer<QuestUI_Open_Clear> _QuestUI_Open_Clear;
	private readonly WrapperContainer<QuestUI_IsClosed> _QuestUI_IsClosed;
	private readonly WrapperContainer<QuestUI_End> _QuestUI_End;
	private readonly WrapperContainer<BountyUI_Start> _BountyUI_Start;
	private readonly WrapperContainer<BountyUI_IsReady> _BountyUI_IsReady;
	private readonly WrapperContainer<BountyUI_Open_Accept> _BountyUI_Open_Accept;
	private readonly WrapperContainer<BountyUI_Open_Clear> _BountyUI_Open_Clear;
	private readonly WrapperContainer<BountyUI_IsClosed> _BountyUI_IsClosed;
	private readonly WrapperContainer<BountyUI_End> _BountyUI_End;
	private readonly WrapperContainer<FollowerUI_Start> _FollowerUI_Start;
	private readonly WrapperContainer<FollowerUI_IsEnd> _FollowerUI_IsEnd;
	private readonly WrapperContainer<GetFollowerID_OnRankUpScript> _GetFollowerID_OnRankUpScript;
	private readonly WrapperContainer<GetFollowerRank_OnRankUpScript> _GetFollowerRank_OnRankUpScript;
	private readonly WrapperContainer<SortieUI_Start> _SortieUI_Start;
	private readonly WrapperContainer<SortieUI_IsReady> _SortieUI_IsReady;
	private readonly WrapperContainer<SortieUI_Open> _SortieUI_Open;
	private readonly WrapperContainer<SortieUI_IsClosed> _SortieUI_IsClosed;
	private readonly WrapperContainer<SortieUI_GetResult> _SortieUI_GetResult;
	private readonly WrapperContainer<SortieUI_End> _SortieUI_End;
	private readonly WrapperContainer<SortieMapUI_Start> _SortieMapUI_Start;
	private readonly WrapperContainer<SortieMapUI_IsReady> _SortieMapUI_IsReady;
	private readonly WrapperContainer<SortieMapUI_Open> _SortieMapUI_Open;
	private readonly WrapperContainer<SortieMapUI_Open_MapPoint> _SortieMapUI_Open_MapPoint;
	private readonly WrapperContainer<SortieMapUI_Open_MapPointByMapID> _SortieMapUI_Open_MapPointByMapID;
	private readonly WrapperContainer<SortieMapUI_Open_Intercity> _SortieMapUI_Open_Intercity;
	private readonly WrapperContainer<SortieMapUI_Open_SelectDestinationPoint> _SortieMapUI_Open_SelectDestinationPoint;
	private readonly WrapperContainer<SortieMapUI_IsClosed> _SortieMapUI_IsClosed;
	private readonly WrapperContainer<SortieMapUI_GetResult> _SortieMapUI_GetResult;
	private readonly WrapperContainer<SortieMapUI_End> _SortieMapUI_End;
	private readonly WrapperContainer<SortieMapUI_SetPlayedPointEffect> _SortieMapUI_SetPlayedPointEffect;
	private readonly WrapperContainer<SortieMapUI_SetPlayedPathEffect> _SortieMapUI_SetPlayedPathEffect;
	private readonly WrapperContainer<SortieMapUI_GetPlayedPointEffect> _SortieMapUI_GetPlayedPointEffect;
	private readonly WrapperContainer<SortieMapUI_GetPlayedPathEffect> _SortieMapUI_GetPlayedPathEffect;
	private readonly WrapperContainer<SortieMapUI_IsEventToolTestMode> _SortieMapUI_IsEventToolTestMode;
	private readonly WrapperContainer<SortieMapUI_SetPlayedAllOpendPointAndPathEffect> _SortieMapUI_SetPlayedAllOpendPointAndPathEffect;
	private readonly WrapperContainer<SortieMapUI_ResetRoute> _SortieMapUI_ResetRoute;
	private readonly WrapperContainer<SortieMapUI_AddRoute> _SortieMapUI_AddRoute;
	private readonly WrapperContainer<SortieMapUIEffect_Start> _SortieMapUIEffect_Start;
	private readonly WrapperContainer<SortieMapUIEffect_IsReady> _SortieMapUIEffect_IsReady;
	private readonly WrapperContainer<SortieMapUIEffect_OpenHighlightPoint> _SortieMapUIEffect_OpenHighlightPoint;
	private readonly WrapperContainer<SortieMapUIEffect_IsOpen> _SortieMapUIEffect_IsOpen;
	private readonly WrapperContainer<SortieMapUIEffect_OpenAutoClose> _SortieMapUIEffect_OpenAutoClose;
	private readonly WrapperContainer<SortieMapUIEffect_OpenPlayerAnime> _SortieMapUIEffect_OpenPlayerAnime;
	private readonly WrapperContainer<SortieMapUIEffect_OpenPlayerAnimeIntercity> _SortieMapUIEffect_OpenPlayerAnimeIntercity;
	private readonly WrapperContainer<SortieMapUIEffect_Close> _SortieMapUIEffect_Close;
	private readonly WrapperContainer<SortieMapUIEffect_IsClosed> _SortieMapUIEffect_IsClosed;
	private readonly WrapperContainer<SortieMapUIEffect_End> _SortieMapUIEffect_End;
	private readonly WrapperContainer<SortieMapUIEffect_AddNewEffect> _SortieMapUIEffect_AddNewEffect;
	private readonly WrapperContainer<SortieMapUI_IsEnableSortie> _SortieMapUI_IsEnableSortie;
	private readonly WrapperContainer<SortieMapUI_IsConnect> _SortieMapUI_IsConnect;
	private readonly WrapperContainer<SortieMapUI_GetPointID> _SortieMapUI_GetPointID;
	private readonly WrapperContainer<SortieMapUI_GetPointMapDataID> _SortieMapUI_GetPointMapDataID;
	private readonly WrapperContainer<SortieMapUI_GetPointPositionID> _SortieMapUI_GetPointPositionID;
	private readonly WrapperContainer<SortieMapUI_GetPointQuestID> _SortieMapUI_GetPointQuestID;
	private readonly WrapperContainer<SortieMapUI_GetMapID> _SortieMapUI_GetMapID;
	private readonly WrapperContainer<SortieMapUI_GetPathNeedDay> _SortieMapUI_GetPathNeedDay;
	private readonly WrapperContainer<SortieMapUI_MoveAutoCursor> _SortieMapUI_MoveAutoCursor;
	private readonly WrapperContainer<SortieMapUI_IsEndMoveAutoCursor> _SortieMapUI_IsEndMoveAutoCursor;
	private readonly WrapperContainer<SortieMapUI_IsFirstMap> _SortieMapUI_IsFirstMap;
	private readonly WrapperContainer<SortieMapUI_IsBadWeather> _SortieMapUI_IsBadWeather;
	private readonly WrapperContainer<SortieMapUI_IsBadWeatherToday> _SortieMapUI_IsBadWeatherToday;
	private readonly WrapperContainer<SortieMapUI_IsOpenArrivalDayWeather> _SortieMapUI_IsOpenArrivalDayWeather;
	private readonly WrapperContainer<SortieMapUI_GetRouteNum> _SortieMapUI_GetRouteNum;
	private readonly WrapperContainer<SortieMapUI_StartRouteSelect> _SortieMapUI_StartRouteSelect;
	private readonly WrapperContainer<SortieMapUI_IsEndRouteSelect> _SortieMapUI_IsEndRouteSelect;
	private readonly WrapperContainer<SortieMapUI_GetRoutePathIDOnSortieScript> _SortieMapUI_GetRoutePathIDOnSortieScript;
	private readonly WrapperContainer<SortieMapUI_GetRoutePointIDOnSortieScript> _SortieMapUI_GetRoutePointIDOnSortieScript;
	private readonly WrapperContainer<SortieMapUI_GetRoutePathIndexMaxOnSortieScript> _SortieMapUI_GetRoutePathIndexMaxOnSortieScript;
	private readonly WrapperContainer<SortieMapUI_GetRoutePathID> _SortieMapUI_GetRoutePathID;
	private readonly WrapperContainer<SortieMapUI_GetRoutePointID> _SortieMapUI_GetRoutePointID;
	private readonly WrapperContainer<SortieMapUI_GetRoutePathIndexMax> _SortieMapUI_GetRoutePathIndexMax;
	private readonly WrapperContainer<SortieMapUI_GetPointType> _SortieMapUI_GetPointType;
	private readonly WrapperContainer<SortieMapUI_GetHapeningIndex> _SortieMapUI_GetHapeningIndex;
	private readonly WrapperContainer<SortieMapUI_SetHapeningOccurred> _SortieMapUI_SetHapeningOccurred;
	private readonly WrapperContainer<SortieMapUI_GetPathMapID> _SortieMapUI_GetPathMapID;
	private readonly WrapperContainer<SortieMapUI_GetHappeningID> _SortieMapUI_GetHappeningID;
	private readonly WrapperContainer<SortieMapUI_GetHappeningArg> _SortieMapUI_GetHappeningArg;
	private readonly WrapperContainer<SortieMapUI_CallEvent> _SortieMapUI_CallEvent;
	private readonly WrapperContainer<SortieMapUI_GetLoadPrereadData> _SortieMapUI_GetLoadPrereadData;
	private readonly WrapperContainer<SortieMapUI_GetLoadPrereadDataByGaisennsha> _SortieMapUI_GetLoadPrereadDataByGaisennsha;
	private readonly WrapperContainer<SortieMapUI_GetMapIDByPoint> _SortieMapUI_GetMapIDByPoint;
	private readonly WrapperContainer<SortieMapUI_GetPosIDByPoint> _SortieMapUI_GetPosIDByPoint;
	private readonly WrapperContainer<SortieMapUI_GetRegionIDByPoint> _SortieMapUI_GetRegionIDByPoint;
	private readonly WrapperContainer<SortieMapUI_GetPointFlagID> _SortieMapUI_GetPointFlagID;
	private readonly WrapperContainer<SortieMapUI_CallPointArriveEvent> _SortieMapUI_CallPointArriveEvent;
	private readonly WrapperContainer<SortieMapUI_CallPointNotHappeningEvent> _SortieMapUI_CallPointNotHappeningEvent;
	private readonly WrapperContainer<SortieMapUI_GetLoadPrereadDataByPoint> _SortieMapUI_GetLoadPrereadDataByPoint;
	private readonly WrapperContainer<SortieMapUI_UnlockPath> _SortieMapUI_UnlockPath;
	private readonly WrapperContainer<SortieMapUI_UnlockPoint> _SortieMapUI_UnlockPoint;
	private readonly WrapperContainer<SortieMapUI_GetPathType> _SortieMapUI_GetPathType;
	private readonly WrapperContainer<SortieMapUI_CurrentPointMessage> _SortieMapUI_CurrentPointMessage;
	private readonly WrapperContainer<SortieMapUI_UpdateSortieTownMap> _SortieMapUI_UpdateSortieTownMap;
	private readonly WrapperContainer<SortieMapUI_InsertPointIntoRoute> _SortieMapUI_InsertPointIntoRoute;
	private readonly WrapperContainer<SortieMapUI_CheckInsertPointIntoRoute> _SortieMapUI_CheckInsertPointIntoRoute;
	private readonly WrapperContainer<SortieMapUI_IsEnableFollowerHelp> _SortieMapUI_IsEnableFollowerHelp;
	private readonly WrapperContainer<SortieMapUI_RequestFollowerHelpChoice> _SortieMapUI_RequestFollowerHelpChoice;
	private readonly WrapperContainer<SortieMapUI_RequestFollowerHelpMsg> _SortieMapUI_RequestFollowerHelpMsg;
	private readonly WrapperContainer<SortieMapUI_GetFollowerHelpID> _SortieMapUI_GetFollowerHelpID;
	private readonly WrapperContainer<SortieMapUI_RequestFollowerHelpSetFlag> _SortieMapUI_RequestFollowerHelpSetFlag;
	private readonly WrapperContainer<SortieMapUI_IsAllViewPointVisited> _SortieMapUI_IsAllViewPointVisited;
	private readonly WrapperContainer<HumanParamUPQuest> _HumanParamUPQuest;
	private readonly WrapperContainer<HumanParamUP1> _HumanParamUP1;
	private readonly WrapperContainer<HumanParamUP2> _HumanParamUP2;
	private readonly WrapperContainer<IsHumanParamUPEnd> _IsHumanParamUPEnd;
	private readonly WrapperContainer<HumanParamGetLevel> _HumanParamGetLevel;
	private readonly WrapperContainer<IllustrationUI_Start> _IllustrationUI_Start;
	private readonly WrapperContainer<IllustrationUI_IsReady> _IllustrationUI_IsReady;
	private readonly WrapperContainer<IllustrationUI_Close> _IllustrationUI_Close;
	private readonly WrapperContainer<IllustrationUI_IsClosed> _IllustrationUI_IsClosed;
	private readonly WrapperContainer<IllustrationUI_End> _IllustrationUI_End;
	private readonly WrapperContainer<FollowerGetRank> _FollowerGetRank;
	private readonly WrapperContainer<FollowerSetRank> _FollowerSetRank;
	private readonly WrapperContainer<FollowerSyncRank> _FollowerSyncRank;
	private readonly WrapperContainer<FollowerGetFriendship> _FollowerGetFriendship;
	private readonly WrapperContainer<FollowerSetFriendship> _FollowerSetFriendship;
	private readonly WrapperContainer<FollowerAddFriendship> _FollowerAddFriendship;
	private readonly WrapperContainer<FollowerClassGrow> _FollowerClassGrow;
	private readonly WrapperContainer<Timer_Start> _Timer_Start;
	private readonly WrapperContainer<Timer_End> _Timer_End;
	private readonly WrapperContainer<Timer_IsActive> _Timer_IsActive;
	private readonly WrapperContainer<Timer_Open> _Timer_Open;
	private readonly WrapperContainer<Timer_Close> _Timer_Close;
	private readonly WrapperContainer<Timer_Pause> _Timer_Pause;
	private readonly WrapperContainer<Timer_Get> _Timer_Get;
	private readonly WrapperContainer<Timer_SetPinchTime> _Timer_SetPinchTime;
	private readonly WrapperContainer<Lotto_CreateUI> _Lotto_CreateUI;
	private readonly WrapperContainer<Lotto_IsReadyUI> _Lotto_IsReadyUI;
	private readonly WrapperContainer<Lotto_DestroyUI> _Lotto_DestroyUI;
	private readonly WrapperContainer<Lotto_OpenWindow> _Lotto_OpenWindow;
	private readonly WrapperContainer<Lotto_IsClosedWindow> _Lotto_IsClosedWindow;
	private readonly WrapperContainer<Lotto_GetNumbers> _Lotto_GetNumbers;
	private readonly WrapperContainer<Lotto_SaveBuyData> _Lotto_SaveBuyData;
	private readonly WrapperContainer<Lotto_DoTheLottery> _Lotto_DoTheLottery;
	private readonly WrapperContainer<Lotto_CalcWinningAmount> _Lotto_CalcWinningAmount;
	private readonly WrapperContainer<Cooking_CreateUI> _Cooking_CreateUI;
	private readonly WrapperContainer<Cooking_IsReadyUI> _Cooking_IsReadyUI;
	private readonly WrapperContainer<Cooking_OpenWindow> _Cooking_OpenWindow;
	private readonly WrapperContainer<Cooking_IsClosed> _Cooking_IsClosed;
	private readonly WrapperContainer<Cooking_DestroyUI> _Cooking_DestroyUI;
	private readonly WrapperContainer<Cooking_GetItem> _Cooking_GetItem;
	private readonly WrapperContainer<Cooking_IsChara> _Cooking_IsChara;
	private readonly WrapperContainer<Cooking_GetChara> _Cooking_GetChara;
	private readonly WrapperContainer<Cooking_IsCancel> _Cooking_IsCancel;
	private readonly WrapperContainer<Cooking_IsCookingRecipe> _Cooking_IsCookingRecipe;
	private readonly WrapperContainer<Cooking_Count> _Cooking_Count;
	private readonly WrapperContainer<Cooking_RecipeGetOpenWindow> _Cooking_RecipeGetOpenWindow;
	private readonly WrapperContainer<Cooking_IsRecipeGetClosed> _Cooking_IsRecipeGetClosed;
	private readonly WrapperContainer<Cooking_IsGetRecipe> _Cooking_IsGetRecipe;
	private readonly WrapperContainer<Cooking_IsGetSpecialRecipe> _Cooking_IsGetSpecialRecipe;
	private readonly WrapperContainer<Cooking_GetSpecialRecipe> _Cooking_GetSpecialRecipe;
	private readonly WrapperContainer<Exp_Add_Character_Hero> _Exp_Add_Character_Hero;
	private readonly WrapperContainer<Exp_Add_Class_Category_Hero> _Exp_Add_Class_Category_Hero;
	private readonly WrapperContainer<Exp_Add_Character_All> _Exp_Add_Character_All;
	private readonly WrapperContainer<Exp_Add_Class_Category_All> _Exp_Add_Class_Category_All;
	private readonly WrapperContainer<Exp_Add_IsClosed> _Exp_Add_IsClosed;
	private readonly WrapperContainer<BattleEventUI_Open> _BattleEventUI_Open;
	private readonly WrapperContainer<BattleEventUI_Close> _BattleEventUI_Close;
	private readonly WrapperContainer<EventUIDisplaySuppressionStart> _EventUIDisplaySuppressionStart;
	private readonly WrapperContainer<EventUIDisplaySuppressionEnd> _EventUIDisplaySuppressionEnd;
	private readonly WrapperContainer<BattleMissionUI_Open> _BattleMissionUI_Open;
	private readonly WrapperContainer<BattleMissionUI_Close> _BattleMissionUI_Close;
	private readonly WrapperContainer<CampStatus_Open> _CampStatus_Open;
	private readonly WrapperContainer<CampStatus_OpenWithFixCharacter> _CampStatus_OpenWithFixCharacter;
	private readonly WrapperContainer<CampStatus_IsClosed> _CampStatus_IsClosed;
	private readonly WrapperContainer<SafeRoomMenuUI_Start> _SafeRoomMenuUI_Start;
	private readonly WrapperContainer<SafeRoomMenuUI_IsReady> _SafeRoomMenuUI_IsReady;
	private readonly WrapperContainer<SafeRoomMenuUI_End> _SafeRoomMenuUI_End;
	private readonly WrapperContainer<SafeRoomMenuUI_Open> _SafeRoomMenuUI_Open;
	private readonly WrapperContainer<SafeRoomMenuUI_IsClosed> _SafeRoomMenuUI_IsClosed;
	private readonly WrapperContainer<SafeRoomMenuUI_GetResult> _SafeRoomMenuUI_GetResult;
	private readonly WrapperContainer<Food_ActivateEffect> _Food_ActivateEffect;
	private readonly WrapperContainer<Food_DeactivateEffect> _Food_DeactivateEffect;
	private readonly WrapperContainer<SortieMeeting_Start> _SortieMeeting_Start;
	private readonly WrapperContainer<SortieMeeting_IsReady> _SortieMeeting_IsReady;
	private readonly WrapperContainer<SortieMeeting_Open> _SortieMeeting_Open;
	private readonly WrapperContainer<SortieMeeting_IsClosed> _SortieMeeting_IsClosed;
	private readonly WrapperContainer<SortieMeeting_End> _SortieMeeting_End;
	private readonly WrapperContainer<GallicaTalk_IsScenario> _GallicaTalk_IsScenario;
	private readonly WrapperContainer<GallicaTalk_Open> _GallicaTalk_Open;
	private readonly WrapperContainer<GallicaTalk_IsClosed> _GallicaTalk_IsClosed;
	private readonly WrapperContainer<Savedata_HeaderStore> _Savedata_HeaderStore;
	private readonly WrapperContainer<Savedata_SaveStart> _Savedata_SaveStart;
	private readonly WrapperContainer<Savedata_SaveStart_NameID> _Savedata_SaveStart_NameID;
	private readonly WrapperContainer<Savedata_SaveStart_Fade> _Savedata_SaveStart_Fade;
	private readonly WrapperContainer<Savedata_SaveStart_NameID_Fade> _Savedata_SaveStart_NameID_Fade;
	private readonly WrapperContainer<Savedata_LoadStart> _Savedata_LoadStart;
	private readonly WrapperContainer<Savedata_Wait> _Savedata_Wait;
	private readonly WrapperContainer<Savedata_ScriptSaveExecute> _Savedata_ScriptSaveExecute;
	private readonly WrapperContainer<Savedata_ScriptLoadExecute> _Savedata_ScriptLoadExecute;
	private readonly WrapperContainer<Savedata_ScriptLoadExecuteSlot> _Savedata_ScriptLoadExecuteSlot;
	private readonly WrapperContainer<Savedata_ScriptLoadIsEnd> _Savedata_ScriptLoadIsEnd;
	private readonly WrapperContainer<IsSavedata_Loaded> _IsSavedata_Loaded;
	private readonly WrapperContainer<Savedata_SystemSaveExecute> _Savedata_SystemSaveExecute;
	private readonly WrapperContainer<Savedata_SystemLoadExecute> _Savedata_SystemLoadExecute;
	private readonly WrapperContainer<SavedataForExpired_SaveStart> _SavedataForExpired_SaveStart;
	private readonly WrapperContainer<SavedataForExpired_LoadStart> _SavedataForExpired_LoadStart;
	private readonly WrapperContainer<SaveData_GameClearData> _SaveData_GameClearData;
	private readonly WrapperContainer<SaveData_GameClearData_NameID> _SaveData_GameClearData_NameID;
	private readonly WrapperContainer<SaveData_GameClearDataAutoSave> _SaveData_GameClearDataAutoSave;
	private readonly WrapperContainer<SaveData_LoadGameSequence> _SaveData_LoadGameSequence;
	private readonly WrapperContainer<MoviePlay> _MoviePlay;
	private readonly WrapperContainer<EventMoviePlay> _EventMoviePlay;
	private readonly WrapperContainer<IsMovieEnd> _IsMovieEnd;
	private readonly WrapperContainer<IsMovieSkipped> _IsMovieSkipped;
	private readonly WrapperContainer<Staffroll_CreateUI> _Staffroll_CreateUI;
	private readonly WrapperContainer<Staffroll_IsReadyUI> _Staffroll_IsReadyUI;
	private readonly WrapperContainer<Staffroll_Open> _Staffroll_Open;
	private readonly WrapperContainer<Staffroll_IsClosed> _Staffroll_IsClosed;
	private readonly WrapperContainer<Staffroll_DestroyUI> _Staffroll_DestroyUI;
	private readonly WrapperContainer<Ending_BG_CreateUI> _Ending_BG_CreateUI;
	private readonly WrapperContainer<Ending_BG_IsReadyUI> _Ending_BG_IsReadyUI;
	private readonly WrapperContainer<Ending_BG_Open1st> _Ending_BG_Open1st;
	private readonly WrapperContainer<Ending_BG_Close1st> _Ending_BG_Close1st;
	private readonly WrapperContainer<Ending_BG_Open2nd> _Ending_BG_Open2nd;
	private readonly WrapperContainer<Ending_BG_Close2nd> _Ending_BG_Close2nd;
	private readonly WrapperContainer<Ending_BG_Open3rd> _Ending_BG_Open3rd;
	private readonly WrapperContainer<Ending_BG_Close3rd> _Ending_BG_Close3rd;
	private readonly WrapperContainer<Ending_BG_IsClosed> _Ending_BG_IsClosed;
	private readonly WrapperContainer<Ending_BG_DestroyUI> _Ending_BG_DestroyUI;
	private readonly WrapperContainer<Ending_Message_CreateUI> _Ending_Message_CreateUI;
	private readonly WrapperContainer<Ending_Message_IsReadyUI> _Ending_Message_IsReadyUI;
	private readonly WrapperContainer<Ending_Message_Open> _Ending_Message_Open;
	private readonly WrapperContainer<Ending_Message_IsClosed> _Ending_Message_IsClosed;
	private readonly WrapperContainer<Ending_Message_DestroyUI> _Ending_Message_DestroyUI;
	private readonly WrapperContainer<Gameover_CreateUI> _Gameover_CreateUI;
	private readonly WrapperContainer<Gameover_IsReadyUI> _Gameover_IsReadyUI;
	private readonly WrapperContainer<Gameover_Open> _Gameover_Open;
	private readonly WrapperContainer<Gameover_IsClosed> _Gameover_IsClosed;
	private readonly WrapperContainer<Gameover_DestroyUI> _Gameover_DestroyUI;
	private readonly WrapperContainer<EventLogAutoEnable> _EventLogAutoEnable;
	private readonly WrapperContainer<EventLogAutoDisable> _EventLogAutoDisable;
	private readonly WrapperContainer<EventStart> _EventStart;
	private readonly WrapperContainer<EventEnd> _EventEnd;
	private readonly WrapperContainer<EventGuideClose> _EventGuideClose;
	private readonly WrapperContainer<AddContent_StartCheckEnabledContent> _AddContent_StartCheckEnabledContent;
	private readonly WrapperContainer<AddContent_FinishedCheckEnabledContent> _AddContent_FinishedCheckEnabledContent;
	private readonly WrapperContainer<AddContent_ExistsEnabledContent> _AddContent_ExistsEnabledContent;
	private readonly WrapperContainer<AddContent_EnabledContent> _AddContent_EnabledContent;
	private readonly WrapperContainer<TravelersVoice_AddUploadValue> _TravelersVoice_AddUploadValue;
	private readonly WrapperContainer<Trophy_Request> _Trophy_Request;
	private readonly WrapperContainer<ScreenCapture_SetEnable> _ScreenCapture_SetEnable;
	private readonly WrapperContainer<ScreenCapture_SetDisable> _ScreenCapture_SetDisable;
	private readonly WrapperContainer<ActivityStart> _ActivityStart;
	private readonly WrapperContainer<ActivityEnd> _ActivityEnd;
	private readonly WrapperContainer<PlayGo_CheckInstalledAllChunks_Request> _PlayGo_CheckInstalledAllChunks_Request;
	private readonly WrapperContainer<PlayGo_CheckInstalledAllChunks_IsEndProc> _PlayGo_CheckInstalledAllChunks_IsEndProc;
	private readonly WrapperContainer<PlayGo_CheckInstalledAllChunks_GetResult> _PlayGo_CheckInstalledAllChunks_GetResult;
	private readonly WrapperContainer<PlayGo_OpenProgressBar_Request> _PlayGo_OpenProgressBar_Request;
	private readonly WrapperContainer<PlayGo_OpenProgressBar_IsEndProc> _PlayGo_OpenProgressBar_IsEndProc;
	private readonly WrapperContainer<GetFaceScalptureMag> _GetFaceScalptureMag;
	private readonly WrapperContainer<OpenFaceScalptureMagUI> _OpenFaceScalptureMagUI;
	private readonly WrapperContainer<IsEndFaceScalptureMagUI> _IsEndFaceScalptureMagUI;
	private readonly WrapperContainer<DebugDrawTexture_Begin> _DebugDrawTexture_Begin;
	private readonly WrapperContainer<DebugDrawTexture_End> _DebugDrawTexture_End;
	private readonly WrapperContainer<DebugPartyPreset> _DebugPartyPreset;
	private readonly WrapperContainer<DebugMorningSetStatusIndex> _DebugMorningSetStatusIndex;
	private readonly WrapperContainer<DebugDinnerSetStatusIndex> _DebugDinnerSetStatusIndex;
	private readonly WrapperContainer<DebugDinnerResetStatusIndex> _DebugDinnerResetStatusIndex;
	private readonly WrapperContainer<DebugInitializeGameID> _DebugInitializeGameID;
	private readonly WrapperContainer<DebugFlagsON> _DebugFlagsON;
	private readonly WrapperContainer<MoviePlay_DEBUG> _MoviePlay_DEBUG;
	private readonly WrapperContainer<DebugSendTestPlayData> _DebugSendTestPlayData;
	private readonly WrapperContainer<TAIL> _TAIL;
	private readonly WrapperContainer<XE_AAAAA> _XE_AAAAA;
	private readonly WrapperContainer<IS_ENTER_PUSHED> _IS_ENTER_PUSHED;
	private readonly WrapperContainer<FldGetMsg> _FldGetMsg;
	private readonly WrapperContainer<FldIsCanUseCommand> _FldIsCanUseCommand;
	private readonly WrapperContainer<FldGetDeltaTime> _FldGetDeltaTime;
	private readonly WrapperContainer<FldSetSceneSpeedRate> _FldSetSceneSpeedRate;
	private readonly WrapperContainer<FldGetStartPosID> _FldGetStartPosID;
	private readonly WrapperContainer<FldGetPosIDByLayoutName> _FldGetPosIDByLayoutName;
	private readonly WrapperContainer<FldIsShingan> _FldIsShingan;
	private readonly WrapperContainer<FldSetShingan> _FldSetShingan;
	private readonly WrapperContainer<FldInitFadeCustom> _FldInitFadeCustom;
	private readonly WrapperContainer<FldInitStopAutoSaveOnFadeIn> _FldInitStopAutoSaveOnFadeIn;
	private readonly WrapperContainer<FldInitIsFadeIn> _FldInitIsFadeIn;
	private readonly WrapperContainer<FldLocalSetInt> _FldLocalSetInt;
	private readonly WrapperContainer<FldLocalGetInt> _FldLocalGetInt;
	private readonly WrapperContainer<FldLocalSetFloat> _FldLocalSetFloat;
	private readonly WrapperContainer<FldLocalGetFloat> _FldLocalGetFloat;
	private readonly WrapperContainer<FldLocalSetFlag> _FldLocalSetFlag;
	private readonly WrapperContainer<FldLocalGetFlag> _FldLocalGetFlag;
	private readonly WrapperContainer<FldBgmSetOverrideByCueID> _FldBgmSetOverrideByCueID;
	private readonly WrapperContainer<FldBgmResetOverride> _FldBgmResetOverride;
	private readonly WrapperContainer<FldBgmSetForceFastBattle> _FldBgmSetForceFastBattle;
	private readonly WrapperContainer<FldSoundEnvSetOverrideByCueID> _FldSoundEnvSetOverrideByCueID;
	private readonly WrapperContainer<FldSoundEnvResetOverride> _FldSoundEnvResetOverride;
	private readonly WrapperContainer<FldEnvLoadOverride> _FldEnvLoadOverride;
	private readonly WrapperContainer<FldEnvLoadOverride_Area> _FldEnvLoadOverride_Area;
	private readonly WrapperContainer<FldEnvIsEndLoadOverride> _FldEnvIsEndLoadOverride;
	private readonly WrapperContainer<FldEnvSetOverrideActive> _FldEnvSetOverrideActive;
	private readonly WrapperContainer<FldTopUISetDefault> _FldTopUISetDefault;
	private readonly WrapperContainer<FldTopUISetFieldEvent> _FldTopUISetFieldEvent;
	private readonly WrapperContainer<FldTopUISetFieldEventNoMessage> _FldTopUISetFieldEventNoMessage;
	private readonly WrapperContainer<FldTopUISetInval> _FldTopUISetInval;
	private readonly WrapperContainer<FldLocationNameUIStopAuto> _FldLocationNameUIStopAuto;
	private readonly WrapperContainer<FldLocationNameUIOpen> _FldLocationNameUIOpen;
	private readonly WrapperContainer<FldLocationNameUIIsEnd> _FldLocationNameUIIsEnd;
	private readonly WrapperContainer<fldChallengeUIStart> _fldChallengeUIStart;
	private readonly WrapperContainer<fldChallengeUIComplete> _fldChallengeUIComplete;
	private readonly WrapperContainer<fldChallengeIsUIEnd> _fldChallengeIsUIEnd;
	private readonly WrapperContainer<FldMapIconUpdateParam> _FldMapIconUpdateParam;
	private readonly WrapperContainer<FldLargeMapOpen> _FldLargeMapOpen;
	private readonly WrapperContainer<FldLargeMapIsClosed> _FldLargeMapIsClosed;
	private readonly WrapperContainer<FldFastBtlIsHaveKilled> _FldFastBtlIsHaveKilled;
	private readonly WrapperContainer<FldFastBtlGetAttackRateType> _FldFastBtlGetAttackRateType;
	private readonly WrapperContainer<FldFastBtlGetAttackRate> _FldFastBtlGetAttackRate;
	private readonly WrapperContainer<FldFastBtlGetAttackRefParameterID> _FldFastBtlGetAttackRefParameterID;
	private readonly WrapperContainer<FldHourGet> _FldHourGet;
	private readonly WrapperContainer<FldHourAdd> _FldHourAdd;
	private readonly WrapperContainer<FldHourSet> _FldHourSet;
	private readonly WrapperContainer<FldHourIsSetEnd> _FldHourIsSetEnd;
	private readonly WrapperContainer<FldHourReset> _FldHourReset;
	private readonly WrapperContainer<FldHourCallScript> _FldHourCallScript;
	private readonly WrapperContainer<FldHourSetSunset> _FldHourSetSunset;
	private readonly WrapperContainer<FldScriptEventAssistSetCameraType> _FldScriptEventAssistSetCameraType;
	private readonly WrapperContainer<FldScriptEventAssistSetCameraParam_Rotate> _FldScriptEventAssistSetCameraParam_Rotate;
	private readonly WrapperContainer<FldScriptEventAssistResetCameraParam> _FldScriptEventAssistResetCameraParam;
	private readonly WrapperContainer<FldScriptEventAssistSetCharaType> _FldScriptEventAssistSetCharaType;
	private readonly WrapperContainer<FldScriptEventAssistAddNpc> _FldScriptEventAssistAddNpc;
	private readonly WrapperContainer<FldScriptEventAssistSetCharaParam_Talk> _FldScriptEventAssistSetCharaParam_Talk;
	private readonly WrapperContainer<FldScriptEventAssistResetCharaParam> _FldScriptEventAssistResetCharaParam;
	private readonly WrapperContainer<FldMorningIsNeed> _FldMorningIsNeed;
	private readonly WrapperContainer<FldMorningStart> _FldMorningStart;
	private readonly WrapperContainer<FldMorningIsReady> _FldMorningIsReady;
	private readonly WrapperContainer<FldMorningEnd> _FldMorningEnd;
	private readonly WrapperContainer<FldMorningGetMsgNum> _FldMorningGetMsgNum;
	private readonly WrapperContainer<FldMoringGetSpeakerID> _FldMoringGetSpeakerID;
	private readonly WrapperContainer<FldMorningMsgRequest> _FldMorningMsgRequest;
	private readonly WrapperContainer<FldMorningTravelLastMessageRequest> _FldMorningTravelLastMessageRequest;
	private readonly WrapperContainer<FldMorningSetupItem> _FldMorningSetupItem;
	private readonly WrapperContainer<FldMorningSetObjVisibleTmpByResrcUid> _FldMorningSetObjVisibleTmpByResrcUid;
	private readonly WrapperContainer<FldMorningSetObjTransformTmpByResrcUid> _FldMorningSetObjTransformTmpByResrcUid;
	private readonly WrapperContainer<FldMorningQuestEventUnexecutedDaysCountReset> _FldMorningQuestEventUnexecutedDaysCountReset;
	private readonly WrapperContainer<FldMorningQuestEventUnexecutedDaysCountUp> _FldMorningQuestEventUnexecutedDaysCountUp;
	private readonly WrapperContainer<FldMorningIsExistAboutD07GK> _FldMorningIsExistAboutD07GK;
	private readonly WrapperContainer<FldMorningGetMsgNum_D07GK> _FldMorningGetMsgNum_D07GK;
	private readonly WrapperContainer<FldMorningMsgRequest_D07GK> _FldMorningMsgRequest_D07GK;
	private readonly WrapperContainer<FldMorningMsgRequest_D07GK_End> _FldMorningMsgRequest_D07GK_End;
	private readonly WrapperContainer<FldDbgGetMorningMsgPattern> _FldDbgGetMorningMsgPattern;
	private readonly WrapperContainer<FldDinnerStart> _FldDinnerStart;
	private readonly WrapperContainer<FldDinnerIsReady> _FldDinnerIsReady;
	private readonly WrapperContainer<FldDinnerEnd> _FldDinnerEnd;
	private readonly WrapperContainer<FldDinnerMsgIsSelectedChoice> _FldDinnerMsgIsSelectedChoice;
	private readonly WrapperContainer<FldDinnerMsgRequest> _FldDinnerMsgRequest;
	private readonly WrapperContainer<FldDinnerGetMsgType> _FldDinnerGetMsgType;
	private readonly WrapperContainer<FldDinnerSetupItem> _FldDinnerSetupItem;
	private readonly WrapperContainer<FldDinnerSetObjVisibleTmpByResrcUid> _FldDinnerSetObjVisibleTmpByResrcUid;
	private readonly WrapperContainer<FldDinnerSetObjTransformTmpByResrcUid> _FldDinnerSetObjTransformTmpByResrcUid;
	private readonly WrapperContainer<FldDinnerResetStatusIndex> _FldDinnerResetStatusIndex;
	private readonly WrapperContainer<FldDinnerUpdateQuestStatus> _FldDinnerUpdateQuestStatus;
	private readonly WrapperContainer<FldDinnerSaveSpotPoint> _FldDinnerSaveSpotPoint;
	private readonly WrapperContainer<FldDinnerSaveRivalPoint> _FldDinnerSaveRivalPoint;
	private readonly WrapperContainer<FldDinnerSaveRivalPath> _FldDinnerSaveRivalPath;
	private readonly WrapperContainer<FldDinnerSaveStay> _FldDinnerSaveStay;
	private readonly WrapperContainer<FldDinnerSaveClassLevel> _FldDinnerSaveClassLevel;
	private readonly WrapperContainer<FldDinnerIsOccurredYestoday> _FldDinnerIsOccurredYestoday;
	private readonly WrapperContainer<FldDinnerUpdateOccurredStatus> _FldDinnerUpdateOccurredStatus;
	private readonly WrapperContainer<FldDinnerUpdateSaveData> _FldDinnerUpdateSaveData;
	private readonly WrapperContainer<FldDbgGetDinnerMsgPattern> _FldDbgGetDinnerMsgPattern;
	private readonly WrapperContainer<FldQuestIsExistCanDebrief> _FldQuestIsExistCanDebrief;
	private readonly WrapperContainer<FldQuestDungeonIsExistEntranceEvent> _FldQuestDungeonIsExistEntranceEvent;
	private readonly WrapperContainer<FldQuestDungeonCallEntranceEvent> _FldQuestDungeonCallEntranceEvent;
	private readonly WrapperContainer<FldKeyFreeHintGetMsgNum> _FldKeyFreeHintGetMsgNum;
	private readonly WrapperContainer<FldKeyFreeHintMsgRequest> _FldKeyFreeHintMsgRequest;
	private readonly WrapperContainer<FldKeyFreeHintIsNeedQuestWarning> _FldKeyFreeHintIsNeedQuestWarning;
	private readonly WrapperContainer<FldKeyFreeHintSetByMapShortCut> _FldKeyFreeHintSetByMapShortCut;
	private readonly WrapperContainer<FldAcademeiaSetIsShowLearnState> _FldAcademeiaSetIsShowLearnState;
	private readonly WrapperContainer<FldAcademeiaIsLearnedClass> _FldAcademeiaIsLearnedClass;
	private readonly WrapperContainer<FldAcademeiaSetIsLearnedClass> _FldAcademeiaSetIsLearnedClass;
	private readonly WrapperContainer<FldMsgReportOpen> _FldMsgReportOpen;
	private readonly WrapperContainer<FldMsgReportDungeonScenario> _FldMsgReportDungeonScenario;
	private readonly WrapperContainer<FldMsgReportQuestScenario> _FldMsgReportQuestScenario;
	private readonly WrapperContainer<FldMsgReportQuestProgress> _FldMsgReportQuestProgress;
	private readonly WrapperContainer<FldMsgReportDowntownAtmosphere> _FldMsgReportDowntownAtmosphere;
	private readonly WrapperContainer<FldMsgReportDowntownScenario> _FldMsgReportDowntownScenario;
	private readonly WrapperContainer<FldMsgReportCarWeather> _FldMsgReportCarWeather;
	private readonly WrapperContainer<FldMsgReportCarTimeElapsing> _FldMsgReportCarTimeElapsing;
	private readonly WrapperContainer<FldEventStart> _FldEventStart;
	private readonly WrapperContainer<FldEventEnd> _FldEventEnd;
	private readonly WrapperContainer<FldAutoSaveSetPosByPosID> _FldAutoSaveSetPosByPosID;
	private readonly WrapperContainer<FldDungeonEscapeIsCanEscape> _FldDungeonEscapeIsCanEscape;
	private readonly WrapperContainer<FldDungeonEscapeStartEscape> _FldDungeonEscapeStartEscape;
	private readonly WrapperContainer<FldEffectLoad> _FldEffectLoad;
	private readonly WrapperContainer<FldEffectIsEndLoad> _FldEffectIsEndLoad;
	private readonly WrapperContainer<FldEffectRelease> _FldEffectRelease;
	private readonly WrapperContainer<FldEffectPlay> _FldEffectPlay;
	private readonly WrapperContainer<FldEffectPlayByResrc> _FldEffectPlayByResrc;
	private readonly WrapperContainer<FldEffectIsEndPlay> _FldEffectIsEndPlay;
	private readonly WrapperContainer<FldEffectStop> _FldEffectStop;
	private readonly WrapperContainer<FldEffectStopByType> _FldEffectStopByType;
	private readonly WrapperContainer<FldEffectPreLoadToPlay> _FldEffectPreLoadToPlay;
	private readonly WrapperContainer<FldEffectIsEndPreLoadToPlay> _FldEffectIsEndPreLoadToPlay;
	private readonly WrapperContainer<FldEffectPlayByPreLoad> _FldEffectPlayByPreLoad;
	private readonly WrapperContainer<FldEffectPlayByResrcByPreLoad> _FldEffectPlayByResrcByPreLoad;
	private readonly WrapperContainer<FldCameraSetToDefault> _FldCameraSetToDefault;
	private readonly WrapperContainer<FldCameraSetToDefault_Param> _FldCameraSetToDefault_Param;
	private readonly WrapperContainer<FldCameraSetToPath> _FldCameraSetToPath;
	private readonly WrapperContainer<FldCameraSetToExcel> _FldCameraSetToExcel;
	private readonly WrapperContainer<FldCameraSetToLayout> _FldCameraSetToLayout;
	private readonly WrapperContainer<FldCameraSetToParam_Pos> _FldCameraSetToParam_Pos;
	private readonly WrapperContainer<FldCameraSetToParam_Angle> _FldCameraSetToParam_Angle;
	private readonly WrapperContainer<FldCameraSetToParam_AngleToTgt> _FldCameraSetToParam_AngleToTgt;
	private readonly WrapperContainer<FldCameraSetToParam_Fovy> _FldCameraSetToParam_Fovy;
	private readonly WrapperContainer<FldCameraSetToParam_NearClip> _FldCameraSetToParam_NearClip;
	private readonly WrapperContainer<FldCameraSetTgt_Player> _FldCameraSetTgt_Player;
	private readonly WrapperContainer<FldCameraSetTgt_Member> _FldCameraSetTgt_Member;
	private readonly WrapperContainer<FldCameraSetTgt_Enemy> _FldCameraSetTgt_Enemy;
	private readonly WrapperContainer<FldCameraSetTgt_Npc> _FldCameraSetTgt_Npc;
	private readonly WrapperContainer<FldCameraSetTgt_Gimmick> _FldCameraSetTgt_Gimmick;
	private readonly WrapperContainer<FldCameraSetTgt_Door> _FldCameraSetTgt_Door;
	private readonly WrapperContainer<FldCameraSetWideMode> _FldCameraSetWideMode;
	private readonly WrapperContainer<FldCameraSetHeightMode> _FldCameraSetHeightMode;
	private readonly WrapperContainer<FldCameraIsTypeFollow> _FldCameraIsTypeFollow;
	private readonly WrapperContainer<FldCameraFollow_SetYaw> _FldCameraFollow_SetYaw;
	private readonly WrapperContainer<FldCameraPath_SetFollowTarget> _FldCameraPath_SetFollowTarget;
	private readonly WrapperContainer<FldCameraPath_SetRate> _FldCameraPath_SetRate;
	private readonly WrapperContainer<FldCameraPath_SetAutoChange> _FldCameraPath_SetAutoChange;
	private readonly WrapperContainer<FldCameraGetRelativeToPlayerDir_Yaw> _FldCameraGetRelativeToPlayerDir_Yaw;
	private readonly WrapperContainer<FldCameraGetRelativeToPlayerDir_Pitch> _FldCameraGetRelativeToPlayerDir_Pitch;
	private readonly WrapperContainer<FldCameraGetRelativeToPlayerDir_Diff> _FldCameraGetRelativeToPlayerDir_Diff;
	private readonly WrapperContainer<FldCameraUpdateCameraBox> _FldCameraUpdateCameraBox;
	private readonly WrapperContainer<FldCameraSetIsShake> _FldCameraSetIsShake;
	private readonly WrapperContainer<FldCameraEffectSetVisible> _FldCameraEffectSetVisible;
	private readonly WrapperContainer<FldPlayerGetResScrID> _FldPlayerGetResScrID;
	private readonly WrapperContainer<FldPlayerGetDegToEnemy> _FldPlayerGetDegToEnemy;
	private readonly WrapperContainer<FldPlayerSetDeg> _FldPlayerSetDeg;
	private readonly WrapperContainer<FldPlayerAddDeg> _FldPlayerAddDeg;
	private readonly WrapperContainer<FldPlayerSetPos> _FldPlayerSetPos;
	private readonly WrapperContainer<FldPlayerSetPosParam> _FldPlayerSetPosParam;
	private readonly WrapperContainer<FldPlayerSetPosAddParam> _FldPlayerSetPosAddParam;
	private readonly WrapperContainer<FldPlayerTurnToDeg> _FldPlayerTurnToDeg;
	private readonly WrapperContainer<FldPlayerTurnAddDeg> _FldPlayerTurnAddDeg;
	private readonly WrapperContainer<FldPlayerRun> _FldPlayerRun;
	private readonly WrapperContainer<FldPlayerRunToPos> _FldPlayerRunToPos;
	private readonly WrapperContainer<FldPlayerRunToPosParam> _FldPlayerRunToPosParam;
	private readonly WrapperContainer<FldPlayerSetAndRunToPos> _FldPlayerSetAndRunToPos;
	private readonly WrapperContainer<FldPlayerSetAndRunToPosParam> _FldPlayerSetAndRunToPosParam;
	private readonly WrapperContainer<FldPlayerWalk> _FldPlayerWalk;
	private readonly WrapperContainer<FldPlayerWalkToPos> _FldPlayerWalkToPos;
	private readonly WrapperContainer<FldPlayerWalkToPosParam> _FldPlayerWalkToPosParam;
	private readonly WrapperContainer<FldPlayerSetAndWalkToPos> _FldPlayerSetAndWalkToPos;
	private readonly WrapperContainer<FldPlayerSetAndWalkToPosParam> _FldPlayerSetAndWalkToPosParam;
	private readonly WrapperContainer<FldPlayerRunToTbox> _FldPlayerRunToTbox;
	private readonly WrapperContainer<FldPlayerSetPosToTbox> _FldPlayerSetPosToTbox;
	private readonly WrapperContainer<FldPlayerSetPosToGimmick> _FldPlayerSetPosToGimmick;
	private readonly WrapperContainer<FldPlayerWalkToDoor> _FldPlayerWalkToDoor;
	private readonly WrapperContainer<FldPlayerWalkToDoorCustom> _FldPlayerWalkToDoorCustom;
	private readonly WrapperContainer<FldPlayerSetToDoor> _FldPlayerSetToDoor;
	private readonly WrapperContainer<FldPlayerSetToDoorCustom> _FldPlayerSetToDoorCustom;
	private readonly WrapperContainer<FldPlayerSetByNpc> _FldPlayerSetByNpc;
	private readonly WrapperContainer<FldPlayerSetByEnemy> _FldPlayerSetByEnemy;
	private readonly WrapperContainer<FldPlayerSetByDoor> _FldPlayerSetByDoor;
	private readonly WrapperContainer<FldPlayerSetByLadder> _FldPlayerSetByLadder;
	private readonly WrapperContainer<FldPlayerSetByTbox> _FldPlayerSetByTbox;
	private readonly WrapperContainer<FldPlayerSetByObj> _FldPlayerSetByObj;
	private readonly WrapperContainer<FldPlayerSetByGather> _FldPlayerSetByGather;
	private readonly WrapperContainer<FldPlayerSetByGimmick> _FldPlayerSetByGimmick;
	private readonly WrapperContainer<FldPlayerSetByBgObj> _FldPlayerSetByBgObj;
	private readonly WrapperContainer<FldPlayerSetByHitCollis> _FldPlayerSetByHitCollis;
	private readonly WrapperContainer<FldPlayerRunToBack> _FldPlayerRunToBack;
	private readonly WrapperContainer<FldPlayerRunByHitCollis> _FldPlayerRunByHitCollis;
	private readonly WrapperContainer<FldPlayerRunToBackByHitCollis> _FldPlayerRunToBackByHitCollis;
	private readonly WrapperContainer<FldPlayerRunToFrontByHitCollis> _FldPlayerRunToFrontByHitCollis;
	private readonly WrapperContainer<FldPlayerWalkByHitCollis> _FldPlayerWalkByHitCollis;
	private readonly WrapperContainer<FldPlayerWalkToBackByHitCollis> _FldPlayerWalkToBackByHitCollis;
	private readonly WrapperContainer<FldPlayerWalkToFrontByHitCollis> _FldPlayerWalkToFrontByHitCollis;
	private readonly WrapperContainer<FldPlayerRunToBackByDoor> _FldPlayerRunToBackByDoor;
	private readonly WrapperContainer<FldPlayerRunToFrontByDoor> _FldPlayerRunToFrontByDoor;
	private readonly WrapperContainer<FldPlayerWalkToBackByDoor> _FldPlayerWalkToBackByDoor;
	private readonly WrapperContainer<FldPlayerWalkToFrontByDoor> _FldPlayerWalkToFrontByDoor;
	private readonly WrapperContainer<FldPlayerSetKeySepMoveRate> _FldPlayerSetKeySepMoveRate;
	private readonly WrapperContainer<FldPlayerSetAnim> _FldPlayerSetAnim;
	private readonly WrapperContainer<FldPlayerSetAnimParam> _FldPlayerSetAnimParam;
	private readonly WrapperContainer<FldPlayerSetAnimParamImmidiately> _FldPlayerSetAnimParamImmidiately;
	private readonly WrapperContainer<FldPlayerIsAnimEnd> _FldPlayerIsAnimEnd;
	private readonly WrapperContainer<FldPlayerSetAddAnim> _FldPlayerSetAddAnim;
	private readonly WrapperContainer<FldPlayerSetAnimSoundActive> _FldPlayerSetAnimSoundActive;
	private readonly WrapperContainer<FldPlayerPlayABL> _FldPlayerPlayABL;
	private readonly WrapperContainer<FldPlayerStopABL> _FldPlayerStopABL;
	private readonly WrapperContainer<FldPlayerPreLoadEffect> _FldPlayerPreLoadEffect;
	private readonly WrapperContainer<FldPlayerIsEndPreLoadEffect> _FldPlayerIsEndPreLoadEffect;
	private readonly WrapperContainer<FldPlayerPlayEffectByPreLoad> _FldPlayerPlayEffectByPreLoad;
	private readonly WrapperContainer<FldPlayerPlayEffect> _FldPlayerPlayEffect;
	private readonly WrapperContainer<FldPlayerIsAutoCtrl> _FldPlayerIsAutoCtrl;
	private readonly WrapperContainer<FldPlayerSetColActive> _FldPlayerSetColActive;
	private readonly WrapperContainer<FldPlayerGetBasePose> _FldPlayerGetBasePose;
	private readonly WrapperContainer<FldPlayerSetBasePose> _FldPlayerSetBasePose;
	private readonly WrapperContainer<FldPlayerSetAction> _FldPlayerSetAction;
	private readonly WrapperContainer<FldPlayerSetActionAsAutoCtrl> _FldPlayerSetActionAsAutoCtrl;
	private readonly WrapperContainer<FldPlayerSetActionWaitTime> _FldPlayerSetActionWaitTime;
	private readonly WrapperContainer<FldPlayerEndLoopAction> _FldPlayerEndLoopAction;
	private readonly WrapperContainer<FldPlayerIsLoopActionLoopState> _FldPlayerIsLoopActionLoopState;
	private readonly WrapperContainer<FldPlayerIsWaitAction> _FldPlayerIsWaitAction;
	private readonly WrapperContainer<FldPlayerSetDrawSword> _FldPlayerSetDrawSword;
	private readonly WrapperContainer<FldPlayerIsDrawSword> _FldPlayerIsDrawSword;
	private readonly WrapperContainer<FldPlayerSetVisible> _FldPlayerSetVisible;
	private readonly WrapperContainer<FldPlayerStartFade> _FldPlayerStartFade;
	private readonly WrapperContainer<FldPlayerPlayIcon> _FldPlayerPlayIcon;
	private readonly WrapperContainer<FldPlayerStopIcon> _FldPlayerStopIcon;
	private readonly WrapperContainer<FldPlayerLookAtStart> _FldPlayerLookAtStart;
	private readonly WrapperContainer<FldPlayerLookAtSetType> _FldPlayerLookAtSetType;
	private readonly WrapperContainer<FldPlayerLookAtSetMember> _FldPlayerLookAtSetMember;
	private readonly WrapperContainer<FldPlayerLookAtSetNpc> _FldPlayerLookAtSetNpc;
	private readonly WrapperContainer<FldPlayerLookAtSetPos> _FldPlayerLookAtSetPos;
	private readonly WrapperContainer<FldPlayerLookAtSetDeg> _FldPlayerLookAtSetDeg;
	private readonly WrapperContainer<FldPlayerLookAtEnd> _FldPlayerLookAtEnd;
	private readonly WrapperContainer<FldPlayerSetInputLock> _FldPlayerSetInputLock;
	private readonly WrapperContainer<FldPlayerIsInputLock> _FldPlayerIsInputLock;
	private readonly WrapperContainer<FldPlayerSetActionLock> _FldPlayerSetActionLock;
	private readonly WrapperContainer<FldPlayerSetIsForceSquat> _FldPlayerSetIsForceSquat;
	private readonly WrapperContainer<FldPlayerSetIsForceDash> _FldPlayerSetIsForceDash;
	private readonly WrapperContainer<FldPlayerSetIsForceMove> _FldPlayerSetIsForceMove;
	private readonly WrapperContainer<FldPlayerSetIsMoveFollowCurve> _FldPlayerSetIsMoveFollowCurve;
	private readonly WrapperContainer<FldPlayerSetIsMoveFollowCamera> _FldPlayerSetIsMoveFollowCamera;
	private readonly WrapperContainer<FldPlayerSetIsFixInputL_Up> _FldPlayerSetIsFixInputL_Up;
	private readonly WrapperContainer<FldPlayerGetAttackID> _FldPlayerGetAttackID;
	private readonly WrapperContainer<FldPlayerGetAttackAttribute> _FldPlayerGetAttackAttribute;
	private readonly WrapperContainer<FldPlayerAttachItem> _FldPlayerAttachItem;
	private readonly WrapperContainer<FldPlayerIsAttachmentItemReady> _FldPlayerIsAttachmentItemReady;
	private readonly WrapperContainer<FldPlayerDetachItem> _FldPlayerDetachItem;
	private readonly WrapperContainer<FldPlayerPlayBattleVoice> _FldPlayerPlayBattleVoice;
	private readonly WrapperContainer<FldPlayerPlayPartVoice> _FldPlayerPlayPartVoice;
	private readonly WrapperContainer<FldPlayerSetIsMebika> _FldPlayerSetIsMebika;
	private readonly WrapperContainer<FldPlayerSetMebikaCustom> _FldPlayerSetMebikaCustom;
	private readonly WrapperContainer<FldPlayerSetArchetypeModelVisible> _FldPlayerSetArchetypeModelVisible;
	private readonly WrapperContainer<FldSetPlayerPos> _FldSetPlayerPos;
	private readonly WrapperContainer<FldSetPlayerPosParam> _FldSetPlayerPosParam;
	private readonly WrapperContainer<FldMemberGetUidByCharaID> _FldMemberGetUidByCharaID;
	private readonly WrapperContainer<FldMemberIsExistByCharaID> _FldMemberIsExistByCharaID;
	private readonly WrapperContainer<FldMemberGetFollowIndexMax> _FldMemberGetFollowIndexMax;
	private readonly WrapperContainer<FldMemberGetUidByFollowIndex> _FldMemberGetUidByFollowIndex;
	private readonly WrapperContainer<FldMemberCreateByCharaID> _FldMemberCreateByCharaID;
	private readonly WrapperContainer<FldMemberIsSetup> _FldMemberIsSetup;
	private readonly WrapperContainer<FldMemberDelete> _FldMemberDelete;
	private readonly WrapperContainer<FldMemberSetAIActive> _FldMemberSetAIActive;
	private readonly WrapperContainer<FldMemberIsAIActive> _FldMemberIsAIActive;
	private readonly WrapperContainer<FldMemberSetAIState_Event> _FldMemberSetAIState_Event;
	private readonly WrapperContainer<FldMemberSetColActive_AdjustGround> _FldMemberSetColActive_AdjustGround;
	private readonly WrapperContainer<FldMemberGetDegToPlayer> _FldMemberGetDegToPlayer;
	private readonly WrapperContainer<FldMemberSetDeg> _FldMemberSetDeg;
	private readonly WrapperContainer<FldMemberSetPos> _FldMemberSetPos;
	private readonly WrapperContainer<FldMemberSetPosParam> _FldMemberSetPosParam;
	private readonly WrapperContainer<FldMemberTurnToDeg> _FldMemberTurnToDeg;
	private readonly WrapperContainer<FldMemberTurnAddDeg> _FldMemberTurnAddDeg;
	private readonly WrapperContainer<FldMemberRun> _FldMemberRun;
	private readonly WrapperContainer<FldMemberRunToPos> _FldMemberRunToPos;
	private readonly WrapperContainer<FldMemberRunToPosParam> _FldMemberRunToPosParam;
	private readonly WrapperContainer<FldMemberSetAndRunToPos> _FldMemberSetAndRunToPos;
	private readonly WrapperContainer<FldMemberSetAndRunToPosParam> _FldMemberSetAndRunToPosParam;
	private readonly WrapperContainer<FldMemberWalk> _FldMemberWalk;
	private readonly WrapperContainer<FldMemberWalkToPos> _FldMemberWalkToPos;
	private readonly WrapperContainer<FldMemberWalkToPosParam> _FldMemberWalkToPosParam;
	private readonly WrapperContainer<FldMemberSetAndWalkToPos> _FldMemberSetAndWalkToPos;
	private readonly WrapperContainer<FldMemberSetAndWalkToPosParam> _FldMemberSetAndWalkToPosParam;
	private readonly WrapperContainer<FldMemberSetFormation> _FldMemberSetFormation;
	private readonly WrapperContainer<FldMemberRunToFormation> _FldMemberRunToFormation;
	private readonly WrapperContainer<FldMemberSetAndRunToFormation> _FldMemberSetAndRunToFormation;
	private readonly WrapperContainer<FldMemberWalkToFormation> _FldMemberWalkToFormation;
	private readonly WrapperContainer<FldMemberSetAndWalkToFormation> _FldMemberSetAndWalkToFormation;
	private readonly WrapperContainer<FldMemberSetAnim> _FldMemberSetAnim;
	private readonly WrapperContainer<FldMemberSetAnimParam> _FldMemberSetAnimParam;
	private readonly WrapperContainer<FldMemberSetAnimParamImmidiately> _FldMemberSetAnimParamImmidiately;
	private readonly WrapperContainer<FldMemberIsAnimEnd> _FldMemberIsAnimEnd;
	private readonly WrapperContainer<FldMemberSetAddAnim> _FldMemberSetAddAnim;
	private readonly WrapperContainer<FldMemberSetAnimSoundActive> _FldMemberSetAnimSoundActive;
	private readonly WrapperContainer<FldMemberPlayABL> _FldMemberPlayABL;
	private readonly WrapperContainer<FldMemberStopABL> _FldMemberStopABL;
	private readonly WrapperContainer<FldMemberPlayEffect> _FldMemberPlayEffect;
	private readonly WrapperContainer<FldMemberIsAutoCtrl> _FldMemberIsAutoCtrl;
	private readonly WrapperContainer<FldMemberGetBasePose> _FldMemberGetBasePose;
	private readonly WrapperContainer<FldMemberSetBasePose> _FldMemberSetBasePose;
	private readonly WrapperContainer<FldMemberSetAction> _FldMemberSetAction;
	private readonly WrapperContainer<FldMemberSetActionAsAutoCtrl> _FldMemberSetActionAsAutoCtrl;
	private readonly WrapperContainer<FldMemberSetActionWaitTime> _FldMemberSetActionWaitTime;
	private readonly WrapperContainer<FldMemberEndLoopAction> _FldMemberEndLoopAction;
	private readonly WrapperContainer<FldMemberIsLoopActionLoopState> _FldMemberIsLoopActionLoopState;
	private readonly WrapperContainer<FldMemberIsWaitAction> _FldMemberIsWaitAction;
	private readonly WrapperContainer<FldMemberSetVisible> _FldMemberSetVisible;
	private readonly WrapperContainer<FldMemberStartFade> _FldMemberStartFade;
	private readonly WrapperContainer<FldMemberPlayIcon> _FldMemberPlayIcon;
	private readonly WrapperContainer<FldMemberStopIcon> _FldMemberStopIcon;
	private readonly WrapperContainer<FldMemberLookAtStart> _FldMemberLookAtStart;
	private readonly WrapperContainer<FldMemberLookAtSetType> _FldMemberLookAtSetType;
	private readonly WrapperContainer<FldMemberLookAtSetPlayer> _FldMemberLookAtSetPlayer;
	private readonly WrapperContainer<FldMemberLookAtSetMember> _FldMemberLookAtSetMember;
	private readonly WrapperContainer<FldMemberLookAtSetNpc> _FldMemberLookAtSetNpc;
	private readonly WrapperContainer<FldMemberLookAtSetPos> _FldMemberLookAtSetPos;
	private readonly WrapperContainer<FldMemberLookAtSetDeg> _FldMemberLookAtSetDeg;
	private readonly WrapperContainer<FldMemberLookAtEnd> _FldMemberLookAtEnd;
	private readonly WrapperContainer<FldMemberSetMoveAnimRate> _FldMemberSetMoveAnimRate;
	private readonly WrapperContainer<FldMemberIsInCamera> _FldMemberIsInCamera;
	private readonly WrapperContainer<FldMemberSetPlayerNeighborPos> _FldMemberSetPlayerNeighborPos;
	private readonly WrapperContainer<FldMemberAllSetVisible> _FldMemberAllSetVisible;
	private readonly WrapperContainer<FldMemberAllSetAIState_Event> _FldMemberAllSetAIState_Event;
	private readonly WrapperContainer<FldMemberAllSetAIState_BackStep> _FldMemberAllSetAIState_BackStep;
	private readonly WrapperContainer<FldMemberAddList> _FldMemberAddList;
	private readonly WrapperContainer<FldMemberReloadByBtlMember> _FldMemberReloadByBtlMember;
	private readonly WrapperContainer<FldMemberReloadByCharaID> _FldMemberReloadByCharaID;
	private readonly WrapperContainer<FldMemberIsReloadEnd> _FldMemberIsReloadEnd;
	private readonly WrapperContainer<FldMemberGetUnitID> _FldMemberGetUnitID;
	private readonly WrapperContainer<FldMemberGetAttackID> _FldMemberGetAttackID;
	private readonly WrapperContainer<FldMemberGetAttackAttribute> _FldMemberGetAttackAttribute;
	private readonly WrapperContainer<FldMemberPlayBattleVoice> _FldMemberPlayBattleVoice;
	private readonly WrapperContainer<FldMemberPlayPartVoice> _FldMemberPlayPartVoice;
	private readonly WrapperContainer<FldEnemyGetUidByTableNo> _FldEnemyGetUidByTableNo;
	private readonly WrapperContainer<FldEnemyIsExistByTableNo> _FldEnemyIsExistByTableNo;
	private readonly WrapperContainer<FldEnemyIsExist> _FldEnemyIsExist;
	private readonly WrapperContainer<FldEnemyPreLoad> _FldEnemyPreLoad;
	private readonly WrapperContainer<FldEnemyIsPreLoadEnd> _FldEnemyIsPreLoadEnd;
	private readonly WrapperContainer<FldEnemyPopByPreLoad> _FldEnemyPopByPreLoad;
	private readonly WrapperContainer<FldEnemyCreateByPreLoad> _FldEnemyCreateByPreLoad;
	private readonly WrapperContainer<FldEnemyCreate> _FldEnemyCreate;
	private readonly WrapperContainer<FldEnemyCreateBySetDeg> _FldEnemyCreateBySetDeg;
	private readonly WrapperContainer<FldEnemyIsSetup> _FldEnemyIsSetup;
	private readonly WrapperContainer<FldEnemyDelete> _FldEnemyDelete;
	private readonly WrapperContainer<FldEnemyDeleteByTableNo> _FldEnemyDeleteByTableNo;
	private readonly WrapperContainer<FldEnemyKill> _FldEnemyKill;
	private readonly WrapperContainer<FldEnemyGetResScrID> _FldEnemyGetResScrID;
	private readonly WrapperContainer<FldEnemySetAIActive> _FldEnemySetAIActive;
	private readonly WrapperContainer<FldEnemySetColActive> _FldEnemySetColActive;
	private readonly WrapperContainer<FldEnemySetTargetActive> _FldEnemySetTargetActive;
	private readonly WrapperContainer<FldEnemySetAttractedOn> _FldEnemySetAttractedOn;
	private readonly WrapperContainer<FldEnemySetAIState_Discover> _FldEnemySetAIState_Discover;
	private readonly WrapperContainer<FldEnemyGetDegToPlayer> _FldEnemyGetDegToPlayer;
	private readonly WrapperContainer<FldEnemySetDeg> _FldEnemySetDeg;
	private readonly WrapperContainer<FldEnemySetPos> _FldEnemySetPos;
	private readonly WrapperContainer<FldEnemySetPosParam> _FldEnemySetPosParam;
	private readonly WrapperContainer<FldEnemyResetPos> _FldEnemyResetPos;
	private readonly WrapperContainer<FldEnemyTurnToDeg> _FldEnemyTurnToDeg;
	private readonly WrapperContainer<FldEnemyTurnAddDeg> _FldEnemyTurnAddDeg;
	private readonly WrapperContainer<FldEnemyRun> _FldEnemyRun;
	private readonly WrapperContainer<FldEnemyRunToPos> _FldEnemyRunToPos;
	private readonly WrapperContainer<FldEnemyRunToPosParam> _FldEnemyRunToPosParam;
	private readonly WrapperContainer<FldEnemySetAndRunToPos> _FldEnemySetAndRunToPos;
	private readonly WrapperContainer<FldEnemySetAndRunToPosParam> _FldEnemySetAndRunToPosParam;
	private readonly WrapperContainer<FldEnemyWalk> _FldEnemyWalk;
	private readonly WrapperContainer<FldEnemyWalkToPos> _FldEnemyWalkToPos;
	private readonly WrapperContainer<FldEnemyWalkToPosParam> _FldEnemyWalkToPosParam;
	private readonly WrapperContainer<FldEnemySetAndWalkToPos> _FldEnemySetAndWalkToPos;
	private readonly WrapperContainer<FldEnemySetAndWalkToPosParam> _FldEnemySetAndWalkToPosParam;
	private readonly WrapperContainer<FldEnemySetAnim> _FldEnemySetAnim;
	private readonly WrapperContainer<FldEnemySetAnimParam> _FldEnemySetAnimParam;
	private readonly WrapperContainer<FldEnemySetAnimParamImmidiately> _FldEnemySetAnimParamImmidiately;
	private readonly WrapperContainer<FldEnemyIsAnimEnd> _FldEnemyIsAnimEnd;
	private readonly WrapperContainer<FldEnemySetAnimSoundActive> _FldEnemySetAnimSoundActive;
	private readonly WrapperContainer<FldEnemyPlayEffect> _FldEnemyPlayEffect;
	private readonly WrapperContainer<FldEnemyIsAutoCtrl> _FldEnemyIsAutoCtrl;
	private readonly WrapperContainer<FldEnemyGetBasePose> _FldEnemyGetBasePose;
	private readonly WrapperContainer<FldEnemySetBasePose> _FldEnemySetBasePose;
	private readonly WrapperContainer<FldEnemySetAction> _FldEnemySetAction;
	private readonly WrapperContainer<FldEnemySetActionAsAutoCtrl> _FldEnemySetActionAsAutoCtrl;
	private readonly WrapperContainer<FldEnemySetActionWaitTime> _FldEnemySetActionWaitTime;
	private readonly WrapperContainer<FldEnemyEndLoopAction> _FldEnemyEndLoopAction;
	private readonly WrapperContainer<FldEnemyIsLoopActionLoopState> _FldEnemyIsLoopActionLoopState;
	private readonly WrapperContainer<FldEnemyIsWaitAction> _FldEnemyIsWaitAction;
	private readonly WrapperContainer<FldEnemySetVisible> _FldEnemySetVisible;
	private readonly WrapperContainer<FldEnemyStartFade> _FldEnemyStartFade;
	private readonly WrapperContainer<FldEnemyPlayIcon> _FldEnemyPlayIcon;
	private readonly WrapperContainer<FldEnemyStopIcon> _FldEnemyStopIcon;
	private readonly WrapperContainer<FldEnemySetAIRouteID> _FldEnemySetAIRouteID;
	private readonly WrapperContainer<FldEnemySetIsAIRouteLoop> _FldEnemySetIsAIRouteLoop;
	private readonly WrapperContainer<FldEnemyRegisterEventHitScript> _FldEnemyRegisterEventHitScript;
	private readonly WrapperContainer<FldEnemySetEventHitScriptActive> _FldEnemySetEventHitScriptActive;
	private readonly WrapperContainer<FldEnemySetIsHide> _FldEnemySetIsHide;
	private readonly WrapperContainer<FldEnemyGeneratorExecute> _FldEnemyGeneratorExecute;
	private readonly WrapperContainer<FldEnemySetTargetCursor> _FldEnemySetTargetCursor;
	private readonly WrapperContainer<FldEnemySetAccessGmc> _FldEnemySetAccessGmc;
	private readonly WrapperContainer<FldEnemyResetAccess> _FldEnemyResetAccess;
	private readonly WrapperContainer<FldEnemyAllSetAnimPause> _FldEnemyAllSetAnimPause;
	private readonly WrapperContainer<FldEnemyAllSetAIActive> _FldEnemyAllSetAIActive;
	private readonly WrapperContainer<FldEnemyAllResetPos> _FldEnemyAllResetPos;
	private readonly WrapperContainer<FldEnemyAllSetVisible> _FldEnemyAllSetVisible;
	private readonly WrapperContainer<FldEnemyKillWithinTargetRange> _FldEnemyKillWithinTargetRange;
	private readonly WrapperContainer<FldEnemyRespawnReset> _FldEnemyRespawnReset;
	private readonly WrapperContainer<FldEnemyGetUnitID> _FldEnemyGetUnitID;
	private readonly WrapperContainer<FldEnemyGetEnemyID> _FldEnemyGetEnemyID;
	private readonly WrapperContainer<FldEnemyGetAttackID> _FldEnemyGetAttackID;
	private readonly WrapperContainer<FldEnemyGetAttackAttribute> _FldEnemyGetAttackAttribute;
	private readonly WrapperContainer<FldEnemyIsDamageBackAttack> _FldEnemyIsDamageBackAttack;
	private readonly WrapperContainer<FldEnemyIsBreak> _FldEnemyIsBreak;
	private readonly WrapperContainer<FldEnemyIsDark> _FldEnemyIsDark;
	private readonly WrapperContainer<FldEnemyGetTier> _FldEnemyGetTier;
	private readonly WrapperContainer<FldEnemyIsDead> _FldEnemyIsDead;
	private readonly WrapperContainer<FldNpcGetUid> _FldNpcGetUid;
	private readonly WrapperContainer<FldNpcGetUidByNpcID> _FldNpcGetUidByNpcID;
	private readonly WrapperContainer<FldNpcGetUidByCharaID> _FldNpcGetUidByCharaID;
	private readonly WrapperContainer<FldNpcCreateByNpcID> _FldNpcCreateByNpcID;
	private readonly WrapperContainer<FldNpcIsExistByNpcID> _FldNpcIsExistByNpcID;
	private readonly WrapperContainer<FldNpcIsExistByCharaID> _FldNpcIsExistByCharaID;
	private readonly WrapperContainer<FldNpcGetUidByTableNo> _FldNpcGetUidByTableNo;
	private readonly WrapperContainer<FldNpcIsExistByTableNo> _FldNpcIsExistByTableNo;
	private readonly WrapperContainer<FldNpcCreate> _FldNpcCreate;
	private readonly WrapperContainer<FldNpcIsSetup> _FldNpcIsSetup;
	private readonly WrapperContainer<FldNpcDelete> _FldNpcDelete;
	private readonly WrapperContainer<FldNpcGetNpcID> _FldNpcGetNpcID;
	private readonly WrapperContainer<FldNpcGetCharaID> _FldNpcGetCharaID;
	private readonly WrapperContainer<FldNpcGetResScrID> _FldNpcGetResScrID;
	private readonly WrapperContainer<FldNpcIsSetOnPoint> _FldNpcIsSetOnPoint;
	private readonly WrapperContainer<FldNpcIsSetOnPointAnyone> _FldNpcIsSetOnPointAnyone;
	private readonly WrapperContainer<FldNpcSetSummaryOnByTable> _FldNpcSetSummaryOnByTable;
	private readonly WrapperContainer<FldNpcSetSummaryOff> _FldNpcSetSummaryOff;
	private readonly WrapperContainer<FldNpcIsSummaryOn> _FldNpcIsSummaryOn;
	private readonly WrapperContainer<FldNpcSetAIActive> _FldNpcSetAIActive;
	private readonly WrapperContainer<FldNpcIsAIActive> _FldNpcIsAIActive;
	private readonly WrapperContainer<FldNpcAddWaitPointMax> _FldNpcAddWaitPointMax;
	private readonly WrapperContainer<FldNpcIsCanOnTalk> _FldNpcIsCanOnTalk;
	private readonly WrapperContainer<FldNpcOnTalk> _FldNpcOnTalk;
	private readonly WrapperContainer<FldNpcIsEndTalk> _FldNpcIsEndTalk;
	private readonly WrapperContainer<FldNpcSetCallOut> _FldNpcSetCallOut;
	private readonly WrapperContainer<FldNpcIsCallOut> _FldNpcIsCallOut;
	private readonly WrapperContainer<FldNpcGetDegToPlayer> _FldNpcGetDegToPlayer;
	private readonly WrapperContainer<FldNpcSetDeg> _FldNpcSetDeg;
	private readonly WrapperContainer<FldNpcSetPos> _FldNpcSetPos;
	private readonly WrapperContainer<FldNpcSetPosParam> _FldNpcSetPosParam;
	private readonly WrapperContainer<FldNpcSetPosInit> _FldNpcSetPosInit;
	private readonly WrapperContainer<FldNpcTurnToDeg> _FldNpcTurnToDeg;
	private readonly WrapperContainer<FldNpcTurnAddDeg> _FldNpcTurnAddDeg;
	private readonly WrapperContainer<FldNpcSetColActive> _FldNpcSetColActive;
	private readonly WrapperContainer<FldNpcRun> _FldNpcRun;
	private readonly WrapperContainer<FldNpcRunToPos> _FldNpcRunToPos;
	private readonly WrapperContainer<FldNpcRunToPosParam> _FldNpcRunToPosParam;
	private readonly WrapperContainer<FldNpcSetAndRunToPos> _FldNpcSetAndRunToPos;
	private readonly WrapperContainer<FldNpcSetAndRunToPosParam> _FldNpcSetAndRunToPosParam;
	private readonly WrapperContainer<FldNpcWalk> _FldNpcWalk;
	private readonly WrapperContainer<FldNpcWalkToPos> _FldNpcWalkToPos;
	private readonly WrapperContainer<FldNpcWalkToPosParam> _FldNpcWalkToPosParam;
	private readonly WrapperContainer<FldNpcSetAndWalkToPos> _FldNpcSetAndWalkToPos;
	private readonly WrapperContainer<FldNpcSetAndWalkToPosParam> _FldNpcSetAndWalkToPosParam;
	private readonly WrapperContainer<FldNpcSetAnim> _FldNpcSetAnim;
	private readonly WrapperContainer<FldNpcSetAnimParam> _FldNpcSetAnimParam;
	private readonly WrapperContainer<FldNpcSetAnimParamImmidiately> _FldNpcSetAnimParamImmidiately;
	private readonly WrapperContainer<FldNpcGetAnimID> _FldNpcGetAnimID;
	private readonly WrapperContainer<FldNpcRemoveAllAutoCtrl> _FldNpcRemoveAllAutoCtrl;
	private readonly WrapperContainer<FldNpcIsAnimEnd> _FldNpcIsAnimEnd;
	private readonly WrapperContainer<FldNpcSetAnimSoundActive> _FldNpcSetAnimSoundActive;
	private readonly WrapperContainer<FldNpcPlayABL> _FldNpcPlayABL;
	private readonly WrapperContainer<FldNpcStopABL> _FldNpcStopABL;
	private readonly WrapperContainer<FldNpcPlayEffect> _FldNpcPlayEffect;
	private readonly WrapperContainer<FldNpcIsAutoCtrl> _FldNpcIsAutoCtrl;
	private readonly WrapperContainer<FldNpcGetBasePose> _FldNpcGetBasePose;
	private readonly WrapperContainer<FldNpcSetBasePose> _FldNpcSetBasePose;
	private readonly WrapperContainer<FldNpcSetAction> _FldNpcSetAction;
	private readonly WrapperContainer<FldNpcSetActionAsAutoCtrl> _FldNpcSetActionAsAutoCtrl;
	private readonly WrapperContainer<FldNpcSetActionWaitTime> _FldNpcSetActionWaitTime;
	private readonly WrapperContainer<FldNpcEndLoopAction> _FldNpcEndLoopAction;
	private readonly WrapperContainer<FldNpcIsLoopActionLoopState> _FldNpcIsLoopActionLoopState;
	private readonly WrapperContainer<FldNpcIsWaitAction> _FldNpcIsWaitAction;
	private readonly WrapperContainer<FldNpcSetVisible> _FldNpcSetVisible;
	private readonly WrapperContainer<FldNpcStartFade> _FldNpcStartFade;
	private readonly WrapperContainer<FldNpcPlayIcon> _FldNpcPlayIcon;
	private readonly WrapperContainer<FldNpcStopIcon> _FldNpcStopIcon;
	private readonly WrapperContainer<FldNpcLookAtStart> _FldNpcLookAtStart;
	private readonly WrapperContainer<FldNpcLookAtSetType> _FldNpcLookAtSetType;
	private readonly WrapperContainer<FldNpcLookAtSetPlayer> _FldNpcLookAtSetPlayer;
	private readonly WrapperContainer<FldNpcLookAtSetMember> _FldNpcLookAtSetMember;
	private readonly WrapperContainer<FldNpcLookAtSetNpc> _FldNpcLookAtSetNpc;
	private readonly WrapperContainer<FldNpcLookAtSetPos> _FldNpcLookAtSetPos;
	private readonly WrapperContainer<FldNpcLookAtSetDeg> _FldNpcLookAtSetDeg;
	private readonly WrapperContainer<FldNpcLookAtSetDelay> _FldNpcLookAtSetDelay;
	private readonly WrapperContainer<FldNpcLookAtSetSpeedType> _FldNpcLookAtSetSpeedType;
	private readonly WrapperContainer<FldNpcLookAtEnd> _FldNpcLookAtEnd;
	private readonly WrapperContainer<FldNpcAttachItem> _FldNpcAttachItem;
	private readonly WrapperContainer<FldNpcIsAttachmentItemReady> _FldNpcIsAttachmentItemReady;
	private readonly WrapperContainer<FldNpcDetachItem> _FldNpcDetachItem;
	private readonly WrapperContainer<FldNpcSetIsMebika> _FldNpcSetIsMebika;
	private readonly WrapperContainer<FldNpcUpdateCloth> _FldNpcUpdateCloth;
	private readonly WrapperContainer<FldNpcGetInitNpcPosID> _FldNpcGetInitNpcPosID;
	private readonly WrapperContainer<FldNpcFollowerSummaryGetTalkFuncName> _FldNpcFollowerSummaryGetTalkFuncName;
	private readonly WrapperContainer<FldNpcFollowerSummarySetParam> _FldNpcFollowerSummarySetParam;
	private readonly WrapperContainer<FldNpcHavingCharaIDSetVisible> _FldNpcHavingCharaIDSetVisible;
	private readonly WrapperContainer<FldNpcNotHavingCharaIDSetVisible> _FldNpcNotHavingCharaIDSetVisible;
	private readonly WrapperContainer<FldNpcSetSummaryOn> _FldNpcSetSummaryOn;
	private readonly WrapperContainer<FldNpcSummaryOn> _FldNpcSummaryOn;
	private readonly WrapperContainer<FldNpcSummaryOff> _FldNpcSummaryOff;
	private readonly WrapperContainer<FldGetFollowerID> _FldGetFollowerID;
	private readonly WrapperContainer<FldFollowerSetVoiceResult> _FldFollowerSetVoiceResult;
	private readonly WrapperContainer<FldFollowerSetRemindLastDay> _FldFollowerSetRemindLastDay;
	private readonly WrapperContainer<FldFollowerJump> _FldFollowerJump;
	private readonly WrapperContainer<FldFollowerGetJumpToZoneID> _FldFollowerGetJumpToZoneID;
	private readonly WrapperContainer<FldFollowerIsLayoutForFollowerScenario> _FldFollowerIsLayoutForFollowerScenario;
	private readonly WrapperContainer<FldFollowerIsAbsence> _FldFollowerIsAbsence;
	private readonly WrapperContainer<FldFollowerGetRankupStatus> _FldFollowerGetRankupStatus;
	private readonly WrapperContainer<FldFollowerGetUnlockStatus> _FldFollowerGetUnlockStatus;
	private readonly WrapperContainer<FldFollowerUpdateLayoutInfo> _FldFollowerUpdateLayoutInfo;
	private readonly WrapperContainer<FldBgSetVisible> _FldBgSetVisible;
	private readonly WrapperContainer<FldBgSetIsCommandBattle> _FldBgSetIsCommandBattle;
	private readonly WrapperContainer<FldBgDataGetIndexByLayoutID> _FldBgDataGetIndexByLayoutID;
	private readonly WrapperContainer<FldBgDataGetIndexByLayoutName> _FldBgDataGetIndexByLayoutName;
	private readonly WrapperContainer<FldBgDataGetIndexByNodeName> _FldBgDataGetIndexByNodeName;
	private readonly WrapperContainer<FldBgDataGetNum> _FldBgDataGetNum;
	private readonly WrapperContainer<FldBgDataIsContainLayoutName> _FldBgDataIsContainLayoutName;
	private readonly WrapperContainer<FldBgDataIsContainNodeName> _FldBgDataIsContainNodeName;
	private readonly WrapperContainer<FldBgDataSetEnable> _FldBgDataSetEnable;
	private readonly WrapperContainer<FldBgDataGetEnable> _FldBgDataGetEnable;
	private readonly WrapperContainer<FldSetEnableBgDataName> _FldSetEnableBgDataName;
	private readonly WrapperContainer<FldGetEnableBgDataName> _FldGetEnableBgDataName;
	private readonly WrapperContainer<FldSetEnableBgDataNodeName> _FldSetEnableBgDataNodeName;
	private readonly WrapperContainer<FldGetEnableBgDataNodeName> _FldGetEnableBgDataNodeName;
	private readonly WrapperContainer<FldBgLightGetIndexByID> _FldBgLightGetIndexByID;
	private readonly WrapperContainer<FldBgLightGetIndexByName> _FldBgLightGetIndexByName;
	private readonly WrapperContainer<FldBgLightGetNum> _FldBgLightGetNum;
	private readonly WrapperContainer<FldBgLightIsContainName> _FldBgLightIsContainName;
	private readonly WrapperContainer<FldBgLightSetEnable> _FldBgLightSetEnable;
	private readonly WrapperContainer<FldBgLightGetEnable> _FldBgLightGetEnable;
	private readonly WrapperContainer<FldGetEnableBgLightName> _FldGetEnableBgLightName;
	private readonly WrapperContainer<FldGetEnableBgLightId> _FldGetEnableBgLightId;
	private readonly WrapperContainer<FldSetEnableBgLightName> _FldSetEnableBgLightName;
	private readonly WrapperContainer<FldSetEnableBgLightId> _FldSetEnableBgLightId;
	private readonly WrapperContainer<FldBgEffectGetIndexByLayoutName> _FldBgEffectGetIndexByLayoutName;
	private readonly WrapperContainer<FldBgEffectGetNum> _FldBgEffectGetNum;
	private readonly WrapperContainer<FldBgEffectIsContainLayoutName> _FldBgEffectIsContainLayoutName;
	private readonly WrapperContainer<FldBgEffectSetVisible> _FldBgEffectSetVisible;
	private readonly WrapperContainer<FldBgEffectGetVisible> _FldBgEffectGetVisible;
	private readonly WrapperContainer<FldDoorGetUid> _FldDoorGetUid;
	private readonly WrapperContainer<FldDoorGetUidByClosestOnPlayer> _FldDoorGetUidByClosestOnPlayer;
	private readonly WrapperContainer<FldDoorGetUidByResrcUid> _FldDoorGetUidByResrcUid;
	private readonly WrapperContainer<FldDoorGetResScrID> _FldDoorGetResScrID;
	private readonly WrapperContainer<FldDoorIsPlayerInFront> _FldDoorIsPlayerInFront;
	private readonly WrapperContainer<FldDoorGetType> _FldDoorGetType;
	private readonly WrapperContainer<FldDoorSetAction> _FldDoorSetAction;
	private readonly WrapperContainer<FldDoorSetAnim> _FldDoorSetAnim;
	private readonly WrapperContainer<FldDoorIsAnimEnd> _FldDoorIsAnimEnd;
	private readonly WrapperContainer<FldDoorSetLockState> _FldDoorSetLockState;
	private readonly WrapperContainer<FldDoorGetLockState> _FldDoorGetLockState;
	private readonly WrapperContainer<FldDoorSetColActive> _FldDoorSetColActive;
	private readonly WrapperContainer<FldDoorSetIsDanger> _FldDoorSetIsDanger;
	private readonly WrapperContainer<FldDoorGetLinkFlag_ST> _FldDoorGetLinkFlag_ST;
	private readonly WrapperContainer<FldDoorGetLinkFlag_ED> _FldDoorGetLinkFlag_ED;
	private readonly WrapperContainer<FldLadderGetUidByClosestOnPlayer> _FldLadderGetUidByClosestOnPlayer;
	private readonly WrapperContainer<FldLadderGetUidByResrcUid> _FldLadderGetUidByResrcUid;
	private readonly WrapperContainer<FldLadderOnAccess> _FldLadderOnAccess;
	private readonly WrapperContainer<FldTboxGetUid> _FldTboxGetUid;
	private readonly WrapperContainer<FldTboxGetUidByLayoutName> _FldTboxGetUidByLayoutName;
	private readonly WrapperContainer<FldTboxGetResScrID> _FldTboxGetResScrID;
	private readonly WrapperContainer<FldTboxGetItemID> _FldTboxGetItemID;
	private readonly WrapperContainer<FldTboxGetItemNum> _FldTboxGetItemNum;
	private readonly WrapperContainer<FldTboxGetRarity> _FldTboxGetRarity;
	private readonly WrapperContainer<FldTboxPrepareOfOpen> _FldTboxPrepareOfOpen;
	private readonly WrapperContainer<FldTboxIsReadyToOpen> _FldTboxIsReadyToOpen;
	private readonly WrapperContainer<FldTboxSetAction> _FldTboxSetAction;
	private readonly WrapperContainer<FldTboxGetUseState> _FldTboxGetUseState;
	private readonly WrapperContainer<FldTboxCleanupOfOpen> _FldTboxCleanupOfOpen;
	private readonly WrapperContainer<FldTboxSetColActive> _FldTboxSetColActive;
	private readonly WrapperContainer<FldObjGetUid> _FldObjGetUid;
	private readonly WrapperContainer<FldObjGetUidByLayoutName> _FldObjGetUidByLayoutName;
	private readonly WrapperContainer<FldObjGetItemID> _FldObjGetItemID;
	private readonly WrapperContainer<FldObjGetItemNum> _FldObjGetItemNum;
	private readonly WrapperContainer<FldObjBreak> _FldObjBreak;
	private readonly WrapperContainer<FldObjIsBreak> _FldObjIsBreak;
	private readonly WrapperContainer<FldObjResetBreak> _FldObjResetBreak;
	private readonly WrapperContainer<FldObjFadeOut> _FldObjFadeOut;
	private readonly WrapperContainer<FldGatherGetUid> _FldGatherGetUid;
	private readonly WrapperContainer<FldGatherGetUidByLayoutName> _FldGatherGetUidByLayoutName;
	private readonly WrapperContainer<FldGatherGetUidByLayoutID> _FldGatherGetUidByLayoutID;
	private readonly WrapperContainer<FldGatherSetAction> _FldGatherSetAction;
	private readonly WrapperContainer<FldGatherGetItemID> _FldGatherGetItemID;
	private readonly WrapperContainer<FldGatherGetItemNum> _FldGatherGetItemNum;
	private readonly WrapperContainer<FldGatherSetIsAcquired> _FldGatherSetIsAcquired;
	private readonly WrapperContainer<FldGmcGetUid> _FldGmcGetUid;
	private readonly WrapperContainer<FldGmcGetUidByLayoutName> _FldGmcGetUidByLayoutName;
	private readonly WrapperContainer<FldGmcGetResScrID> _FldGmcGetResScrID;
	private readonly WrapperContainer<FldGmcIsExist> _FldGmcIsExist;
	private readonly WrapperContainer<FldGmcSetAnim> _FldGmcSetAnim;
	private readonly WrapperContainer<FldGmcIsAnimEnd> _FldGmcIsAnimEnd;
	private readonly WrapperContainer<FldGmcSetAnimCurrentTime> _FldGmcSetAnimCurrentTime;
	private readonly WrapperContainer<FldGmcSetAnimSpeed> _FldGmcSetAnimSpeed;
	private readonly WrapperContainer<FldGmcSetAnimSoundActive> _FldGmcSetAnimSoundActive;
	private readonly WrapperContainer<FldGmcPlayEffect> _FldGmcPlayEffect;
	private readonly WrapperContainer<FldGmcSetIsActivated> _FldGmcSetIsActivated;
	private readonly WrapperContainer<FldGmcOnActivate> _FldGmcOnActivate;
	private readonly WrapperContainer<FldGmcIsActivated> _FldGmcIsActivated;
	private readonly WrapperContainer<FldGmcIsRunLinkScript> _FldGmcIsRunLinkScript;
	private readonly WrapperContainer<FldGmcSetVisible> _FldGmcSetVisible;
	private readonly WrapperContainer<FldGmcStartFade> _FldGmcStartFade;
	private readonly WrapperContainer<FldGmcSetColActive> _FldGmcSetColActive;
	private readonly WrapperContainer<FldGmcSetColActiveWithID> _FldGmcSetColActiveWithID;
	private readonly WrapperContainer<FldGmcSetObstacleActive> _FldGmcSetObstacleActive;
	private readonly WrapperContainer<FldGmcDestruction> _FldGmcDestruction;
	private readonly WrapperContainer<FldGmcSetAtkDirForce> _FldGmcSetAtkDirForce;
	private readonly WrapperContainer<FldGmcSetAtkIgnoreWall> _FldGmcSetAtkIgnoreWall;
	private readonly WrapperContainer<FldGmcSetMaxHP> _FldGmcSetMaxHP;
	private readonly WrapperContainer<FldGmcSetHP> _FldGmcSetHP;
	private readonly WrapperContainer<FldGmcGetHP> _FldGmcGetHP;
	private readonly WrapperContainer<FldGmcDecreaseHP> _FldGmcDecreaseHP;
	private readonly WrapperContainer<FldGmcIsPlayerInFront> _FldGmcIsPlayerInFront;
	private readonly WrapperContainer<FldGmcSetAttachPartyCharaToMyself> _FldGmcSetAttachPartyCharaToMyself;
	private readonly WrapperContainer<FldGmcGetExcelData_Flag> _FldGmcGetExcelData_Flag;
	private readonly WrapperContainer<FldGmcGetExcelData_EnemyLayoutID> _FldGmcGetExcelData_EnemyLayoutID;
	private readonly WrapperContainer<FldGmcGetExcelData_CameraNodeName> _FldGmcGetExcelData_CameraNodeName;
	private readonly WrapperContainer<FldGmcGetExcelData_GmcLayoutName> _FldGmcGetExcelData_GmcLayoutName;
	private readonly WrapperContainer<FldGmcRegisterTimerScript> _FldGmcRegisterTimerScript;
	private readonly WrapperContainer<FldGmcUnregisterTimerScript> _FldGmcUnregisterTimerScript;
	private readonly WrapperContainer<FldGmcUpdateGridInfo> _FldGmcUpdateGridInfo;
	private readonly WrapperContainer<FldGmcAdjustFOE> _FldGmcAdjustFOE;
	private readonly WrapperContainer<FldBgObjGetResScrIDByResrcUid> _FldBgObjGetResScrIDByResrcUid;
	private readonly WrapperContainer<FldHitCollisGetUid> _FldHitCollisGetUid;
	private readonly WrapperContainer<FldHitCollisGetUidByLayoutName> _FldHitCollisGetUidByLayoutName;
	private readonly WrapperContainer<FldHitCollisIsCheckUnitInOBB> _FldHitCollisIsCheckUnitInOBB;
	private readonly WrapperContainer<FldHitCollisGetLinkPosID> _FldHitCollisGetLinkPosID;
	private readonly WrapperContainer<FldHitCollisRegisterTimerScript> _FldHitCollisRegisterTimerScript;
	private readonly WrapperContainer<FldHitCollisUnregisterTimerScript> _FldHitCollisUnregisterTimerScript;
	private readonly WrapperContainer<FldActionHitGetUidByLayoutName> _FldActionHitGetUidByLayoutName;
	private readonly WrapperContainer<FldActionHitSetDashJumpFollowPath> _FldActionHitSetDashJumpFollowPath;
	private readonly WrapperContainer<FldActionHitSetDashJumpHitStop> _FldActionHitSetDashJumpHitStop;
	private readonly WrapperContainer<FldGayaHitGetUidByLayoutName> _FldGayaHitGetUidByLayoutName;
	private readonly WrapperContainer<FldGayaHitUpdateTableData> _FldGayaHitUpdateTableData;
	private readonly WrapperContainer<FldGayaHitSetSleepInterval> _FldGayaHitSetSleepInterval;
	private readonly WrapperContainer<FldEnvBoxHeightChange_Start> _FldEnvBoxHeightChange_Start;
	private readonly WrapperContainer<FldEnvBoxHeightChange_Reset> _FldEnvBoxHeightChange_Reset;
	private readonly WrapperContainer<FldEnvBoxHeightChange_End> _FldEnvBoxHeightChange_End;
	private readonly WrapperContainer<FldEnvBoxHeightChange_IsActive> _FldEnvBoxHeightChange_IsActive;
	private readonly WrapperContainer<FldEnvBoxCreateByEnvNumberMask> _FldEnvBoxCreateByEnvNumberMask;
	private readonly WrapperContainer<FldEnvBoxSetByUid> _FldEnvBoxSetByUid;
	private readonly WrapperContainer<FldCameraBoxGetUidByNodeName> _FldCameraBoxGetUidByNodeName;
	private readonly WrapperContainer<FldCameraBoxSetIsActivated> _FldCameraBoxSetIsActivated;
	private readonly WrapperContainer<FldCameraBoxGetIsActivated> _FldCameraBoxGetIsActivated;
	private readonly WrapperContainer<FldCameraBoxSetWideMode> _FldCameraBoxSetWideMode;
	private readonly WrapperContainer<FldCameraBoxAllSetWideMode> _FldCameraBoxAllSetWideMode;
	private readonly WrapperContainer<FldCameraBoxAllSetIsIgnoreInputLock> _FldCameraBoxAllSetIsIgnoreInputLock;
	private readonly WrapperContainer<FldMaskBoxSetOnByUid> _FldMaskBoxSetOnByUid;
	private readonly WrapperContainer<FldMaskBoxSetOnByGroupID> _FldMaskBoxSetOnByGroupID;
	private readonly WrapperContainer<FldMaskBoxSetIsUpdate> _FldMaskBoxSetIsUpdate;
	private readonly WrapperContainer<FldMaskBoxSetOnByLine> _FldMaskBoxSetOnByLine;
	private readonly WrapperContainer<FldSaveEntryEnemyCheckScript_Register> _FldSaveEntryEnemyCheckScript_Register;
	private readonly WrapperContainer<FldSaveEntryEnemyCheckScript_Unregister> _FldSaveEntryEnemyCheckScript_Unregister;
	private readonly WrapperContainer<FldSaveEntryEnemyCheckScript_IsRegister> _FldSaveEntryEnemyCheckScript_IsRegister;
	private readonly WrapperContainer<FldSaveEntryEnemyCheckScript_AddEnemyTableNo> _FldSaveEntryEnemyCheckScript_AddEnemyTableNo;
	private readonly WrapperContainer<FldSaveEntryGimmickDestination_Register> _FldSaveEntryGimmickDestination_Register;
	private readonly WrapperContainer<FldSaveEntryGimmickDestination_Unregister> _FldSaveEntryGimmickDestination_Unregister;
	private readonly WrapperContainer<FldEntryTimerScript_Register> _FldEntryTimerScript_Register;
	private readonly WrapperContainer<FldEntryTimerScript_Unregister> _FldEntryTimerScript_Unregister;
	private readonly WrapperContainer<FldEntryTimerLinkScript_Register> _FldEntryTimerLinkScript_Register;
	private readonly WrapperContainer<FldEntryTimerLinkScript_Unregister> _FldEntryTimerLinkScript_Unregister;
	private readonly WrapperContainer<FldEntryEnemyCheckScript_Register> _FldEntryEnemyCheckScript_Register;
	private readonly WrapperContainer<FldEntryEnemyCheckScript_Unregister> _FldEntryEnemyCheckScript_Unregister;
	private readonly WrapperContainer<FldEntryEnemyCheckScript_IsRegister> _FldEntryEnemyCheckScript_IsRegister;
	private readonly WrapperContainer<FldEntryEnemyCheckScript_AddEnemyTableNo> _FldEntryEnemyCheckScript_AddEnemyTableNo;
	private readonly WrapperContainer<FldEntryEnemyDamageScript_Register> _FldEntryEnemyDamageScript_Register;
	private readonly WrapperContainer<FldEntryEnemyDamageScript_Unregister> _FldEntryEnemyDamageScript_Unregister;
	private readonly WrapperContainer<FldEntryEnemyDiscoverScript_Register> _FldEntryEnemyDiscoverScript_Register;
	private readonly WrapperContainer<FldEntryEnemyDiscoverScript_Unregister> _FldEntryEnemyDiscoverScript_Unregister;
	private readonly WrapperContainer<FldCreateEva> _FldCreateEva;
	private readonly WrapperContainer<FldReturnItemGetMapID> _FldReturnItemGetMapID;
	private readonly WrapperContainer<FldReturnItemGetPosID> _FldReturnItemGetPosID;
	private readonly WrapperContainer<FldChangeCameraNormal> _FldChangeCameraNormal;
	private readonly WrapperContainer<FldChangeCameraWatchY> _FldChangeCameraWatchY;
	private readonly WrapperContainer<DUMMY> _DUMMY;
	private readonly WrapperContainer<CMD_MDL_VISIBLE> _CMD_MDL_VISIBLE;
	private readonly WrapperContainer<CMD_MDL_ANIM> _CMD_MDL_ANIM;
	private readonly WrapperContainer<CMD_MDL_ANIM_SYNC> _CMD_MDL_ANIM_SYNC;
	private readonly WrapperContainer<CMD_MDL_ANIM_SEEK> _CMD_MDL_ANIM_SEEK;
	private readonly WrapperContainer<CMD_MDL_ANIM_FRAMESYNC> _CMD_MDL_ANIM_FRAMESYNC;
	private readonly WrapperContainer<CMD_MDL_ANIM_BLENDSYNC> _CMD_MDL_ANIM_BLENDSYNC;
	private readonly WrapperContainer<CMD_MDL_ANIM_LOOPSYNC> _CMD_MDL_ANIM_LOOPSYNC;
	private readonly WrapperContainer<CMD_MDL_ANIM_SPEED> _CMD_MDL_ANIM_SPEED;
	private readonly WrapperContainer<CMD_MDL_ANIM_NEXT> _CMD_MDL_ANIM_NEXT;
	private readonly WrapperContainer<CMD_MDL_GET_ANIM> _CMD_MDL_GET_ANIM;
	private readonly WrapperContainer<CMD_MDL_GET_ANIM_COUNT> _CMD_MDL_GET_ANIM_COUNT;
	private readonly WrapperContainer<CMD_MDL_ICON> _CMD_MDL_ICON;
	private readonly WrapperContainer<CMD_MDL_ICON_EX> _CMD_MDL_ICON_EX;
	private readonly WrapperContainer<CMD_MDL_ICON_SET_SCALE> _CMD_MDL_ICON_SET_SCALE;
	private readonly WrapperContainer<CMD_MDL_ICON_END> _CMD_MDL_ICON_END;
	private readonly WrapperContainer<CMD_MDL_SET_SCALE> _CMD_MDL_SET_SCALE;
	private readonly WrapperContainer<CMD_MDL_GET_ITEM_RESHND> _CMD_MDL_GET_ITEM_RESHND;
	private readonly WrapperContainer<CMD_MDL_ADD_ANIM> _CMD_MDL_ADD_ANIM;
	private readonly WrapperContainer<CMD_MDL_EMOTE_ANIM> _CMD_MDL_EMOTE_ANIM;
	private readonly WrapperContainer<CMD_MDL_ADD_ANIM_NEXT> _CMD_MDL_ADD_ANIM_NEXT;
	private readonly WrapperContainer<CMD_MDL_ADD_ANIM_SYNC> _CMD_MDL_ADD_ANIM_SYNC;
	private readonly WrapperContainer<CMD_MDL_TRACK_ADD_ANIM> _CMD_MDL_TRACK_ADD_ANIM;
	private readonly WrapperContainer<CMD_MDL_TRACK_ADD_ANIM_NEXT> _CMD_MDL_TRACK_ADD_ANIM_NEXT;
	private readonly WrapperContainer<CMD_MDL_TRACK_ADD_ANIM_SYNC> _CMD_MDL_TRACK_ADD_ANIM_SYNC;
	private readonly WrapperContainer<CMD_MDL_TRACK_CLEAR_ANIM> _CMD_MDL_TRACK_CLEAR_ANIM;
	private readonly WrapperContainer<CMD_MOVIE_PLAY> _CMD_MOVIE_PLAY;
	private readonly WrapperContainer<CMD_MOVIE_SYNC> _CMD_MOVIE_SYNC;
	private readonly WrapperContainer<CMD_PAD_TRIG> _CMD_PAD_TRIG;
	private readonly WrapperContainer<CMD_PAD_PRESS> _CMD_PAD_PRESS;
	private readonly WrapperContainer<CMD_PAD_CHK_TRIG> _CMD_PAD_CHK_TRIG;
	private readonly WrapperContainer<CMD_PAD_CHK_PRESS> _CMD_PAD_CHK_PRESS;
	private readonly WrapperContainer<CMD_ANALOG_ASTICK_CHECK> _CMD_ANALOG_ASTICK_CHECK;
	private readonly WrapperContainer<CMD_FADE_IN> _CMD_FADE_IN;
	private readonly WrapperContainer<CMD_FADE_OUT> _CMD_FADE_OUT;
	private readonly WrapperContainer<CMD_FADEEND_CHECK> _CMD_FADEEND_CHECK;
	private readonly WrapperContainer<CMD_FADE_SYNC> _CMD_FADE_SYNC;
	private readonly WrapperContainer<CMD_FADE_COLOR> _CMD_FADE_COLOR;

    public MetaphorLibrary(ISharedScans scans)
    {
		_seterrorhandler = scans.CreateWrapper<seterrorhandler>(Mod.NAME);
		_setdebughook = scans.CreateWrapper<setdebughook>(Mod.NAME);
		_enabledebuginfo = scans.CreateWrapper<enabledebuginfo>(Mod.NAME);
		_getstackinfos = scans.CreateWrapper<getstackinfos>(Mod.NAME);
		_getroottable = scans.CreateWrapper<getroottable>(Mod.NAME);
		_setroottable = scans.CreateWrapper<setroottable>(Mod.NAME);
		_getconsttable = scans.CreateWrapper<getconsttable>(Mod.NAME);
		_setconsttable = scans.CreateWrapper<setconsttable>(Mod.NAME);
		_assert = scans.CreateWrapper<assert>(Mod.NAME);
		_error = scans.CreateWrapper<error>(Mod.NAME);
		_compilestring = scans.CreateWrapper<compilestring>(Mod.NAME);
		_newthread = scans.CreateWrapper<newthread>(Mod.NAME);
		_suspend = scans.CreateWrapper<suspend>(Mod.NAME);
		_array = scans.CreateWrapper<array>(Mod.NAME);
		_type = scans.CreateWrapper<type>(Mod.NAME);
		_callee = scans.CreateWrapper<callee>(Mod.NAME);
		_dummy = scans.CreateWrapper<dummy>(Mod.NAME);
		_collectgarbage = scans.CreateWrapper<collectgarbage>(Mod.NAME);
		_resurrectunreachable = scans.CreateWrapper<resurrectunreachable>(Mod.NAME);
		_CMD_GET_AND = scans.CreateWrapper<CMD_GET_AND>(Mod.NAME);
		_CMD_GET_OR = scans.CreateWrapper<CMD_GET_OR>(Mod.NAME);
		_CMD_GET_XOR = scans.CreateWrapper<CMD_GET_XOR>(Mod.NAME);
		_CMD_GET_NOT = scans.CreateWrapper<CMD_GET_NOT>(Mod.NAME);
		_CMD_GET_L_SHIFT = scans.CreateWrapper<CMD_GET_L_SHIFT>(Mod.NAME);
		_CMD_GET_R_SHIFT = scans.CreateWrapper<CMD_GET_R_SHIFT>(Mod.NAME);
		_CMD_ADD = scans.CreateWrapper<CMD_ADD>(Mod.NAME);
		_CMD_SUB = scans.CreateWrapper<CMD_SUB>(Mod.NAME);
		_CMD_MUL = scans.CreateWrapper<CMD_MUL>(Mod.NAME);
		_CMD_DIV = scans.CreateWrapper<CMD_DIV>(Mod.NAME);
		_CMD_SURPLUS = scans.CreateWrapper<CMD_SURPLUS>(Mod.NAME);
		_CMD_SIN = scans.CreateWrapper<CMD_SIN>(Mod.NAME);
		_CMD_COS = scans.CreateWrapper<CMD_COS>(Mod.NAME);
		_CMD_TAN = scans.CreateWrapper<CMD_TAN>(Mod.NAME);
		_CMD_ASIN = scans.CreateWrapper<CMD_ASIN>(Mod.NAME);
		_CMD_ACOS = scans.CreateWrapper<CMD_ACOS>(Mod.NAME);
		_CMD_ATAN = scans.CreateWrapper<CMD_ATAN>(Mod.NAME);
		_CMD_ATAN2 = scans.CreateWrapper<CMD_ATAN2>(Mod.NAME);
		_CMD_SQRT = scans.CreateWrapper<CMD_SQRT>(Mod.NAME);
		_CMD_GET_MAX = scans.CreateWrapper<CMD_GET_MAX>(Mod.NAME);
		_CMD_GET_MIN = scans.CreateWrapper<CMD_GET_MIN>(Mod.NAME);
		_XU_AAAAA = scans.CreateWrapper<XU_AAAAA>(Mod.NAME);
		_XU_BBBBB = scans.CreateWrapper<XU_BBBBB>(Mod.NAME);
		_Daily_Process = scans.CreateWrapper<Daily_Process>(Mod.NAME);
		_GetRandomRate = scans.CreateWrapper<GetRandomRate>(Mod.NAME);
		_Sqrt = scans.CreateWrapper<Sqrt>(Mod.NAME);
		_ScriptSkipStopMark = scans.CreateWrapper<ScriptSkipStopMark>(Mod.NAME);
		_BitGet = scans.CreateWrapper<BitGet>(Mod.NAME);
		_BitOn = scans.CreateWrapper<BitOn>(Mod.NAME);
		_BitOff = scans.CreateWrapper<BitOff>(Mod.NAME);
		_CounterGet = scans.CreateWrapper<CounterGet>(Mod.NAME);
		_CounterSet = scans.CreateWrapper<CounterSet>(Mod.NAME);
		_GetDifficulty = scans.CreateWrapper<GetDifficulty>(Mod.NAME);
		_TravelersVoiceAddValueFromRewardID = scans.CreateWrapper<TravelersVoiceAddValueFromRewardID>(Mod.NAME);
		_TravelersVoiceAddValue = scans.CreateWrapper<TravelersVoiceAddValue>(Mod.NAME);
		_TravelersVoicePartySendRequest = scans.CreateWrapper<TravelersVoicePartySendRequest>(Mod.NAME);
		_GetDeltaTime = scans.CreateWrapper<GetDeltaTime>(Mod.NAME);
		_GetElapsedTime = scans.CreateWrapper<GetElapsedTime>(Mod.NAME);
		_IsTimeProgressUI = scans.CreateWrapper<IsTimeProgressUI>(Mod.NAME);
		_GameStartInitialize = scans.CreateWrapper<GameStartInitialize>(Mod.NAME);
		_GetMoney = scans.CreateWrapper<GetMoney>(Mod.NAME);
		_SetMoney = scans.CreateWrapper<SetMoney>(Mod.NAME);
		_AddMoney = scans.CreateWrapper<AddMoney>(Mod.NAME);
		_SetMag = scans.CreateWrapper<SetMag>(Mod.NAME);
		_AddMag = scans.CreateWrapper<AddMag>(Mod.NAME);
		_OpenMoneyUI = scans.CreateWrapper<OpenMoneyUI>(Mod.NAME);
		_AddMoneyUI = scans.CreateWrapper<AddMoneyUI>(Mod.NAME);
		_CloseMoneyUI = scans.CreateWrapper<CloseMoneyUI>(Mod.NAME);
		_IsAddMoneyUIClosed = scans.CreateWrapper<IsAddMoneyUIClosed>(Mod.NAME);
		_OpenMagUI = scans.CreateWrapper<OpenMagUI>(Mod.NAME);
		_AddMagUI = scans.CreateWrapper<AddMagUI>(Mod.NAME);
		_CloseMagUI = scans.CreateWrapper<CloseMagUI>(Mod.NAME);
		_IsAddMagUIClosed = scans.CreateWrapper<IsAddMagUIClosed>(Mod.NAME);
		_OpenEventAddedMagUI = scans.CreateWrapper<OpenEventAddedMagUI>(Mod.NAME);
		_IsEventAddedMagUIClosed = scans.CreateWrapper<IsEventAddedMagUIClosed>(Mod.NAME);
		_SetBagItem = scans.CreateWrapper<SetBagItem>(Mod.NAME);
		_AddBagItem = scans.CreateWrapper<AddBagItem>(Mod.NAME);
		_GetBagItem = scans.CreateWrapper<GetBagItem>(Mod.NAME);
		_HasItemType = scans.CreateWrapper<HasItemType>(Mod.NAME);
		_JoinParty = scans.CreateWrapper<JoinParty>(Mod.NAME);
		_JoinPartyNoRecovery = scans.CreateWrapper<JoinPartyNoRecovery>(Mod.NAME);
		_LeaveParty = scans.CreateWrapper<LeaveParty>(Mod.NAME);
		_SetPartyHeroOnly = scans.CreateWrapper<SetPartyHeroOnly>(Mod.NAME);
		_SetPartyGameClear = scans.CreateWrapper<SetPartyGameClear>(Mod.NAME);
		_InitialClearParty = scans.CreateWrapper<InitialClearParty>(Mod.NAME);
		_IsInParty = scans.CreateWrapper<IsInParty>(Mod.NAME);
		_JoinPartyAsGuest = scans.CreateWrapper<JoinPartyAsGuest>(Mod.NAME);
		_SetBattleParty = scans.CreateWrapper<SetBattleParty>(Mod.NAME);
		_GetBattleParty = scans.CreateWrapper<GetBattleParty>(Mod.NAME);
		_SetBattlePartyFormation = scans.CreateWrapper<SetBattlePartyFormation>(Mod.NAME);
		_SetPartyMemberAwakened = scans.CreateWrapper<SetPartyMemberAwakened>(Mod.NAME);
		_AcquireClass = scans.CreateWrapper<AcquireClass>(Mod.NAME);
		_CanAcquireClass = scans.CreateWrapper<CanAcquireClass>(Mod.NAME);
		_LearnRoyalClassOnPreviousRound = scans.CreateWrapper<LearnRoyalClassOnPreviousRound>(Mod.NAME);
		_GetClassLevel = scans.CreateWrapper<GetClassLevel>(Mod.NAME);
		_GetPartyLearnedClassNum = scans.CreateWrapper<GetPartyLearnedClassNum>(Mod.NAME);
		_SetHeroDefaultParam = scans.CreateWrapper<SetHeroDefaultParam>(Mod.NAME);
		_IsRoundPlay = scans.CreateWrapper<IsRoundPlay>(Mod.NAME);
		_PartyPreset = scans.CreateWrapper<PartyPreset>(Mod.NAME);
		_GetLearnedClassRateRewardProgress = scans.CreateWrapper<GetLearnedClassRateRewardProgress>(Mod.NAME);
		_GetLearnedClassRateRewardItemRecievedProgress = scans.CreateWrapper<GetLearnedClassRateRewardItemRecievedProgress>(Mod.NAME);
		_GetLearnedClassRateRewardItemID = scans.CreateWrapper<GetLearnedClassRateRewardItemID>(Mod.NAME);
		_GetLearnedClassRateRewardItemNum = scans.CreateWrapper<GetLearnedClassRateRewardItemNum>(Mod.NAME);
		_SetLearnedClassRateRewardItemRecieved = scans.CreateWrapper<SetLearnedClassRateRewardItemRecieved>(Mod.NAME);
		_PadIsTrigOK = scans.CreateWrapper<PadIsTrigOK>(Mod.NAME);
		_PadIsTrigOKCancel = scans.CreateWrapper<PadIsTrigOKCancel>(Mod.NAME);
		_PadGet = scans.CreateWrapper<PadGet>(Mod.NAME);
		_PadRumbleStart = scans.CreateWrapper<PadRumbleStart>(Mod.NAME);
		_PadRumbleStop = scans.CreateWrapper<PadRumbleStop>(Mod.NAME);
		_DebugPadRumblePresetRuntimeTest = scans.CreateWrapper<DebugPadRumblePresetRuntimeTest>(Mod.NAME);
		_SndPlayBgm = scans.CreateWrapper<SndPlayBgm>(Mod.NAME);
		_SndStopBgm = scans.CreateWrapper<SndStopBgm>(Mod.NAME);
		_SndFadeOutBgm = scans.CreateWrapper<SndFadeOutBgm>(Mod.NAME);
		_SndPlaySystemSe = scans.CreateWrapper<SndPlaySystemSe>(Mod.NAME);
		_SndPlaySystemSeWithPos = scans.CreateWrapper<SndPlaySystemSeWithPos>(Mod.NAME);
		_SndPlaySystemSeStr = scans.CreateWrapper<SndPlaySystemSeStr>(Mod.NAME);
		_SndPlaySystemSeStrWithPos = scans.CreateWrapper<SndPlaySystemSeStrWithPos>(Mod.NAME);
		_SndStopSystemSe = scans.CreateWrapper<SndStopSystemSe>(Mod.NAME);
		_SndStopAll = scans.CreateWrapper<SndStopAll>(Mod.NAME);
		_SndSetBgmByMapID = scans.CreateWrapper<SndSetBgmByMapID>(Mod.NAME);
		_SndSetEnvByMapID = scans.CreateWrapper<SndSetEnvByMapID>(Mod.NAME);
		_SndPlayEnv = scans.CreateWrapper<SndPlayEnv>(Mod.NAME);
		_SndStopEnv = scans.CreateWrapper<SndStopEnv>(Mod.NAME);
		_SndPlayPartVoice = scans.CreateWrapper<SndPlayPartVoice>(Mod.NAME);
		_CameraShakeAnimStart = scans.CreateWrapper<CameraShakeAnimStart>(Mod.NAME);
		_CameraShakeAnimStop = scans.CreateWrapper<CameraShakeAnimStop>(Mod.NAME);
		_CameraShakeAnimSetScale = scans.CreateWrapper<CameraShakeAnimSetScale>(Mod.NAME);
		_CameraShakeAnimSetSpeed = scans.CreateWrapper<CameraShakeAnimSetSpeed>(Mod.NAME);
		_CameraShakeProgramStart = scans.CreateWrapper<CameraShakeProgramStart>(Mod.NAME);
		_CameraShakeProgramStop = scans.CreateWrapper<CameraShakeProgramStop>(Mod.NAME);
		_SetSchedulerAutoProceedTime = scans.CreateWrapper<SetSchedulerAutoProceedTime>(Mod.NAME);
		_GetCalendarDay = scans.CreateWrapper<GetCalendarDay>(Mod.NAME);
		_SetCalendarDay = scans.CreateWrapper<SetCalendarDay>(Mod.NAME);
		_GetYear = scans.CreateWrapper<GetYear>(Mod.NAME);
		_SetYear = scans.CreateWrapper<SetYear>(Mod.NAME);
		_GetMonth = scans.CreateWrapper<GetMonth>(Mod.NAME);
		_SetMonth = scans.CreateWrapper<SetMonth>(Mod.NAME);
		_GetDay = scans.CreateWrapper<GetDay>(Mod.NAME);
		_SetDay = scans.CreateWrapper<SetDay>(Mod.NAME);
		_GetCalendarDow = scans.CreateWrapper<GetCalendarDow>(Mod.NAME);
		_SetCalendarDow = scans.CreateWrapper<SetCalendarDow>(Mod.NAME);
		_GetCalendarTime = scans.CreateWrapper<GetCalendarTime>(Mod.NAME);
		_SetCalendarTime = scans.CreateWrapper<SetCalendarTime>(Mod.NAME);
		_IsCalendarHoliday = scans.CreateWrapper<IsCalendarHoliday>(Mod.NAME);
		_GetCalendarTemperature = scans.CreateWrapper<GetCalendarTemperature>(Mod.NAME);
		_GetCalendarWeather = scans.CreateWrapper<GetCalendarWeather>(Mod.NAME);
		_GetCalendarWeatherByPoint = scans.CreateWrapper<GetCalendarWeatherByPoint>(Mod.NAME);
		_SetCalendarWeather = scans.CreateWrapper<SetCalendarWeather>(Mod.NAME);
		_GetCalendarGFakeWeather = scans.CreateWrapper<GetCalendarGFakeWeather>(Mod.NAME);
		_SetCalendarGFakeWeather = scans.CreateWrapper<SetCalendarGFakeWeather>(Mod.NAME);
		_ClearCalendarGFakeWeather = scans.CreateWrapper<ClearCalendarGFakeWeather>(Mod.NAME);
		_GetCalendarOverwriteWeatherEndTotalDay = scans.CreateWrapper<GetCalendarOverwriteWeatherEndTotalDay>(Mod.NAME);
		_IsCalendarOverwriteWeatherEnable = scans.CreateWrapper<IsCalendarOverwriteWeatherEnable>(Mod.NAME);
		_SetCalendarOverwriteWeather = scans.CreateWrapper<SetCalendarOverwriteWeather>(Mod.NAME);
		_ClearCalendarOverwriteWeather = scans.CreateWrapper<ClearCalendarOverwriteWeather>(Mod.NAME);
		_IsCalendarBadWeather = scans.CreateWrapper<IsCalendarBadWeather>(Mod.NAME);
		_GetCalendarRegion = scans.CreateWrapper<GetCalendarRegion>(Mod.NAME);
		_SetCalendarRegion = scans.CreateWrapper<SetCalendarRegion>(Mod.NAME);
		_GetWwbgID = scans.CreateWrapper<GetWwbgID>(Mod.NAME);
		_SetWwbgID = scans.CreateWrapper<SetWwbgID>(Mod.NAME);
		_MsgOpen = scans.CreateWrapper<MsgOpen>(Mod.NAME);
		_MsgGetHandleID = scans.CreateWrapper<MsgGetHandleID>(Mod.NAME);
		_MsgCheckOpened = scans.CreateWrapper<MsgCheckOpened>(Mod.NAME);
		_MsgRequest = scans.CreateWrapper<MsgRequest>(Mod.NAME);
		_MsgRequestID = scans.CreateWrapper<MsgRequestID>(Mod.NAME);
		_MsgRequestAccessSpot = scans.CreateWrapper<MsgRequestAccessSpot>(Mod.NAME);
		_MsgRequestAuto = scans.CreateWrapper<MsgRequestAuto>(Mod.NAME);
		_MsgRequestIDAuto = scans.CreateWrapper<MsgRequestIDAuto>(Mod.NAME);
		_MsgRequestSystemMessage = scans.CreateWrapper<MsgRequestSystemMessage>(Mod.NAME);
		_MsgRequestSystemMessageID = scans.CreateWrapper<MsgRequestSystemMessageID>(Mod.NAME);
		_MsgRequestSubtitles = scans.CreateWrapper<MsgRequestSubtitles>(Mod.NAME);
		_MsgRequestSubtitlesAuto = scans.CreateWrapper<MsgRequestSubtitlesAuto>(Mod.NAME);
		_MsgRequestNarration = scans.CreateWrapper<MsgRequestNarration>(Mod.NAME);
		_MsgRequestSelect = scans.CreateWrapper<MsgRequestSelect>(Mod.NAME);
		_MsgRequestSelect_CancelExit = scans.CreateWrapper<MsgRequestSelect_CancelExit>(Mod.NAME);
		_MsgRequestSelectID = scans.CreateWrapper<MsgRequestSelectID>(Mod.NAME);
		_MsgRequestSystemMessageSelect = scans.CreateWrapper<MsgRequestSystemMessageSelect>(Mod.NAME);
		_MsgRequestSystemMessageSelectID = scans.CreateWrapper<MsgRequestSystemMessageSelectID>(Mod.NAME);
		_MsgRequestSelect_Ex = scans.CreateWrapper<MsgRequestSelect_Ex>(Mod.NAME);
		_MsgRequestSelectID_Ex = scans.CreateWrapper<MsgRequestSelectID_Ex>(Mod.NAME);
		_MsgRequestSelectAccessSpot = scans.CreateWrapper<MsgRequestSelectAccessSpot>(Mod.NAME);
		_MsgRequestSelectAccessSpot_Ex = scans.CreateWrapper<MsgRequestSelectAccessSpot_Ex>(Mod.NAME);
		_MsgRequestSystemMessageSelect_Ex = scans.CreateWrapper<MsgRequestSystemMessageSelect_Ex>(Mod.NAME);
		_MsgRequestSystemMessageSelectID_Ex = scans.CreateWrapper<MsgRequestSystemMessageSelectID_Ex>(Mod.NAME);
		_MsgRequestSelect_Shop = scans.CreateWrapper<MsgRequestSelect_Shop>(Mod.NAME);
		_MsgEnd_KeepVoice = scans.CreateWrapper<MsgEnd_KeepVoice>(Mod.NAME);
		_MsgCheckEnd = scans.CreateWrapper<MsgCheckEnd>(Mod.NAME);
		_MsgCheckWindowClosed = scans.CreateWrapper<MsgCheckWindowClosed>(Mod.NAME);
		_MsgIsSelectWindowOpened = scans.CreateWrapper<MsgIsSelectWindowOpened>(Mod.NAME);
		_MsgGetSelectedID = scans.CreateWrapper<MsgGetSelectedID>(Mod.NAME);
		_MsgGetSelectNum = scans.CreateWrapper<MsgGetSelectNum>(Mod.NAME);
		_MsgCanClose = scans.CreateWrapper<MsgCanClose>(Mod.NAME);
		_MsgClose = scans.CreateWrapper<MsgClose>(Mod.NAME);
		_MsgBacklogSeparator = scans.CreateWrapper<MsgBacklogSeparator>(Mod.NAME);
		_MsgGreetingRequest = scans.CreateWrapper<MsgGreetingRequest>(Mod.NAME);
		_MsgGreetingRequestID = scans.CreateWrapper<MsgGreetingRequestID>(Mod.NAME);
		_MsgGreetingRequest_Option = scans.CreateWrapper<MsgGreetingRequest_Option>(Mod.NAME);
		_MsgGreetingRequestID_Option = scans.CreateWrapper<MsgGreetingRequestID_Option>(Mod.NAME);
		_MsgGreetingClose = scans.CreateWrapper<MsgGreetingClose>(Mod.NAME);
		_MsgGreetingCheckEnd = scans.CreateWrapper<MsgGreetingCheckEnd>(Mod.NAME);
		_MsgSetVariable = scans.CreateWrapper<MsgSetVariable>(Mod.NAME);
		_MsgSetVariableINT = scans.CreateWrapper<MsgSetVariableINT>(Mod.NAME);
		_MsgSetVariableMapName = scans.CreateWrapper<MsgSetVariableMapName>(Mod.NAME);
		_MsgClearVariable = scans.CreateWrapper<MsgClearVariable>(Mod.NAME);
		_MsgSetSelectMaskID = scans.CreateWrapper<MsgSetSelectMaskID>(Mod.NAME);
		_MsgSetSelectMaskLabel = scans.CreateWrapper<MsgSetSelectMaskLabel>(Mod.NAME);
		_MsgSetSelectMask = scans.CreateWrapper<MsgSetSelectMask>(Mod.NAME);
		_MsgSystemConfirm = scans.CreateWrapper<MsgSystemConfirm>(Mod.NAME);
		_MsgSystemConfirmCheckEnd = scans.CreateWrapper<MsgSystemConfirmCheckEnd>(Mod.NAME);
		_MsgSystemConfirmGetSelectedID = scans.CreateWrapper<MsgSystemConfirmGetSelectedID>(Mod.NAME);
		_MsgReportOpen = scans.CreateWrapper<MsgReportOpen>(Mod.NAME);
		_MsgReportOpenID = scans.CreateWrapper<MsgReportOpenID>(Mod.NAME);
		_MsgReportOpenType = scans.CreateWrapper<MsgReportOpenType>(Mod.NAME);
		_MsgReportOpenTypeID = scans.CreateWrapper<MsgReportOpenTypeID>(Mod.NAME);
		_MsgReportOpenEx = scans.CreateWrapper<MsgReportOpenEx>(Mod.NAME);
		_MsgReportOpenIDEx = scans.CreateWrapper<MsgReportOpenIDEx>(Mod.NAME);
		_MsgReportClearRequested = scans.CreateWrapper<MsgReportClearRequested>(Mod.NAME);
		_MsgBustupSetFace = scans.CreateWrapper<MsgBustupSetFace>(Mod.NAME);
		_MsgBustupChangeFace = scans.CreateWrapper<MsgBustupChangeFace>(Mod.NAME);
		_MsgBustupSetOFF = scans.CreateWrapper<MsgBustupSetOFF>(Mod.NAME);
		_MsgBustupSetCostume = scans.CreateWrapper<MsgBustupSetCostume>(Mod.NAME);
		_TutorialWindowStart = scans.CreateWrapper<TutorialWindowStart>(Mod.NAME);
		_IsTutorialWindowReady = scans.CreateWrapper<IsTutorialWindowReady>(Mod.NAME);
		_TutorialWindowOpen = scans.CreateWrapper<TutorialWindowOpen>(Mod.NAME);
		_TutorialWindowIsEnd = scans.CreateWrapper<TutorialWindowIsEnd>(Mod.NAME);
		_TutorialWindowEnd = scans.CreateWrapper<TutorialWindowEnd>(Mod.NAME);
		_EventUIBegin = scans.CreateWrapper<EventUIBegin>(Mod.NAME);
		_EventUIEnd = scans.CreateWrapper<EventUIEnd>(Mod.NAME);
		_EventMessageBgClose = scans.CreateWrapper<EventMessageBgClose>(Mod.NAME);
		_WipeStart = scans.CreateWrapper<WipeStart>(Mod.NAME);
		_IsWipeStarted = scans.CreateWrapper<IsWipeStarted>(Mod.NAME);
		_WipeIsEnd = scans.CreateWrapper<WipeIsEnd>(Mod.NAME);
		_WipePreRead = scans.CreateWrapper<WipePreRead>(Mod.NAME);
		_EventWipeStartOut = scans.CreateWrapper<EventWipeStartOut>(Mod.NAME);
		_EventWipeStartIn = scans.CreateWrapper<EventWipeStartIn>(Mod.NAME);
		_EventWipeIsOutEnd = scans.CreateWrapper<EventWipeIsOutEnd>(Mod.NAME);
		_EventWipeIsOutPlayEnd = scans.CreateWrapper<EventWipeIsOutPlayEnd>(Mod.NAME);
		_EventWipeIsInEnd = scans.CreateWrapper<EventWipeIsInEnd>(Mod.NAME);
		_WipeAreaChangeStart = scans.CreateWrapper<WipeAreaChangeStart>(Mod.NAME);
		_WipeAreaChangeStartBoat = scans.CreateWrapper<WipeAreaChangeStartBoat>(Mod.NAME);
		_WipeAreaChangeOutIsEnd = scans.CreateWrapper<WipeAreaChangeOutIsEnd>(Mod.NAME);
		_WipeAreaChangeInIsEnd = scans.CreateWrapper<WipeAreaChangeInIsEnd>(Mod.NAME);
		_WipeAreaChangeInStart = scans.CreateWrapper<WipeAreaChangeInStart>(Mod.NAME);
		_WipeIsNeedToWaitOut = scans.CreateWrapper<WipeIsNeedToWaitOut>(Mod.NAME);
		_FadeIn = scans.CreateWrapper<FadeIn>(Mod.NAME);
		_FadeOut = scans.CreateWrapper<FadeOut>(Mod.NAME);
		_FadeIsEnd = scans.CreateWrapper<FadeIsEnd>(Mod.NAME);
		_AnimFadeOut = scans.CreateWrapper<AnimFadeOut>(Mod.NAME);
		_EventFadeSetPartsBehavior = scans.CreateWrapper<EventFadeSetPartsBehavior>(Mod.NAME);
		_EventFadeOut = scans.CreateWrapper<EventFadeOut>(Mod.NAME);
		_EventFadeIn = scans.CreateWrapper<EventFadeIn>(Mod.NAME);
		_FadeOut_Plain = scans.CreateWrapper<FadeOut_Plain>(Mod.NAME);
		_EventFadeOut_Plain = scans.CreateWrapper<EventFadeOut_Plain>(Mod.NAME);
		_FadeWipeIsEndOut = scans.CreateWrapper<FadeWipeIsEndOut>(Mod.NAME);
		_ResrcReloadClothDataByCurrentSequence = scans.CreateWrapper<ResrcReloadClothDataByCurrentSequence>(Mod.NAME);
		_ResrcClothStatSetting = scans.CreateWrapper<ResrcClothStatSetting>(Mod.NAME);
		_ResrcGetClothStatSetting = scans.CreateWrapper<ResrcGetClothStatSetting>(Mod.NAME);
		_ResrcSearchFieldCharModel = scans.CreateWrapper<ResrcSearchFieldCharModel>(Mod.NAME);
		_ResrcSearchUniqID = scans.CreateWrapper<ResrcSearchUniqID>(Mod.NAME);
		_ResrcGetGroupIdNum = scans.CreateWrapper<ResrcGetGroupIdNum>(Mod.NAME);
		_ResrcGetGroupId = scans.CreateWrapper<ResrcGetGroupId>(Mod.NAME);
		_ResrcGetFaceObjectNum = scans.CreateWrapper<ResrcGetFaceObjectNum>(Mod.NAME);
		_ResrcGetFaceObject = scans.CreateWrapper<ResrcGetFaceObject>(Mod.NAME);
		_ResrcRead = scans.CreateWrapper<ResrcRead>(Mod.NAME);
		_ResrcReadWithUid = scans.CreateWrapper<ResrcReadWithUid>(Mod.NAME);
		_ResrcRead_ATypeModel = scans.CreateWrapper<ResrcRead_ATypeModel>(Mod.NAME);
		_ResrcReadBaseAnimation = scans.CreateWrapper<ResrcReadBaseAnimation>(Mod.NAME);
		_ResrcReadEventBaseAnimation = scans.CreateWrapper<ResrcReadEventBaseAnimation>(Mod.NAME);
		_ResrcSync = scans.CreateWrapper<ResrcSync>(Mod.NAME);
		_ResrcDestroy = scans.CreateWrapper<ResrcDestroy>(Mod.NAME);
		_ResrcBgCacheDestroy = scans.CreateWrapper<ResrcBgCacheDestroy>(Mod.NAME);
		_ResrcAtachScene = scans.CreateWrapper<ResrcAtachScene>(Mod.NAME);
		_ResrcDetachScene = scans.CreateWrapper<ResrcDetachScene>(Mod.NAME);
		_ResrcCameraSet = scans.CreateWrapper<ResrcCameraSet>(Mod.NAME);
		_ResrcCameraReset = scans.CreateWrapper<ResrcCameraReset>(Mod.NAME);
		_ResrcSetVisible = scans.CreateWrapper<ResrcSetVisible>(Mod.NAME);
		_ResrcGetVisible = scans.CreateWrapper<ResrcGetVisible>(Mod.NAME);
		_ResrcSetVisibleGID = scans.CreateWrapper<ResrcSetVisibleGID>(Mod.NAME);
		_ResrcGetVisibleGID = scans.CreateWrapper<ResrcGetVisibleGID>(Mod.NAME);
		_ResrcSetTranslate = scans.CreateWrapper<ResrcSetTranslate>(Mod.NAME);
		_ResrcSetRotate = scans.CreateWrapper<ResrcSetRotate>(Mod.NAME);
		_ResrcSetTranslateToResrc = scans.CreateWrapper<ResrcSetTranslateToResrc>(Mod.NAME);
		_ResrcSetScale = scans.CreateWrapper<ResrcSetScale>(Mod.NAME);
		_ResrcAdjustGpPos = scans.CreateWrapper<ResrcAdjustGpPos>(Mod.NAME);
		_ResrcSetAnim = scans.CreateWrapper<ResrcSetAnim>(Mod.NAME);
		_ResrcSetAnimNext = scans.CreateWrapper<ResrcSetAnimNext>(Mod.NAME);
		_ResrcSetAnimWithoutSE = scans.CreateWrapper<ResrcSetAnimWithoutSE>(Mod.NAME);
		_ResrcSyncAnim = scans.CreateWrapper<ResrcSyncAnim>(Mod.NAME);
		_ResrcSetAnimSpeed = scans.CreateWrapper<ResrcSetAnimSpeed>(Mod.NAME);
		_ResrcSetAnimSpeedNext = scans.CreateWrapper<ResrcSetAnimSpeedNext>(Mod.NAME);
		_ResrcSetAnimCurrentTime = scans.CreateWrapper<ResrcSetAnimCurrentTime>(Mod.NAME);
		_ResrcGetAnimDuration = scans.CreateWrapper<ResrcGetAnimDuration>(Mod.NAME);
		_ResrcAddColObject = scans.CreateWrapper<ResrcAddColObject>(Mod.NAME);
		_ResrcRebuildColObject = scans.CreateWrapper<ResrcRebuildColObject>(Mod.NAME);
		_ResrcIsContainLayoutName = scans.CreateWrapper<ResrcIsContainLayoutName>(Mod.NAME);
		_PostLoadSearchByUidInObj = scans.CreateWrapper<PostLoadSearchByUidInObj>(Mod.NAME);
		_PostLoadSearchByUidInDoor = scans.CreateWrapper<PostLoadSearchByUidInDoor>(Mod.NAME);
		_PostLoadGetGidNum = scans.CreateWrapper<PostLoadGetGidNum>(Mod.NAME);
		_PostLoadGetGidByIndex = scans.CreateWrapper<PostLoadGetGidByIndex>(Mod.NAME);
		_PostLoadGetEffectNum = scans.CreateWrapper<PostLoadGetEffectNum>(Mod.NAME);
		_PostLoadGetEffectByIndex = scans.CreateWrapper<PostLoadGetEffectByIndex>(Mod.NAME);
		_PostLoadConnectBgMng = scans.CreateWrapper<PostLoadConnectBgMng>(Mod.NAME);
		_PostLoadAdjustGpPos = scans.CreateWrapper<PostLoadAdjustGpPos>(Mod.NAME);
		_PostLoadAddColObject = scans.CreateWrapper<PostLoadAddColObject>(Mod.NAME);
		_PostLoadSetVisibleByGidInObj = scans.CreateWrapper<PostLoadSetVisibleByGidInObj>(Mod.NAME);
		_PostLoadSetEnableBgData = scans.CreateWrapper<PostLoadSetEnableBgData>(Mod.NAME);
		_GetPlayerUnitID = scans.CreateWrapper<GetPlayerUnitID>(Mod.NAME);
		_UnitGetLevel = scans.CreateWrapper<UnitGetLevel>(Mod.NAME);
		_UnitGetMaxHP = scans.CreateWrapper<UnitGetMaxHP>(Mod.NAME);
		_UnitGetParam = scans.CreateWrapper<UnitGetParam>(Mod.NAME);
		_UnitGetEquipWeaponParam = scans.CreateWrapper<UnitGetEquipWeaponParam>(Mod.NAME);
		_UnitGetEquipArmorParam = scans.CreateWrapper<UnitGetEquipArmorParam>(Mod.NAME);
		_UnitGetAffinity = scans.CreateWrapper<UnitGetAffinity>(Mod.NAME);
		_UnitGetAffinityType = scans.CreateWrapper<UnitGetAffinityType>(Mod.NAME);
		_UnitFullRecoveryAll = scans.CreateWrapper<UnitFullRecoveryAll>(Mod.NAME);
		_UnitHPRecoveryAll = scans.CreateWrapper<UnitHPRecoveryAll>(Mod.NAME);
		_UnitMPRecoveryAll = scans.CreateWrapper<UnitMPRecoveryAll>(Mod.NAME);
		_UnitBadStatusRecoveryAll = scans.CreateWrapper<UnitBadStatusRecoveryAll>(Mod.NAME);
		_CharaAddMaxHP = scans.CreateWrapper<CharaAddMaxHP>(Mod.NAME);
		_CharaAddHP = scans.CreateWrapper<CharaAddHP>(Mod.NAME);
		_CharaRecoveryHP = scans.CreateWrapper<CharaRecoveryHP>(Mod.NAME);
		_CharaAddMaxMP = scans.CreateWrapper<CharaAddMaxMP>(Mod.NAME);
		_CharaRecoveryMP = scans.CreateWrapper<CharaRecoveryMP>(Mod.NAME);
		_CharaRecoveryBadStatus = scans.CreateWrapper<CharaRecoveryBadStatus>(Mod.NAME);
		_CharaGetClassID = scans.CreateWrapper<CharaGetClassID>(Mod.NAME);
		_CharaSetClass = scans.CreateWrapper<CharaSetClass>(Mod.NAME);
		_CharaAddBaseParam = scans.CreateWrapper<CharaAddBaseParam>(Mod.NAME);
		_CharaSetEquip = scans.CreateWrapper<CharaSetEquip>(Mod.NAME);
		_CharaGetEquip = scans.CreateWrapper<CharaGetEquip>(Mod.NAME);
		_AddNotCompanionCharaEquip = scans.CreateWrapper<AddNotCompanionCharaEquip>(Mod.NAME);
		_AnalyzeOpenAttribute = scans.CreateWrapper<AnalyzeOpenAttribute>(Mod.NAME);
		_FldVoicePackOpen = scans.CreateWrapper<FldVoicePackOpen>(Mod.NAME);
		_FldVoicePackIsEndOpen = scans.CreateWrapper<FldVoicePackIsEndOpen>(Mod.NAME);
		_FldVoicePackSetActive = scans.CreateWrapper<FldVoicePackSetActive>(Mod.NAME);
		_FldVoicePackClose = scans.CreateWrapper<FldVoicePackClose>(Mod.NAME);
		_FldAccessSpotInitEveryDay = scans.CreateWrapper<FldAccessSpotInitEveryDay>(Mod.NAME);
		_FldSpecialDayGet = scans.CreateWrapper<FldSpecialDayGet>(Mod.NAME);
		_FldEventRewardSet_VariableBufferByUpPcParam = scans.CreateWrapper<FldEventRewardSet_VariableBufferByUpPcParam>(Mod.NAME);
		_FldEventRewardGet_TravelersVoiceID = scans.CreateWrapper<FldEventRewardGet_TravelersVoiceID>(Mod.NAME);
		_FldEventRewardGet_PcParam = scans.CreateWrapper<FldEventRewardGet_PcParam>(Mod.NAME);
		_FldEventRewardGet_ItemID = scans.CreateWrapper<FldEventRewardGet_ItemID>(Mod.NAME);
		_FldEventRewardGet_ItemNum = scans.CreateWrapper<FldEventRewardGet_ItemNum>(Mod.NAME);
		_FldEventRewardGet_Money = scans.CreateWrapper<FldEventRewardGet_Money>(Mod.NAME);
		_FldEventRewardGet_Mag = scans.CreateWrapper<FldEventRewardGet_Mag>(Mod.NAME);
		_FldEventRewardGet_CharaID = scans.CreateWrapper<FldEventRewardGet_CharaID>(Mod.NAME);
		_FldEventRewardGet_Parameter = scans.CreateWrapper<FldEventRewardGet_Parameter>(Mod.NAME);
		_FldEventRewardGet_MaxHP = scans.CreateWrapper<FldEventRewardGet_MaxHP>(Mod.NAME);
		_FldEventRewardGet_MaxMP = scans.CreateWrapper<FldEventRewardGet_MaxMP>(Mod.NAME);
		_FldEventRewardGet_ATCategoryID = scans.CreateWrapper<FldEventRewardGet_ATCategoryID>(Mod.NAME);
		_FldEventRewardGet_ATCategoryExp = scans.CreateWrapper<FldEventRewardGet_ATCategoryExp>(Mod.NAME);
		_FldEventRewardGet_QuestID = scans.CreateWrapper<FldEventRewardGet_QuestID>(Mod.NAME);
		_FldGetCurrentMapID = scans.CreateWrapper<FldGetCurrentMapID>(Mod.NAME);
		_FldGetPreMapID = scans.CreateWrapper<FldGetPreMapID>(Mod.NAME);
		_FldSetMapEntered = scans.CreateWrapper<FldSetMapEntered>(Mod.NAME);
		_FldGetCurrentMapZoneID = scans.CreateWrapper<FldGetCurrentMapZoneID>(Mod.NAME);
		_FldDoorSaveDataClear = scans.CreateWrapper<FldDoorSaveDataClear>(Mod.NAME);
		_FldGetSeason = scans.CreateWrapper<FldGetSeason>(Mod.NAME);
		_FldCameraIsEndImmidiateChange = scans.CreateWrapper<FldCameraIsEndImmidiateChange>(Mod.NAME);
		_FldTopUIClose = scans.CreateWrapper<FldTopUIClose>(Mod.NAME);
		_FldTopUIIsClosed = scans.CreateWrapper<FldTopUIIsClosed>(Mod.NAME);
		_FldPreKeyFreeUIOpen = scans.CreateWrapper<FldPreKeyFreeUIOpen>(Mod.NAME);
		_FldPreKeyFreeUIClose = scans.CreateWrapper<FldPreKeyFreeUIClose>(Mod.NAME);
		_FldMapGetCategory = scans.CreateWrapper<FldMapGetCategory>(Mod.NAME);
		_FldMapGetRegion = scans.CreateWrapper<FldMapGetRegion>(Mod.NAME);
		_FldMapGetGenericMapType = scans.CreateWrapper<FldMapGetGenericMapType>(Mod.NAME);
		_FldScriptFuncGetArg_Int = scans.CreateWrapper<FldScriptFuncGetArg_Int>(Mod.NAME);
		_FldScriptFuncGetArg_Float = scans.CreateWrapper<FldScriptFuncGetArg_Float>(Mod.NAME);
		_FldScriptFuncGetArg_Bool = scans.CreateWrapper<FldScriptFuncGetArg_Bool>(Mod.NAME);
		_FldScriptFuncSetResult_Int = scans.CreateWrapper<FldScriptFuncSetResult_Int>(Mod.NAME);
		_FldScriptFuncSetResult_Float = scans.CreateWrapper<FldScriptFuncSetResult_Float>(Mod.NAME);
		_FldScriptFuncSetResult_Bool = scans.CreateWrapper<FldScriptFuncSetResult_Bool>(Mod.NAME);
		_FldMorningSetStatusIndex = scans.CreateWrapper<FldMorningSetStatusIndex>(Mod.NAME);
		_FldDinnerSetStatusIndex = scans.CreateWrapper<FldDinnerSetStatusIndex>(Mod.NAME);
		_FldTravelGetZoneIDByMapID = scans.CreateWrapper<FldTravelGetZoneIDByMapID>(Mod.NAME);
		_FldTravelSetMoveType = scans.CreateWrapper<FldTravelSetMoveType>(Mod.NAME);
		_FldTravelGetMoveType = scans.CreateWrapper<FldTravelGetMoveType>(Mod.NAME);
		_FldTravelIsCarMove = scans.CreateWrapper<FldTravelIsCarMove>(Mod.NAME);
		_FldTravelGetNowPathID = scans.CreateWrapper<FldTravelGetNowPathID>(Mod.NAME);
		_FldTravelGetQuestID = scans.CreateWrapper<FldTravelGetQuestID>(Mod.NAME);
		_FldTravelGetMsgNum = scans.CreateWrapper<FldTravelGetMsgNum>(Mod.NAME);
		_FldTravelMsgRequest = scans.CreateWrapper<FldTravelMsgRequest>(Mod.NAME);
		_FldTravelIsSeason = scans.CreateWrapper<FldTravelIsSeason>(Mod.NAME);
		_FldTravelIsNeedTimeZoneTransitionDirection = scans.CreateWrapper<FldTravelIsNeedTimeZoneTransitionDirection>(Mod.NAME);
		_FldTravelResetTimeZoneTransitionExecutionHistory = scans.CreateWrapper<FldTravelResetTimeZoneTransitionExecutionHistory>(Mod.NAME);
		_FldCookItemReset = scans.CreateWrapper<FldCookItemReset>(Mod.NAME);
		_FldPresetCharaArchitype = scans.CreateWrapper<FldPresetCharaArchitype>(Mod.NAME);
		_ElectionRankUp_Rival = scans.CreateWrapper<ElectionRankUp_Rival>(Mod.NAME);
		_ElectionRankUp_PlaySpot = scans.CreateWrapper<ElectionRankUp_PlaySpot>(Mod.NAME);
		_ElectionRankUp_Follower = scans.CreateWrapper<ElectionRankUp_Follower>(Mod.NAME);
		_Election_Daily_Process = scans.CreateWrapper<Election_Daily_Process>(Mod.NAME);
		_ElectionRankUp_IsEnd = scans.CreateWrapper<ElectionRankUp_IsEnd>(Mod.NAME);
		_Election_SetRank = scans.CreateWrapper<Election_SetRank>(Mod.NAME);
		_Election_SetRankByFlag = scans.CreateWrapper<Election_SetRankByFlag>(Mod.NAME);
		_Election_IsHighestRank = scans.CreateWrapper<Election_IsHighestRank>(Mod.NAME);
		_Election_Display_Open = scans.CreateWrapper<Election_Display_Open>(Mod.NAME);
		_Election_Display_Close = scans.CreateWrapper<Election_Display_Close>(Mod.NAME);
		_BtlGetEncountIDByPack = scans.CreateWrapper<BtlGetEncountIDByPack>(Mod.NAME);
		_BtlLoadPrereadData = scans.CreateWrapper<BtlLoadPrereadData>(Mod.NAME);
		_BtlLoadPrereadMultiDataByPack = scans.CreateWrapper<BtlLoadPrereadMultiDataByPack>(Mod.NAME);
		_BtlLoadPrereadRandomDataByPack = scans.CreateWrapper<BtlLoadPrereadRandomDataByPack>(Mod.NAME);
		_BtlIsLoadedPrereadData = scans.CreateWrapper<BtlIsLoadedPrereadData>(Mod.NAME);
		_BtlGetResult = scans.CreateWrapper<BtlGetResult>(Mod.NAME);
		_BtlGetElapsedPlayerTurn = scans.CreateWrapper<BtlGetElapsedPlayerTurn>(Mod.NAME);
		_BtlGetGameOverSelectId = scans.CreateWrapper<BtlGetGameOverSelectId>(Mod.NAME);
		_SeqCallField_MapID = scans.CreateWrapper<SeqCallField_MapID>(Mod.NAME);
		_SeqCallField_MapIDByNpcPos = scans.CreateWrapper<SeqCallField_MapIDByNpcPos>(Mod.NAME);
		_SeqCallField_BgID = scans.CreateWrapper<SeqCallField_BgID>(Mod.NAME);
		_SeqCallField_Eva = scans.CreateWrapper<SeqCallField_Eva>(Mod.NAME);
		_SeqCallField_EvaPlayerPos = scans.CreateWrapper<SeqCallField_EvaPlayerPos>(Mod.NAME);
		_SeqCallField_MapID_DungeonEvent = scans.CreateWrapper<SeqCallField_MapID_DungeonEvent>(Mod.NAME);
		_SeqCallField_MapIDByNpcPos_DungeonEvent = scans.CreateWrapper<SeqCallField_MapIDByNpcPos_DungeonEvent>(Mod.NAME);
		_SeqCallField_Eva_DungeonEvent = scans.CreateWrapper<SeqCallField_Eva_DungeonEvent>(Mod.NAME);
		_SeqCallField_EvaPlayerPos_DungeonEvent = scans.CreateWrapper<SeqCallField_EvaPlayerPos_DungeonEvent>(Mod.NAME);
		_SeqFieldFadeInLockOff = scans.CreateWrapper<SeqFieldFadeInLockOff>(Mod.NAME);
		_SeqExistFieldEva = scans.CreateWrapper<SeqExistFieldEva>(Mod.NAME);
		_SeqExistField = scans.CreateWrapper<SeqExistField>(Mod.NAME);
		_SeqExistFieldByUid = scans.CreateWrapper<SeqExistFieldByUid>(Mod.NAME);
		_SeqReadyField = scans.CreateWrapper<SeqReadyField>(Mod.NAME);
		_SeqIdleField = scans.CreateWrapper<SeqIdleField>(Mod.NAME);
		_SeqFieldIsCanUseCommand = scans.CreateWrapper<SeqFieldIsCanUseCommand>(Mod.NAME);
		_SeqEndWait = scans.CreateWrapper<SeqEndWait>(Mod.NAME);
		_SeqCallTitle = scans.CreateWrapper<SeqCallTitle>(Mod.NAME);
		_SeqCallCamp = scans.CreateWrapper<SeqCallCamp>(Mod.NAME);
		_SeqCallEvent = scans.CreateWrapper<SeqCallEvent>(Mod.NAME);
		_SeqExistEvent = scans.CreateWrapper<SeqExistEvent>(Mod.NAME);
		_SeqCallModelViewer_1031 = scans.CreateWrapper<SeqCallModelViewer_1031>(Mod.NAME);
		_SeqCallCalendar = scans.CreateWrapper<SeqCallCalendar>(Mod.NAME);
		_SeqCallCalendarMDT = scans.CreateWrapper<SeqCallCalendarMDT>(Mod.NAME);
		_SeqExistCalendar = scans.CreateWrapper<SeqExistCalendar>(Mod.NAME);
		_SeqCallBattle = scans.CreateWrapper<SeqCallBattle>(Mod.NAME);
		_SeqCallBattleByPack = scans.CreateWrapper<SeqCallBattleByPack>(Mod.NAME);
		_SeqExistBattle = scans.CreateWrapper<SeqExistBattle>(Mod.NAME);
		_SeqCurrentDestroy = scans.CreateWrapper<SeqCurrentDestroy>(Mod.NAME);
		_SeqCallStartMenu = scans.CreateWrapper<SeqCallStartMenu>(Mod.NAME);
		_SeqSetSoftResetEnable = scans.CreateWrapper<SeqSetSoftResetEnable>(Mod.NAME);
		_NovelStart = scans.CreateWrapper<NovelStart>(Mod.NAME);
		_NovelIsReady = scans.CreateWrapper<NovelIsReady>(Mod.NAME);
		_NovelEnd = scans.CreateWrapper<NovelEnd>(Mod.NAME);
		_NovelIsEnd = scans.CreateWrapper<NovelIsEnd>(Mod.NAME);
		_WorldMapStart = scans.CreateWrapper<WorldMapStart>(Mod.NAME);
		_WorldMapIsReady = scans.CreateWrapper<WorldMapIsReady>(Mod.NAME);
		_WorldMapOpen = scans.CreateWrapper<WorldMapOpen>(Mod.NAME);
		_WorldMapOpenNowMap = scans.CreateWrapper<WorldMapOpenNowMap>(Mod.NAME);
		_WorldMapIsOpened = scans.CreateWrapper<WorldMapIsOpened>(Mod.NAME);
		_WorldMapClose = scans.CreateWrapper<WorldMapClose>(Mod.NAME);
		_WorldMapIsClosed = scans.CreateWrapper<WorldMapIsClosed>(Mod.NAME);
		_WorldMapGetSelected = scans.CreateWrapper<WorldMapGetSelected>(Mod.NAME);
		_WorldMapEnd = scans.CreateWrapper<WorldMapEnd>(Mod.NAME);
		_MapOpen = scans.CreateWrapper<MapOpen>(Mod.NAME);
		_MapOpenEx = scans.CreateWrapper<MapOpenEx>(Mod.NAME);
		_MapOpenWithID = scans.CreateWrapper<MapOpenWithID>(Mod.NAME);
		_MapIsEnd = scans.CreateWrapper<MapIsEnd>(Mod.NAME);
		_MapIsShortcut = scans.CreateWrapper<MapIsShortcut>(Mod.NAME);
		_GetShortcutMapID = scans.CreateWrapper<GetShortcutMapID>(Mod.NAME);
		_GetShortcutPositionID = scans.CreateWrapper<GetShortcutPositionID>(Mod.NAME);
		_ItemGetWindowEventOpen = scans.CreateWrapper<ItemGetWindowEventOpen>(Mod.NAME);
		_ItemGetWindowIsEnd = scans.CreateWrapper<ItemGetWindowIsEnd>(Mod.NAME);
		_ItemGetTreasure = scans.CreateWrapper<ItemGetTreasure>(Mod.NAME);
		_ItemGet = scans.CreateWrapper<ItemGet>(Mod.NAME);
		_FclShopStart = scans.CreateWrapper<FclShopStart>(Mod.NAME);
		_FclShopIsEnd = scans.CreateWrapper<FclShopIsEnd>(Mod.NAME);
		_FclShopGetItemID = scans.CreateWrapper<FclShopGetItemID>(Mod.NAME);
		_FclShopIsFirstInfoItem = scans.CreateWrapper<FclShopIsFirstInfoItem>(Mod.NAME);
		_FclShopGetSelectedMenu = scans.CreateWrapper<FclShopGetSelectedMenu>(Mod.NAME);
		_FclShopExit = scans.CreateWrapper<FclShopExit>(Mod.NAME);
		_FclRecruitmentStart = scans.CreateWrapper<FclRecruitmentStart>(Mod.NAME);
		_FclRecruitmentTitleStart = scans.CreateWrapper<FclRecruitmentTitleStart>(Mod.NAME);
		_FclRecruitmentIsClearEvent = scans.CreateWrapper<FclRecruitmentIsClearEvent>(Mod.NAME);
		_FclRecruitmentIsEnd = scans.CreateWrapper<FclRecruitmentIsEnd>(Mod.NAME);
		_FclRecruitmentExit = scans.CreateWrapper<FclRecruitmentExit>(Mod.NAME);
		_FclNameEntryStart = scans.CreateWrapper<FclNameEntryStart>(Mod.NAME);
		_FclNameEntryIsEnd = scans.CreateWrapper<FclNameEntryIsEnd>(Mod.NAME);
		_FclPlayerNameEntryStart = scans.CreateWrapper<FclPlayerNameEntryStart>(Mod.NAME);
		_FclPlayerNameEntryIsEnd = scans.CreateWrapper<FclPlayerNameEntryIsEnd>(Mod.NAME);
		_DifficultySelectStart = scans.CreateWrapper<DifficultySelectStart>(Mod.NAME);
		_DifficultySelectIsReady = scans.CreateWrapper<DifficultySelectIsReady>(Mod.NAME);
		_DifficultySelectOpen = scans.CreateWrapper<DifficultySelectOpen>(Mod.NAME);
		_DifficultySelectIsEnd = scans.CreateWrapper<DifficultySelectIsEnd>(Mod.NAME);
		_DifficultySelectDestroy = scans.CreateWrapper<DifficultySelectDestroy>(Mod.NAME);
		_AcademiaStart = scans.CreateWrapper<AcademiaStart>(Mod.NAME);
		_AcademiaWaitUIOpend = scans.CreateWrapper<AcademiaWaitUIOpend>(Mod.NAME);
		_AcademiaIsEnd = scans.CreateWrapper<AcademiaIsEnd>(Mod.NAME);
		_AcademiaIsTopMenu = scans.CreateWrapper<AcademiaIsTopMenu>(Mod.NAME);
		_AcademiaItemGetWindowEventOpen = scans.CreateWrapper<AcademiaItemGetWindowEventOpen>(Mod.NAME);
		_AcademiaTalk_LabelNum = scans.CreateWrapper<AcademiaTalk_LabelNum>(Mod.NAME);
		_AcademiaTalk_RequestMessage = scans.CreateWrapper<AcademiaTalk_RequestMessage>(Mod.NAME);
		_AcademiaLearnTalk_GetClassID = scans.CreateWrapper<AcademiaLearnTalk_GetClassID>(Mod.NAME);
		_AcademiaLearnTalk_GetCharaID = scans.CreateWrapper<AcademiaLearnTalk_GetCharaID>(Mod.NAME);
		_AcademiaLearnTalk_GetNeedMag = scans.CreateWrapper<AcademiaLearnTalk_GetNeedMag>(Mod.NAME);
		_AcademiaLearnTalk_SetVariableBufferClass = scans.CreateWrapper<AcademiaLearnTalk_SetVariableBufferClass>(Mod.NAME);
		_AcademiaLearnTalk_NotDispAcademia = scans.CreateWrapper<AcademiaLearnTalk_NotDispAcademia>(Mod.NAME);
		_AcademiaLearnTalk_DispAcademia = scans.CreateWrapper<AcademiaLearnTalk_DispAcademia>(Mod.NAME);
		_DateProgressUI_Start = scans.CreateWrapper<DateProgressUI_Start>(Mod.NAME);
		_DateProgressUI_IsReady = scans.CreateWrapper<DateProgressUI_IsReady>(Mod.NAME);
		_DateProgressUI_Open = scans.CreateWrapper<DateProgressUI_Open>(Mod.NAME);
		_DateProgressUI_OpenNoMessage = scans.CreateWrapper<DateProgressUI_OpenNoMessage>(Mod.NAME);
		_DateProgressUI_IsClosed = scans.CreateWrapper<DateProgressUI_IsClosed>(Mod.NAME);
		_DateProgressUI_End = scans.CreateWrapper<DateProgressUI_End>(Mod.NAME);
		_DateUI_ChangeTime = scans.CreateWrapper<DateUI_ChangeTime>(Mod.NAME);
		_Quest_GetStatus = scans.CreateWrapper<Quest_GetStatus>(Mod.NAME);
		_Quest_SetState_Obtained = scans.CreateWrapper<Quest_SetState_Obtained>(Mod.NAME);
		_Quest_SetState_Accepted = scans.CreateWrapper<Quest_SetState_Accepted>(Mod.NAME);
		_Quest_SetState_ReadyToDebrief = scans.CreateWrapper<Quest_SetState_ReadyToDebrief>(Mod.NAME);
		_Quest_SetState_Completed = scans.CreateWrapper<Quest_SetState_Completed>(Mod.NAME);
		_Quest_SetState_Expired = scans.CreateWrapper<Quest_SetState_Expired>(Mod.NAME);
		_Quest_GetProgression = scans.CreateWrapper<Quest_GetProgression>(Mod.NAME);
		_Quest_AdvanceProgression = scans.CreateWrapper<Quest_AdvanceProgression>(Mod.NAME);
		_Quest_SetProgression = scans.CreateWrapper<Quest_SetProgression>(Mod.NAME);
		_Quest_SetDestinationOpen = scans.CreateWrapper<Quest_SetDestinationOpen>(Mod.NAME);
		_Quest_IsDestinationOpened = scans.CreateWrapper<Quest_IsDestinationOpened>(Mod.NAME);
		_Quest_GetRemainDays = scans.CreateWrapper<Quest_GetRemainDays>(Mod.NAME);
		_Quest_GetTargetEnemyGoalCount = scans.CreateWrapper<Quest_GetTargetEnemyGoalCount>(Mod.NAME);
		_Quest_GetTargetEnemyNowCount = scans.CreateWrapper<Quest_GetTargetEnemyNowCount>(Mod.NAME);
		_Quest_GetTargetEnemyID = scans.CreateWrapper<Quest_GetTargetEnemyID>(Mod.NAME);
		_Quest_GetTargetItemID = scans.CreateWrapper<Quest_GetTargetItemID>(Mod.NAME);
		_Quest_Change_RewardMoney_Type = scans.CreateWrapper<Quest_Change_RewardMoney_Type>(Mod.NAME);
		_Quest_GetRewardMoney = scans.CreateWrapper<Quest_GetRewardMoney>(Mod.NAME);
		_Quest_Daily_Process = scans.CreateWrapper<Quest_Daily_Process>(Mod.NAME);
		_Quest_GetNum_ReadyToDebrief = scans.CreateWrapper<Quest_GetNum_ReadyToDebrief>(Mod.NAME);
		_Quest_GetNumSpecifiedDaysToLimit = scans.CreateWrapper<Quest_GetNumSpecifiedDaysToLimit>(Mod.NAME);
		_QuestUI_Start = scans.CreateWrapper<QuestUI_Start>(Mod.NAME);
		_QuestUI_IsReady = scans.CreateWrapper<QuestUI_IsReady>(Mod.NAME);
		_QuestUI_Open_Accept = scans.CreateWrapper<QuestUI_Open_Accept>(Mod.NAME);
		_QuestUI_Open_Clear = scans.CreateWrapper<QuestUI_Open_Clear>(Mod.NAME);
		_QuestUI_IsClosed = scans.CreateWrapper<QuestUI_IsClosed>(Mod.NAME);
		_QuestUI_End = scans.CreateWrapper<QuestUI_End>(Mod.NAME);
		_BountyUI_Start = scans.CreateWrapper<BountyUI_Start>(Mod.NAME);
		_BountyUI_IsReady = scans.CreateWrapper<BountyUI_IsReady>(Mod.NAME);
		_BountyUI_Open_Accept = scans.CreateWrapper<BountyUI_Open_Accept>(Mod.NAME);
		_BountyUI_Open_Clear = scans.CreateWrapper<BountyUI_Open_Clear>(Mod.NAME);
		_BountyUI_IsClosed = scans.CreateWrapper<BountyUI_IsClosed>(Mod.NAME);
		_BountyUI_End = scans.CreateWrapper<BountyUI_End>(Mod.NAME);
		_FollowerUI_Start = scans.CreateWrapper<FollowerUI_Start>(Mod.NAME);
		_FollowerUI_IsEnd = scans.CreateWrapper<FollowerUI_IsEnd>(Mod.NAME);
		_GetFollowerID_OnRankUpScript = scans.CreateWrapper<GetFollowerID_OnRankUpScript>(Mod.NAME);
		_GetFollowerRank_OnRankUpScript = scans.CreateWrapper<GetFollowerRank_OnRankUpScript>(Mod.NAME);
		_SortieUI_Start = scans.CreateWrapper<SortieUI_Start>(Mod.NAME);
		_SortieUI_IsReady = scans.CreateWrapper<SortieUI_IsReady>(Mod.NAME);
		_SortieUI_Open = scans.CreateWrapper<SortieUI_Open>(Mod.NAME);
		_SortieUI_IsClosed = scans.CreateWrapper<SortieUI_IsClosed>(Mod.NAME);
		_SortieUI_GetResult = scans.CreateWrapper<SortieUI_GetResult>(Mod.NAME);
		_SortieUI_End = scans.CreateWrapper<SortieUI_End>(Mod.NAME);
		_SortieMapUI_Start = scans.CreateWrapper<SortieMapUI_Start>(Mod.NAME);
		_SortieMapUI_IsReady = scans.CreateWrapper<SortieMapUI_IsReady>(Mod.NAME);
		_SortieMapUI_Open = scans.CreateWrapper<SortieMapUI_Open>(Mod.NAME);
		_SortieMapUI_Open_MapPoint = scans.CreateWrapper<SortieMapUI_Open_MapPoint>(Mod.NAME);
		_SortieMapUI_Open_MapPointByMapID = scans.CreateWrapper<SortieMapUI_Open_MapPointByMapID>(Mod.NAME);
		_SortieMapUI_Open_Intercity = scans.CreateWrapper<SortieMapUI_Open_Intercity>(Mod.NAME);
		_SortieMapUI_Open_SelectDestinationPoint = scans.CreateWrapper<SortieMapUI_Open_SelectDestinationPoint>(Mod.NAME);
		_SortieMapUI_IsClosed = scans.CreateWrapper<SortieMapUI_IsClosed>(Mod.NAME);
		_SortieMapUI_GetResult = scans.CreateWrapper<SortieMapUI_GetResult>(Mod.NAME);
		_SortieMapUI_End = scans.CreateWrapper<SortieMapUI_End>(Mod.NAME);
		_SortieMapUI_SetPlayedPointEffect = scans.CreateWrapper<SortieMapUI_SetPlayedPointEffect>(Mod.NAME);
		_SortieMapUI_SetPlayedPathEffect = scans.CreateWrapper<SortieMapUI_SetPlayedPathEffect>(Mod.NAME);
		_SortieMapUI_GetPlayedPointEffect = scans.CreateWrapper<SortieMapUI_GetPlayedPointEffect>(Mod.NAME);
		_SortieMapUI_GetPlayedPathEffect = scans.CreateWrapper<SortieMapUI_GetPlayedPathEffect>(Mod.NAME);
		_SortieMapUI_IsEventToolTestMode = scans.CreateWrapper<SortieMapUI_IsEventToolTestMode>(Mod.NAME);
		_SortieMapUI_SetPlayedAllOpendPointAndPathEffect = scans.CreateWrapper<SortieMapUI_SetPlayedAllOpendPointAndPathEffect>(Mod.NAME);
		_SortieMapUI_ResetRoute = scans.CreateWrapper<SortieMapUI_ResetRoute>(Mod.NAME);
		_SortieMapUI_AddRoute = scans.CreateWrapper<SortieMapUI_AddRoute>(Mod.NAME);
		_SortieMapUIEffect_Start = scans.CreateWrapper<SortieMapUIEffect_Start>(Mod.NAME);
		_SortieMapUIEffect_IsReady = scans.CreateWrapper<SortieMapUIEffect_IsReady>(Mod.NAME);
		_SortieMapUIEffect_OpenHighlightPoint = scans.CreateWrapper<SortieMapUIEffect_OpenHighlightPoint>(Mod.NAME);
		_SortieMapUIEffect_IsOpen = scans.CreateWrapper<SortieMapUIEffect_IsOpen>(Mod.NAME);
		_SortieMapUIEffect_OpenAutoClose = scans.CreateWrapper<SortieMapUIEffect_OpenAutoClose>(Mod.NAME);
		_SortieMapUIEffect_OpenPlayerAnime = scans.CreateWrapper<SortieMapUIEffect_OpenPlayerAnime>(Mod.NAME);
		_SortieMapUIEffect_OpenPlayerAnimeIntercity = scans.CreateWrapper<SortieMapUIEffect_OpenPlayerAnimeIntercity>(Mod.NAME);
		_SortieMapUIEffect_Close = scans.CreateWrapper<SortieMapUIEffect_Close>(Mod.NAME);
		_SortieMapUIEffect_IsClosed = scans.CreateWrapper<SortieMapUIEffect_IsClosed>(Mod.NAME);
		_SortieMapUIEffect_End = scans.CreateWrapper<SortieMapUIEffect_End>(Mod.NAME);
		_SortieMapUIEffect_AddNewEffect = scans.CreateWrapper<SortieMapUIEffect_AddNewEffect>(Mod.NAME);
		_SortieMapUI_IsEnableSortie = scans.CreateWrapper<SortieMapUI_IsEnableSortie>(Mod.NAME);
		_SortieMapUI_IsConnect = scans.CreateWrapper<SortieMapUI_IsConnect>(Mod.NAME);
		_SortieMapUI_GetPointID = scans.CreateWrapper<SortieMapUI_GetPointID>(Mod.NAME);
		_SortieMapUI_GetPointMapDataID = scans.CreateWrapper<SortieMapUI_GetPointMapDataID>(Mod.NAME);
		_SortieMapUI_GetPointPositionID = scans.CreateWrapper<SortieMapUI_GetPointPositionID>(Mod.NAME);
		_SortieMapUI_GetPointQuestID = scans.CreateWrapper<SortieMapUI_GetPointQuestID>(Mod.NAME);
		_SortieMapUI_GetMapID = scans.CreateWrapper<SortieMapUI_GetMapID>(Mod.NAME);
		_SortieMapUI_GetPathNeedDay = scans.CreateWrapper<SortieMapUI_GetPathNeedDay>(Mod.NAME);
		_SortieMapUI_MoveAutoCursor = scans.CreateWrapper<SortieMapUI_MoveAutoCursor>(Mod.NAME);
		_SortieMapUI_IsEndMoveAutoCursor = scans.CreateWrapper<SortieMapUI_IsEndMoveAutoCursor>(Mod.NAME);
		_SortieMapUI_IsFirstMap = scans.CreateWrapper<SortieMapUI_IsFirstMap>(Mod.NAME);
		_SortieMapUI_IsBadWeather = scans.CreateWrapper<SortieMapUI_IsBadWeather>(Mod.NAME);
		_SortieMapUI_IsBadWeatherToday = scans.CreateWrapper<SortieMapUI_IsBadWeatherToday>(Mod.NAME);
		_SortieMapUI_IsOpenArrivalDayWeather = scans.CreateWrapper<SortieMapUI_IsOpenArrivalDayWeather>(Mod.NAME);
		_SortieMapUI_GetRouteNum = scans.CreateWrapper<SortieMapUI_GetRouteNum>(Mod.NAME);
		_SortieMapUI_StartRouteSelect = scans.CreateWrapper<SortieMapUI_StartRouteSelect>(Mod.NAME);
		_SortieMapUI_IsEndRouteSelect = scans.CreateWrapper<SortieMapUI_IsEndRouteSelect>(Mod.NAME);
		_SortieMapUI_GetRoutePathIDOnSortieScript = scans.CreateWrapper<SortieMapUI_GetRoutePathIDOnSortieScript>(Mod.NAME);
		_SortieMapUI_GetRoutePointIDOnSortieScript = scans.CreateWrapper<SortieMapUI_GetRoutePointIDOnSortieScript>(Mod.NAME);
		_SortieMapUI_GetRoutePathIndexMaxOnSortieScript = scans.CreateWrapper<SortieMapUI_GetRoutePathIndexMaxOnSortieScript>(Mod.NAME);
		_SortieMapUI_GetRoutePathID = scans.CreateWrapper<SortieMapUI_GetRoutePathID>(Mod.NAME);
		_SortieMapUI_GetRoutePointID = scans.CreateWrapper<SortieMapUI_GetRoutePointID>(Mod.NAME);
		_SortieMapUI_GetRoutePathIndexMax = scans.CreateWrapper<SortieMapUI_GetRoutePathIndexMax>(Mod.NAME);
		_SortieMapUI_GetPointType = scans.CreateWrapper<SortieMapUI_GetPointType>(Mod.NAME);
		_SortieMapUI_GetHapeningIndex = scans.CreateWrapper<SortieMapUI_GetHapeningIndex>(Mod.NAME);
		_SortieMapUI_SetHapeningOccurred = scans.CreateWrapper<SortieMapUI_SetHapeningOccurred>(Mod.NAME);
		_SortieMapUI_GetPathMapID = scans.CreateWrapper<SortieMapUI_GetPathMapID>(Mod.NAME);
		_SortieMapUI_GetHappeningID = scans.CreateWrapper<SortieMapUI_GetHappeningID>(Mod.NAME);
		_SortieMapUI_GetHappeningArg = scans.CreateWrapper<SortieMapUI_GetHappeningArg>(Mod.NAME);
		_SortieMapUI_CallEvent = scans.CreateWrapper<SortieMapUI_CallEvent>(Mod.NAME);
		_SortieMapUI_GetLoadPrereadData = scans.CreateWrapper<SortieMapUI_GetLoadPrereadData>(Mod.NAME);
		_SortieMapUI_GetLoadPrereadDataByGaisennsha = scans.CreateWrapper<SortieMapUI_GetLoadPrereadDataByGaisennsha>(Mod.NAME);
		_SortieMapUI_GetMapIDByPoint = scans.CreateWrapper<SortieMapUI_GetMapIDByPoint>(Mod.NAME);
		_SortieMapUI_GetPosIDByPoint = scans.CreateWrapper<SortieMapUI_GetPosIDByPoint>(Mod.NAME);
		_SortieMapUI_GetRegionIDByPoint = scans.CreateWrapper<SortieMapUI_GetRegionIDByPoint>(Mod.NAME);
		_SortieMapUI_GetPointFlagID = scans.CreateWrapper<SortieMapUI_GetPointFlagID>(Mod.NAME);
		_SortieMapUI_CallPointArriveEvent = scans.CreateWrapper<SortieMapUI_CallPointArriveEvent>(Mod.NAME);
		_SortieMapUI_CallPointNotHappeningEvent = scans.CreateWrapper<SortieMapUI_CallPointNotHappeningEvent>(Mod.NAME);
		_SortieMapUI_GetLoadPrereadDataByPoint = scans.CreateWrapper<SortieMapUI_GetLoadPrereadDataByPoint>(Mod.NAME);
		_SortieMapUI_UnlockPath = scans.CreateWrapper<SortieMapUI_UnlockPath>(Mod.NAME);
		_SortieMapUI_UnlockPoint = scans.CreateWrapper<SortieMapUI_UnlockPoint>(Mod.NAME);
		_SortieMapUI_GetPathType = scans.CreateWrapper<SortieMapUI_GetPathType>(Mod.NAME);
		_SortieMapUI_CurrentPointMessage = scans.CreateWrapper<SortieMapUI_CurrentPointMessage>(Mod.NAME);
		_SortieMapUI_UpdateSortieTownMap = scans.CreateWrapper<SortieMapUI_UpdateSortieTownMap>(Mod.NAME);
		_SortieMapUI_InsertPointIntoRoute = scans.CreateWrapper<SortieMapUI_InsertPointIntoRoute>(Mod.NAME);
		_SortieMapUI_CheckInsertPointIntoRoute = scans.CreateWrapper<SortieMapUI_CheckInsertPointIntoRoute>(Mod.NAME);
		_SortieMapUI_IsEnableFollowerHelp = scans.CreateWrapper<SortieMapUI_IsEnableFollowerHelp>(Mod.NAME);
		_SortieMapUI_RequestFollowerHelpChoice = scans.CreateWrapper<SortieMapUI_RequestFollowerHelpChoice>(Mod.NAME);
		_SortieMapUI_RequestFollowerHelpMsg = scans.CreateWrapper<SortieMapUI_RequestFollowerHelpMsg>(Mod.NAME);
		_SortieMapUI_GetFollowerHelpID = scans.CreateWrapper<SortieMapUI_GetFollowerHelpID>(Mod.NAME);
		_SortieMapUI_RequestFollowerHelpSetFlag = scans.CreateWrapper<SortieMapUI_RequestFollowerHelpSetFlag>(Mod.NAME);
		_SortieMapUI_IsAllViewPointVisited = scans.CreateWrapper<SortieMapUI_IsAllViewPointVisited>(Mod.NAME);
		_HumanParamUPQuest = scans.CreateWrapper<HumanParamUPQuest>(Mod.NAME);
		_HumanParamUP1 = scans.CreateWrapper<HumanParamUP1>(Mod.NAME);
		_HumanParamUP2 = scans.CreateWrapper<HumanParamUP2>(Mod.NAME);
		_IsHumanParamUPEnd = scans.CreateWrapper<IsHumanParamUPEnd>(Mod.NAME);
		_HumanParamGetLevel = scans.CreateWrapper<HumanParamGetLevel>(Mod.NAME);
		_IllustrationUI_Start = scans.CreateWrapper<IllustrationUI_Start>(Mod.NAME);
		_IllustrationUI_IsReady = scans.CreateWrapper<IllustrationUI_IsReady>(Mod.NAME);
		_IllustrationUI_Close = scans.CreateWrapper<IllustrationUI_Close>(Mod.NAME);
		_IllustrationUI_IsClosed = scans.CreateWrapper<IllustrationUI_IsClosed>(Mod.NAME);
		_IllustrationUI_End = scans.CreateWrapper<IllustrationUI_End>(Mod.NAME);
		_FollowerGetRank = scans.CreateWrapper<FollowerGetRank>(Mod.NAME);
		_FollowerSetRank = scans.CreateWrapper<FollowerSetRank>(Mod.NAME);
		_FollowerSyncRank = scans.CreateWrapper<FollowerSyncRank>(Mod.NAME);
		_FollowerGetFriendship = scans.CreateWrapper<FollowerGetFriendship>(Mod.NAME);
		_FollowerSetFriendship = scans.CreateWrapper<FollowerSetFriendship>(Mod.NAME);
		_FollowerAddFriendship = scans.CreateWrapper<FollowerAddFriendship>(Mod.NAME);
		_FollowerClassGrow = scans.CreateWrapper<FollowerClassGrow>(Mod.NAME);
		_Timer_Start = scans.CreateWrapper<Timer_Start>(Mod.NAME);
		_Timer_End = scans.CreateWrapper<Timer_End>(Mod.NAME);
		_Timer_IsActive = scans.CreateWrapper<Timer_IsActive>(Mod.NAME);
		_Timer_Open = scans.CreateWrapper<Timer_Open>(Mod.NAME);
		_Timer_Close = scans.CreateWrapper<Timer_Close>(Mod.NAME);
		_Timer_Pause = scans.CreateWrapper<Timer_Pause>(Mod.NAME);
		_Timer_Get = scans.CreateWrapper<Timer_Get>(Mod.NAME);
		_Timer_SetPinchTime = scans.CreateWrapper<Timer_SetPinchTime>(Mod.NAME);
		_Lotto_CreateUI = scans.CreateWrapper<Lotto_CreateUI>(Mod.NAME);
		_Lotto_IsReadyUI = scans.CreateWrapper<Lotto_IsReadyUI>(Mod.NAME);
		_Lotto_DestroyUI = scans.CreateWrapper<Lotto_DestroyUI>(Mod.NAME);
		_Lotto_OpenWindow = scans.CreateWrapper<Lotto_OpenWindow>(Mod.NAME);
		_Lotto_IsClosedWindow = scans.CreateWrapper<Lotto_IsClosedWindow>(Mod.NAME);
		_Lotto_GetNumbers = scans.CreateWrapper<Lotto_GetNumbers>(Mod.NAME);
		_Lotto_SaveBuyData = scans.CreateWrapper<Lotto_SaveBuyData>(Mod.NAME);
		_Lotto_DoTheLottery = scans.CreateWrapper<Lotto_DoTheLottery>(Mod.NAME);
		_Lotto_CalcWinningAmount = scans.CreateWrapper<Lotto_CalcWinningAmount>(Mod.NAME);
		_Cooking_CreateUI = scans.CreateWrapper<Cooking_CreateUI>(Mod.NAME);
		_Cooking_IsReadyUI = scans.CreateWrapper<Cooking_IsReadyUI>(Mod.NAME);
		_Cooking_OpenWindow = scans.CreateWrapper<Cooking_OpenWindow>(Mod.NAME);
		_Cooking_IsClosed = scans.CreateWrapper<Cooking_IsClosed>(Mod.NAME);
		_Cooking_DestroyUI = scans.CreateWrapper<Cooking_DestroyUI>(Mod.NAME);
		_Cooking_GetItem = scans.CreateWrapper<Cooking_GetItem>(Mod.NAME);
		_Cooking_IsChara = scans.CreateWrapper<Cooking_IsChara>(Mod.NAME);
		_Cooking_GetChara = scans.CreateWrapper<Cooking_GetChara>(Mod.NAME);
		_Cooking_IsCancel = scans.CreateWrapper<Cooking_IsCancel>(Mod.NAME);
		_Cooking_IsCookingRecipe = scans.CreateWrapper<Cooking_IsCookingRecipe>(Mod.NAME);
		_Cooking_Count = scans.CreateWrapper<Cooking_Count>(Mod.NAME);
		_Cooking_RecipeGetOpenWindow = scans.CreateWrapper<Cooking_RecipeGetOpenWindow>(Mod.NAME);
		_Cooking_IsRecipeGetClosed = scans.CreateWrapper<Cooking_IsRecipeGetClosed>(Mod.NAME);
		_Cooking_IsGetRecipe = scans.CreateWrapper<Cooking_IsGetRecipe>(Mod.NAME);
		_Cooking_IsGetSpecialRecipe = scans.CreateWrapper<Cooking_IsGetSpecialRecipe>(Mod.NAME);
		_Cooking_GetSpecialRecipe = scans.CreateWrapper<Cooking_GetSpecialRecipe>(Mod.NAME);
		_Exp_Add_Character_Hero = scans.CreateWrapper<Exp_Add_Character_Hero>(Mod.NAME);
		_Exp_Add_Class_Category_Hero = scans.CreateWrapper<Exp_Add_Class_Category_Hero>(Mod.NAME);
		_Exp_Add_Character_All = scans.CreateWrapper<Exp_Add_Character_All>(Mod.NAME);
		_Exp_Add_Class_Category_All = scans.CreateWrapper<Exp_Add_Class_Category_All>(Mod.NAME);
		_Exp_Add_IsClosed = scans.CreateWrapper<Exp_Add_IsClosed>(Mod.NAME);
		_BattleEventUI_Open = scans.CreateWrapper<BattleEventUI_Open>(Mod.NAME);
		_BattleEventUI_Close = scans.CreateWrapper<BattleEventUI_Close>(Mod.NAME);
		_EventUIDisplaySuppressionStart = scans.CreateWrapper<EventUIDisplaySuppressionStart>(Mod.NAME);
		_EventUIDisplaySuppressionEnd = scans.CreateWrapper<EventUIDisplaySuppressionEnd>(Mod.NAME);
		_BattleMissionUI_Open = scans.CreateWrapper<BattleMissionUI_Open>(Mod.NAME);
		_BattleMissionUI_Close = scans.CreateWrapper<BattleMissionUI_Close>(Mod.NAME);
		_CampStatus_Open = scans.CreateWrapper<CampStatus_Open>(Mod.NAME);
		_CampStatus_OpenWithFixCharacter = scans.CreateWrapper<CampStatus_OpenWithFixCharacter>(Mod.NAME);
		_CampStatus_IsClosed = scans.CreateWrapper<CampStatus_IsClosed>(Mod.NAME);
		_SafeRoomMenuUI_Start = scans.CreateWrapper<SafeRoomMenuUI_Start>(Mod.NAME);
		_SafeRoomMenuUI_IsReady = scans.CreateWrapper<SafeRoomMenuUI_IsReady>(Mod.NAME);
		_SafeRoomMenuUI_End = scans.CreateWrapper<SafeRoomMenuUI_End>(Mod.NAME);
		_SafeRoomMenuUI_Open = scans.CreateWrapper<SafeRoomMenuUI_Open>(Mod.NAME);
		_SafeRoomMenuUI_IsClosed = scans.CreateWrapper<SafeRoomMenuUI_IsClosed>(Mod.NAME);
		_SafeRoomMenuUI_GetResult = scans.CreateWrapper<SafeRoomMenuUI_GetResult>(Mod.NAME);
		_Food_ActivateEffect = scans.CreateWrapper<Food_ActivateEffect>(Mod.NAME);
		_Food_DeactivateEffect = scans.CreateWrapper<Food_DeactivateEffect>(Mod.NAME);
		_SortieMeeting_Start = scans.CreateWrapper<SortieMeeting_Start>(Mod.NAME);
		_SortieMeeting_IsReady = scans.CreateWrapper<SortieMeeting_IsReady>(Mod.NAME);
		_SortieMeeting_Open = scans.CreateWrapper<SortieMeeting_Open>(Mod.NAME);
		_SortieMeeting_IsClosed = scans.CreateWrapper<SortieMeeting_IsClosed>(Mod.NAME);
		_SortieMeeting_End = scans.CreateWrapper<SortieMeeting_End>(Mod.NAME);
		_GallicaTalk_IsScenario = scans.CreateWrapper<GallicaTalk_IsScenario>(Mod.NAME);
		_GallicaTalk_Open = scans.CreateWrapper<GallicaTalk_Open>(Mod.NAME);
		_GallicaTalk_IsClosed = scans.CreateWrapper<GallicaTalk_IsClosed>(Mod.NAME);
		_Savedata_HeaderStore = scans.CreateWrapper<Savedata_HeaderStore>(Mod.NAME);
		_Savedata_SaveStart = scans.CreateWrapper<Savedata_SaveStart>(Mod.NAME);
		_Savedata_SaveStart_NameID = scans.CreateWrapper<Savedata_SaveStart_NameID>(Mod.NAME);
		_Savedata_SaveStart_Fade = scans.CreateWrapper<Savedata_SaveStart_Fade>(Mod.NAME);
		_Savedata_SaveStart_NameID_Fade = scans.CreateWrapper<Savedata_SaveStart_NameID_Fade>(Mod.NAME);
		_Savedata_LoadStart = scans.CreateWrapper<Savedata_LoadStart>(Mod.NAME);
		_Savedata_Wait = scans.CreateWrapper<Savedata_Wait>(Mod.NAME);
		_Savedata_ScriptSaveExecute = scans.CreateWrapper<Savedata_ScriptSaveExecute>(Mod.NAME);
		_Savedata_ScriptLoadExecute = scans.CreateWrapper<Savedata_ScriptLoadExecute>(Mod.NAME);
		_Savedata_ScriptLoadExecuteSlot = scans.CreateWrapper<Savedata_ScriptLoadExecuteSlot>(Mod.NAME);
		_Savedata_ScriptLoadIsEnd = scans.CreateWrapper<Savedata_ScriptLoadIsEnd>(Mod.NAME);
		_IsSavedata_Loaded = scans.CreateWrapper<IsSavedata_Loaded>(Mod.NAME);
		_Savedata_SystemSaveExecute = scans.CreateWrapper<Savedata_SystemSaveExecute>(Mod.NAME);
		_Savedata_SystemLoadExecute = scans.CreateWrapper<Savedata_SystemLoadExecute>(Mod.NAME);
		_SavedataForExpired_SaveStart = scans.CreateWrapper<SavedataForExpired_SaveStart>(Mod.NAME);
		_SavedataForExpired_LoadStart = scans.CreateWrapper<SavedataForExpired_LoadStart>(Mod.NAME);
		_SaveData_GameClearData = scans.CreateWrapper<SaveData_GameClearData>(Mod.NAME);
		_SaveData_GameClearData_NameID = scans.CreateWrapper<SaveData_GameClearData_NameID>(Mod.NAME);
		_SaveData_GameClearDataAutoSave = scans.CreateWrapper<SaveData_GameClearDataAutoSave>(Mod.NAME);
		_SaveData_LoadGameSequence = scans.CreateWrapper<SaveData_LoadGameSequence>(Mod.NAME);
		_MoviePlay = scans.CreateWrapper<MoviePlay>(Mod.NAME);
		_EventMoviePlay = scans.CreateWrapper<EventMoviePlay>(Mod.NAME);
		_IsMovieEnd = scans.CreateWrapper<IsMovieEnd>(Mod.NAME);
		_IsMovieSkipped = scans.CreateWrapper<IsMovieSkipped>(Mod.NAME);
		_Staffroll_CreateUI = scans.CreateWrapper<Staffroll_CreateUI>(Mod.NAME);
		_Staffroll_IsReadyUI = scans.CreateWrapper<Staffroll_IsReadyUI>(Mod.NAME);
		_Staffroll_Open = scans.CreateWrapper<Staffroll_Open>(Mod.NAME);
		_Staffroll_IsClosed = scans.CreateWrapper<Staffroll_IsClosed>(Mod.NAME);
		_Staffroll_DestroyUI = scans.CreateWrapper<Staffroll_DestroyUI>(Mod.NAME);
		_Ending_BG_CreateUI = scans.CreateWrapper<Ending_BG_CreateUI>(Mod.NAME);
		_Ending_BG_IsReadyUI = scans.CreateWrapper<Ending_BG_IsReadyUI>(Mod.NAME);
		_Ending_BG_Open1st = scans.CreateWrapper<Ending_BG_Open1st>(Mod.NAME);
		_Ending_BG_Close1st = scans.CreateWrapper<Ending_BG_Close1st>(Mod.NAME);
		_Ending_BG_Open2nd = scans.CreateWrapper<Ending_BG_Open2nd>(Mod.NAME);
		_Ending_BG_Close2nd = scans.CreateWrapper<Ending_BG_Close2nd>(Mod.NAME);
		_Ending_BG_Open3rd = scans.CreateWrapper<Ending_BG_Open3rd>(Mod.NAME);
		_Ending_BG_Close3rd = scans.CreateWrapper<Ending_BG_Close3rd>(Mod.NAME);
		_Ending_BG_IsClosed = scans.CreateWrapper<Ending_BG_IsClosed>(Mod.NAME);
		_Ending_BG_DestroyUI = scans.CreateWrapper<Ending_BG_DestroyUI>(Mod.NAME);
		_Ending_Message_CreateUI = scans.CreateWrapper<Ending_Message_CreateUI>(Mod.NAME);
		_Ending_Message_IsReadyUI = scans.CreateWrapper<Ending_Message_IsReadyUI>(Mod.NAME);
		_Ending_Message_Open = scans.CreateWrapper<Ending_Message_Open>(Mod.NAME);
		_Ending_Message_IsClosed = scans.CreateWrapper<Ending_Message_IsClosed>(Mod.NAME);
		_Ending_Message_DestroyUI = scans.CreateWrapper<Ending_Message_DestroyUI>(Mod.NAME);
		_Gameover_CreateUI = scans.CreateWrapper<Gameover_CreateUI>(Mod.NAME);
		_Gameover_IsReadyUI = scans.CreateWrapper<Gameover_IsReadyUI>(Mod.NAME);
		_Gameover_Open = scans.CreateWrapper<Gameover_Open>(Mod.NAME);
		_Gameover_IsClosed = scans.CreateWrapper<Gameover_IsClosed>(Mod.NAME);
		_Gameover_DestroyUI = scans.CreateWrapper<Gameover_DestroyUI>(Mod.NAME);
		_EventLogAutoEnable = scans.CreateWrapper<EventLogAutoEnable>(Mod.NAME);
		_EventLogAutoDisable = scans.CreateWrapper<EventLogAutoDisable>(Mod.NAME);
		_EventStart = scans.CreateWrapper<EventStart>(Mod.NAME);
		_EventEnd = scans.CreateWrapper<EventEnd>(Mod.NAME);
		_EventGuideClose = scans.CreateWrapper<EventGuideClose>(Mod.NAME);
		_AddContent_StartCheckEnabledContent = scans.CreateWrapper<AddContent_StartCheckEnabledContent>(Mod.NAME);
		_AddContent_FinishedCheckEnabledContent = scans.CreateWrapper<AddContent_FinishedCheckEnabledContent>(Mod.NAME);
		_AddContent_ExistsEnabledContent = scans.CreateWrapper<AddContent_ExistsEnabledContent>(Mod.NAME);
		_AddContent_EnabledContent = scans.CreateWrapper<AddContent_EnabledContent>(Mod.NAME);
		_TravelersVoice_AddUploadValue = scans.CreateWrapper<TravelersVoice_AddUploadValue>(Mod.NAME);
		_Trophy_Request = scans.CreateWrapper<Trophy_Request>(Mod.NAME);
		_ScreenCapture_SetEnable = scans.CreateWrapper<ScreenCapture_SetEnable>(Mod.NAME);
		_ScreenCapture_SetDisable = scans.CreateWrapper<ScreenCapture_SetDisable>(Mod.NAME);
		_ActivityStart = scans.CreateWrapper<ActivityStart>(Mod.NAME);
		_ActivityEnd = scans.CreateWrapper<ActivityEnd>(Mod.NAME);
		_PlayGo_CheckInstalledAllChunks_Request = scans.CreateWrapper<PlayGo_CheckInstalledAllChunks_Request>(Mod.NAME);
		_PlayGo_CheckInstalledAllChunks_IsEndProc = scans.CreateWrapper<PlayGo_CheckInstalledAllChunks_IsEndProc>(Mod.NAME);
		_PlayGo_CheckInstalledAllChunks_GetResult = scans.CreateWrapper<PlayGo_CheckInstalledAllChunks_GetResult>(Mod.NAME);
		_PlayGo_OpenProgressBar_Request = scans.CreateWrapper<PlayGo_OpenProgressBar_Request>(Mod.NAME);
		_PlayGo_OpenProgressBar_IsEndProc = scans.CreateWrapper<PlayGo_OpenProgressBar_IsEndProc>(Mod.NAME);
		_GetFaceScalptureMag = scans.CreateWrapper<GetFaceScalptureMag>(Mod.NAME);
		_OpenFaceScalptureMagUI = scans.CreateWrapper<OpenFaceScalptureMagUI>(Mod.NAME);
		_IsEndFaceScalptureMagUI = scans.CreateWrapper<IsEndFaceScalptureMagUI>(Mod.NAME);
		_DebugDrawTexture_Begin = scans.CreateWrapper<DebugDrawTexture_Begin>(Mod.NAME);
		_DebugDrawTexture_End = scans.CreateWrapper<DebugDrawTexture_End>(Mod.NAME);
		_DebugPartyPreset = scans.CreateWrapper<DebugPartyPreset>(Mod.NAME);
		_DebugMorningSetStatusIndex = scans.CreateWrapper<DebugMorningSetStatusIndex>(Mod.NAME);
		_DebugDinnerSetStatusIndex = scans.CreateWrapper<DebugDinnerSetStatusIndex>(Mod.NAME);
		_DebugDinnerResetStatusIndex = scans.CreateWrapper<DebugDinnerResetStatusIndex>(Mod.NAME);
		_DebugInitializeGameID = scans.CreateWrapper<DebugInitializeGameID>(Mod.NAME);
		_DebugFlagsON = scans.CreateWrapper<DebugFlagsON>(Mod.NAME);
		_MoviePlay_DEBUG = scans.CreateWrapper<MoviePlay_DEBUG>(Mod.NAME);
		_DebugSendTestPlayData = scans.CreateWrapper<DebugSendTestPlayData>(Mod.NAME);
		_TAIL = scans.CreateWrapper<TAIL>(Mod.NAME);
		_XE_AAAAA = scans.CreateWrapper<XE_AAAAA>(Mod.NAME);
		_IS_ENTER_PUSHED = scans.CreateWrapper<IS_ENTER_PUSHED>(Mod.NAME);
		_FldGetMsg = scans.CreateWrapper<FldGetMsg>(Mod.NAME);
		_FldIsCanUseCommand = scans.CreateWrapper<FldIsCanUseCommand>(Mod.NAME);
		_FldGetDeltaTime = scans.CreateWrapper<FldGetDeltaTime>(Mod.NAME);
		_FldSetSceneSpeedRate = scans.CreateWrapper<FldSetSceneSpeedRate>(Mod.NAME);
		_FldGetStartPosID = scans.CreateWrapper<FldGetStartPosID>(Mod.NAME);
		_FldGetPosIDByLayoutName = scans.CreateWrapper<FldGetPosIDByLayoutName>(Mod.NAME);
		_FldIsShingan = scans.CreateWrapper<FldIsShingan>(Mod.NAME);
		_FldSetShingan = scans.CreateWrapper<FldSetShingan>(Mod.NAME);
		_FldInitFadeCustom = scans.CreateWrapper<FldInitFadeCustom>(Mod.NAME);
		_FldInitStopAutoSaveOnFadeIn = scans.CreateWrapper<FldInitStopAutoSaveOnFadeIn>(Mod.NAME);
		_FldInitIsFadeIn = scans.CreateWrapper<FldInitIsFadeIn>(Mod.NAME);
		_FldLocalSetInt = scans.CreateWrapper<FldLocalSetInt>(Mod.NAME);
		_FldLocalGetInt = scans.CreateWrapper<FldLocalGetInt>(Mod.NAME);
		_FldLocalSetFloat = scans.CreateWrapper<FldLocalSetFloat>(Mod.NAME);
		_FldLocalGetFloat = scans.CreateWrapper<FldLocalGetFloat>(Mod.NAME);
		_FldLocalSetFlag = scans.CreateWrapper<FldLocalSetFlag>(Mod.NAME);
		_FldLocalGetFlag = scans.CreateWrapper<FldLocalGetFlag>(Mod.NAME);
		_FldBgmSetOverrideByCueID = scans.CreateWrapper<FldBgmSetOverrideByCueID>(Mod.NAME);
		_FldBgmResetOverride = scans.CreateWrapper<FldBgmResetOverride>(Mod.NAME);
		_FldBgmSetForceFastBattle = scans.CreateWrapper<FldBgmSetForceFastBattle>(Mod.NAME);
		_FldSoundEnvSetOverrideByCueID = scans.CreateWrapper<FldSoundEnvSetOverrideByCueID>(Mod.NAME);
		_FldSoundEnvResetOverride = scans.CreateWrapper<FldSoundEnvResetOverride>(Mod.NAME);
		_FldEnvLoadOverride = scans.CreateWrapper<FldEnvLoadOverride>(Mod.NAME);
		_FldEnvLoadOverride_Area = scans.CreateWrapper<FldEnvLoadOverride_Area>(Mod.NAME);
		_FldEnvIsEndLoadOverride = scans.CreateWrapper<FldEnvIsEndLoadOverride>(Mod.NAME);
		_FldEnvSetOverrideActive = scans.CreateWrapper<FldEnvSetOverrideActive>(Mod.NAME);
		_FldTopUISetDefault = scans.CreateWrapper<FldTopUISetDefault>(Mod.NAME);
		_FldTopUISetFieldEvent = scans.CreateWrapper<FldTopUISetFieldEvent>(Mod.NAME);
		_FldTopUISetFieldEventNoMessage = scans.CreateWrapper<FldTopUISetFieldEventNoMessage>(Mod.NAME);
		_FldTopUISetInval = scans.CreateWrapper<FldTopUISetInval>(Mod.NAME);
		_FldLocationNameUIStopAuto = scans.CreateWrapper<FldLocationNameUIStopAuto>(Mod.NAME);
		_FldLocationNameUIOpen = scans.CreateWrapper<FldLocationNameUIOpen>(Mod.NAME);
		_FldLocationNameUIIsEnd = scans.CreateWrapper<FldLocationNameUIIsEnd>(Mod.NAME);
		_fldChallengeUIStart = scans.CreateWrapper<fldChallengeUIStart>(Mod.NAME);
		_fldChallengeUIComplete = scans.CreateWrapper<fldChallengeUIComplete>(Mod.NAME);
		_fldChallengeIsUIEnd = scans.CreateWrapper<fldChallengeIsUIEnd>(Mod.NAME);
		_FldMapIconUpdateParam = scans.CreateWrapper<FldMapIconUpdateParam>(Mod.NAME);
		_FldLargeMapOpen = scans.CreateWrapper<FldLargeMapOpen>(Mod.NAME);
		_FldLargeMapIsClosed = scans.CreateWrapper<FldLargeMapIsClosed>(Mod.NAME);
		_FldFastBtlIsHaveKilled = scans.CreateWrapper<FldFastBtlIsHaveKilled>(Mod.NAME);
		_FldFastBtlGetAttackRateType = scans.CreateWrapper<FldFastBtlGetAttackRateType>(Mod.NAME);
		_FldFastBtlGetAttackRate = scans.CreateWrapper<FldFastBtlGetAttackRate>(Mod.NAME);
		_FldFastBtlGetAttackRefParameterID = scans.CreateWrapper<FldFastBtlGetAttackRefParameterID>(Mod.NAME);
		_FldHourGet = scans.CreateWrapper<FldHourGet>(Mod.NAME);
		_FldHourAdd = scans.CreateWrapper<FldHourAdd>(Mod.NAME);
		_FldHourSet = scans.CreateWrapper<FldHourSet>(Mod.NAME);
		_FldHourIsSetEnd = scans.CreateWrapper<FldHourIsSetEnd>(Mod.NAME);
		_FldHourReset = scans.CreateWrapper<FldHourReset>(Mod.NAME);
		_FldHourCallScript = scans.CreateWrapper<FldHourCallScript>(Mod.NAME);
		_FldHourSetSunset = scans.CreateWrapper<FldHourSetSunset>(Mod.NAME);
		_FldScriptEventAssistSetCameraType = scans.CreateWrapper<FldScriptEventAssistSetCameraType>(Mod.NAME);
		_FldScriptEventAssistSetCameraParam_Rotate = scans.CreateWrapper<FldScriptEventAssistSetCameraParam_Rotate>(Mod.NAME);
		_FldScriptEventAssistResetCameraParam = scans.CreateWrapper<FldScriptEventAssistResetCameraParam>(Mod.NAME);
		_FldScriptEventAssistSetCharaType = scans.CreateWrapper<FldScriptEventAssistSetCharaType>(Mod.NAME);
		_FldScriptEventAssistAddNpc = scans.CreateWrapper<FldScriptEventAssistAddNpc>(Mod.NAME);
		_FldScriptEventAssistSetCharaParam_Talk = scans.CreateWrapper<FldScriptEventAssistSetCharaParam_Talk>(Mod.NAME);
		_FldScriptEventAssistResetCharaParam = scans.CreateWrapper<FldScriptEventAssistResetCharaParam>(Mod.NAME);
		_FldMorningIsNeed = scans.CreateWrapper<FldMorningIsNeed>(Mod.NAME);
		_FldMorningStart = scans.CreateWrapper<FldMorningStart>(Mod.NAME);
		_FldMorningIsReady = scans.CreateWrapper<FldMorningIsReady>(Mod.NAME);
		_FldMorningEnd = scans.CreateWrapper<FldMorningEnd>(Mod.NAME);
		_FldMorningGetMsgNum = scans.CreateWrapper<FldMorningGetMsgNum>(Mod.NAME);
		_FldMoringGetSpeakerID = scans.CreateWrapper<FldMoringGetSpeakerID>(Mod.NAME);
		_FldMorningMsgRequest = scans.CreateWrapper<FldMorningMsgRequest>(Mod.NAME);
		_FldMorningTravelLastMessageRequest = scans.CreateWrapper<FldMorningTravelLastMessageRequest>(Mod.NAME);
		_FldMorningSetupItem = scans.CreateWrapper<FldMorningSetupItem>(Mod.NAME);
		_FldMorningSetObjVisibleTmpByResrcUid = scans.CreateWrapper<FldMorningSetObjVisibleTmpByResrcUid>(Mod.NAME);
		_FldMorningSetObjTransformTmpByResrcUid = scans.CreateWrapper<FldMorningSetObjTransformTmpByResrcUid>(Mod.NAME);
		_FldMorningQuestEventUnexecutedDaysCountReset = scans.CreateWrapper<FldMorningQuestEventUnexecutedDaysCountReset>(Mod.NAME);
		_FldMorningQuestEventUnexecutedDaysCountUp = scans.CreateWrapper<FldMorningQuestEventUnexecutedDaysCountUp>(Mod.NAME);
		_FldMorningIsExistAboutD07GK = scans.CreateWrapper<FldMorningIsExistAboutD07GK>(Mod.NAME);
		_FldMorningGetMsgNum_D07GK = scans.CreateWrapper<FldMorningGetMsgNum_D07GK>(Mod.NAME);
		_FldMorningMsgRequest_D07GK = scans.CreateWrapper<FldMorningMsgRequest_D07GK>(Mod.NAME);
		_FldMorningMsgRequest_D07GK_End = scans.CreateWrapper<FldMorningMsgRequest_D07GK_End>(Mod.NAME);
		_FldDbgGetMorningMsgPattern = scans.CreateWrapper<FldDbgGetMorningMsgPattern>(Mod.NAME);
		_FldDinnerStart = scans.CreateWrapper<FldDinnerStart>(Mod.NAME);
		_FldDinnerIsReady = scans.CreateWrapper<FldDinnerIsReady>(Mod.NAME);
		_FldDinnerEnd = scans.CreateWrapper<FldDinnerEnd>(Mod.NAME);
		_FldDinnerMsgIsSelectedChoice = scans.CreateWrapper<FldDinnerMsgIsSelectedChoice>(Mod.NAME);
		_FldDinnerMsgRequest = scans.CreateWrapper<FldDinnerMsgRequest>(Mod.NAME);
		_FldDinnerGetMsgType = scans.CreateWrapper<FldDinnerGetMsgType>(Mod.NAME);
		_FldDinnerSetupItem = scans.CreateWrapper<FldDinnerSetupItem>(Mod.NAME);
		_FldDinnerSetObjVisibleTmpByResrcUid = scans.CreateWrapper<FldDinnerSetObjVisibleTmpByResrcUid>(Mod.NAME);
		_FldDinnerSetObjTransformTmpByResrcUid = scans.CreateWrapper<FldDinnerSetObjTransformTmpByResrcUid>(Mod.NAME);
		_FldDinnerResetStatusIndex = scans.CreateWrapper<FldDinnerResetStatusIndex>(Mod.NAME);
		_FldDinnerUpdateQuestStatus = scans.CreateWrapper<FldDinnerUpdateQuestStatus>(Mod.NAME);
		_FldDinnerSaveSpotPoint = scans.CreateWrapper<FldDinnerSaveSpotPoint>(Mod.NAME);
		_FldDinnerSaveRivalPoint = scans.CreateWrapper<FldDinnerSaveRivalPoint>(Mod.NAME);
		_FldDinnerSaveRivalPath = scans.CreateWrapper<FldDinnerSaveRivalPath>(Mod.NAME);
		_FldDinnerSaveStay = scans.CreateWrapper<FldDinnerSaveStay>(Mod.NAME);
		_FldDinnerSaveClassLevel = scans.CreateWrapper<FldDinnerSaveClassLevel>(Mod.NAME);
		_FldDinnerIsOccurredYestoday = scans.CreateWrapper<FldDinnerIsOccurredYestoday>(Mod.NAME);
		_FldDinnerUpdateOccurredStatus = scans.CreateWrapper<FldDinnerUpdateOccurredStatus>(Mod.NAME);
		_FldDinnerUpdateSaveData = scans.CreateWrapper<FldDinnerUpdateSaveData>(Mod.NAME);
		_FldDbgGetDinnerMsgPattern = scans.CreateWrapper<FldDbgGetDinnerMsgPattern>(Mod.NAME);
		_FldQuestIsExistCanDebrief = scans.CreateWrapper<FldQuestIsExistCanDebrief>(Mod.NAME);
		_FldQuestDungeonIsExistEntranceEvent = scans.CreateWrapper<FldQuestDungeonIsExistEntranceEvent>(Mod.NAME);
		_FldQuestDungeonCallEntranceEvent = scans.CreateWrapper<FldQuestDungeonCallEntranceEvent>(Mod.NAME);
		_FldKeyFreeHintGetMsgNum = scans.CreateWrapper<FldKeyFreeHintGetMsgNum>(Mod.NAME);
		_FldKeyFreeHintMsgRequest = scans.CreateWrapper<FldKeyFreeHintMsgRequest>(Mod.NAME);
		_FldKeyFreeHintIsNeedQuestWarning = scans.CreateWrapper<FldKeyFreeHintIsNeedQuestWarning>(Mod.NAME);
		_FldKeyFreeHintSetByMapShortCut = scans.CreateWrapper<FldKeyFreeHintSetByMapShortCut>(Mod.NAME);
		_FldAcademeiaSetIsShowLearnState = scans.CreateWrapper<FldAcademeiaSetIsShowLearnState>(Mod.NAME);
		_FldAcademeiaIsLearnedClass = scans.CreateWrapper<FldAcademeiaIsLearnedClass>(Mod.NAME);
		_FldAcademeiaSetIsLearnedClass = scans.CreateWrapper<FldAcademeiaSetIsLearnedClass>(Mod.NAME);
		_FldMsgReportOpen = scans.CreateWrapper<FldMsgReportOpen>(Mod.NAME);
		_FldMsgReportDungeonScenario = scans.CreateWrapper<FldMsgReportDungeonScenario>(Mod.NAME);
		_FldMsgReportQuestScenario = scans.CreateWrapper<FldMsgReportQuestScenario>(Mod.NAME);
		_FldMsgReportQuestProgress = scans.CreateWrapper<FldMsgReportQuestProgress>(Mod.NAME);
		_FldMsgReportDowntownAtmosphere = scans.CreateWrapper<FldMsgReportDowntownAtmosphere>(Mod.NAME);
		_FldMsgReportDowntownScenario = scans.CreateWrapper<FldMsgReportDowntownScenario>(Mod.NAME);
		_FldMsgReportCarWeather = scans.CreateWrapper<FldMsgReportCarWeather>(Mod.NAME);
		_FldMsgReportCarTimeElapsing = scans.CreateWrapper<FldMsgReportCarTimeElapsing>(Mod.NAME);
		_FldEventStart = scans.CreateWrapper<FldEventStart>(Mod.NAME);
		_FldEventEnd = scans.CreateWrapper<FldEventEnd>(Mod.NAME);
		_FldAutoSaveSetPosByPosID = scans.CreateWrapper<FldAutoSaveSetPosByPosID>(Mod.NAME);
		_FldDungeonEscapeIsCanEscape = scans.CreateWrapper<FldDungeonEscapeIsCanEscape>(Mod.NAME);
		_FldDungeonEscapeStartEscape = scans.CreateWrapper<FldDungeonEscapeStartEscape>(Mod.NAME);
		_FldEffectLoad = scans.CreateWrapper<FldEffectLoad>(Mod.NAME);
		_FldEffectIsEndLoad = scans.CreateWrapper<FldEffectIsEndLoad>(Mod.NAME);
		_FldEffectRelease = scans.CreateWrapper<FldEffectRelease>(Mod.NAME);
		_FldEffectPlay = scans.CreateWrapper<FldEffectPlay>(Mod.NAME);
		_FldEffectPlayByResrc = scans.CreateWrapper<FldEffectPlayByResrc>(Mod.NAME);
		_FldEffectIsEndPlay = scans.CreateWrapper<FldEffectIsEndPlay>(Mod.NAME);
		_FldEffectStop = scans.CreateWrapper<FldEffectStop>(Mod.NAME);
		_FldEffectStopByType = scans.CreateWrapper<FldEffectStopByType>(Mod.NAME);
		_FldEffectPreLoadToPlay = scans.CreateWrapper<FldEffectPreLoadToPlay>(Mod.NAME);
		_FldEffectIsEndPreLoadToPlay = scans.CreateWrapper<FldEffectIsEndPreLoadToPlay>(Mod.NAME);
		_FldEffectPlayByPreLoad = scans.CreateWrapper<FldEffectPlayByPreLoad>(Mod.NAME);
		_FldEffectPlayByResrcByPreLoad = scans.CreateWrapper<FldEffectPlayByResrcByPreLoad>(Mod.NAME);
		_FldCameraSetToDefault = scans.CreateWrapper<FldCameraSetToDefault>(Mod.NAME);
		_FldCameraSetToDefault_Param = scans.CreateWrapper<FldCameraSetToDefault_Param>(Mod.NAME);
		_FldCameraSetToPath = scans.CreateWrapper<FldCameraSetToPath>(Mod.NAME);
		_FldCameraSetToExcel = scans.CreateWrapper<FldCameraSetToExcel>(Mod.NAME);
		_FldCameraSetToLayout = scans.CreateWrapper<FldCameraSetToLayout>(Mod.NAME);
		_FldCameraSetToParam_Pos = scans.CreateWrapper<FldCameraSetToParam_Pos>(Mod.NAME);
		_FldCameraSetToParam_Angle = scans.CreateWrapper<FldCameraSetToParam_Angle>(Mod.NAME);
		_FldCameraSetToParam_AngleToTgt = scans.CreateWrapper<FldCameraSetToParam_AngleToTgt>(Mod.NAME);
		_FldCameraSetToParam_Fovy = scans.CreateWrapper<FldCameraSetToParam_Fovy>(Mod.NAME);
		_FldCameraSetToParam_NearClip = scans.CreateWrapper<FldCameraSetToParam_NearClip>(Mod.NAME);
		_FldCameraSetTgt_Player = scans.CreateWrapper<FldCameraSetTgt_Player>(Mod.NAME);
		_FldCameraSetTgt_Member = scans.CreateWrapper<FldCameraSetTgt_Member>(Mod.NAME);
		_FldCameraSetTgt_Enemy = scans.CreateWrapper<FldCameraSetTgt_Enemy>(Mod.NAME);
		_FldCameraSetTgt_Npc = scans.CreateWrapper<FldCameraSetTgt_Npc>(Mod.NAME);
		_FldCameraSetTgt_Gimmick = scans.CreateWrapper<FldCameraSetTgt_Gimmick>(Mod.NAME);
		_FldCameraSetTgt_Door = scans.CreateWrapper<FldCameraSetTgt_Door>(Mod.NAME);
		_FldCameraSetWideMode = scans.CreateWrapper<FldCameraSetWideMode>(Mod.NAME);
		_FldCameraSetHeightMode = scans.CreateWrapper<FldCameraSetHeightMode>(Mod.NAME);
		_FldCameraIsTypeFollow = scans.CreateWrapper<FldCameraIsTypeFollow>(Mod.NAME);
		_FldCameraFollow_SetYaw = scans.CreateWrapper<FldCameraFollow_SetYaw>(Mod.NAME);
		_FldCameraPath_SetFollowTarget = scans.CreateWrapper<FldCameraPath_SetFollowTarget>(Mod.NAME);
		_FldCameraPath_SetRate = scans.CreateWrapper<FldCameraPath_SetRate>(Mod.NAME);
		_FldCameraPath_SetAutoChange = scans.CreateWrapper<FldCameraPath_SetAutoChange>(Mod.NAME);
		_FldCameraGetRelativeToPlayerDir_Yaw = scans.CreateWrapper<FldCameraGetRelativeToPlayerDir_Yaw>(Mod.NAME);
		_FldCameraGetRelativeToPlayerDir_Pitch = scans.CreateWrapper<FldCameraGetRelativeToPlayerDir_Pitch>(Mod.NAME);
		_FldCameraGetRelativeToPlayerDir_Diff = scans.CreateWrapper<FldCameraGetRelativeToPlayerDir_Diff>(Mod.NAME);
		_FldCameraUpdateCameraBox = scans.CreateWrapper<FldCameraUpdateCameraBox>(Mod.NAME);
		_FldCameraSetIsShake = scans.CreateWrapper<FldCameraSetIsShake>(Mod.NAME);
		_FldCameraEffectSetVisible = scans.CreateWrapper<FldCameraEffectSetVisible>(Mod.NAME);
		_FldPlayerGetResScrID = scans.CreateWrapper<FldPlayerGetResScrID>(Mod.NAME);
		_FldPlayerGetDegToEnemy = scans.CreateWrapper<FldPlayerGetDegToEnemy>(Mod.NAME);
		_FldPlayerSetDeg = scans.CreateWrapper<FldPlayerSetDeg>(Mod.NAME);
		_FldPlayerAddDeg = scans.CreateWrapper<FldPlayerAddDeg>(Mod.NAME);
		_FldPlayerSetPos = scans.CreateWrapper<FldPlayerSetPos>(Mod.NAME);
		_FldPlayerSetPosParam = scans.CreateWrapper<FldPlayerSetPosParam>(Mod.NAME);
		_FldPlayerSetPosAddParam = scans.CreateWrapper<FldPlayerSetPosAddParam>(Mod.NAME);
		_FldPlayerTurnToDeg = scans.CreateWrapper<FldPlayerTurnToDeg>(Mod.NAME);
		_FldPlayerTurnAddDeg = scans.CreateWrapper<FldPlayerTurnAddDeg>(Mod.NAME);
		_FldPlayerRun = scans.CreateWrapper<FldPlayerRun>(Mod.NAME);
		_FldPlayerRunToPos = scans.CreateWrapper<FldPlayerRunToPos>(Mod.NAME);
		_FldPlayerRunToPosParam = scans.CreateWrapper<FldPlayerRunToPosParam>(Mod.NAME);
		_FldPlayerSetAndRunToPos = scans.CreateWrapper<FldPlayerSetAndRunToPos>(Mod.NAME);
		_FldPlayerSetAndRunToPosParam = scans.CreateWrapper<FldPlayerSetAndRunToPosParam>(Mod.NAME);
		_FldPlayerWalk = scans.CreateWrapper<FldPlayerWalk>(Mod.NAME);
		_FldPlayerWalkToPos = scans.CreateWrapper<FldPlayerWalkToPos>(Mod.NAME);
		_FldPlayerWalkToPosParam = scans.CreateWrapper<FldPlayerWalkToPosParam>(Mod.NAME);
		_FldPlayerSetAndWalkToPos = scans.CreateWrapper<FldPlayerSetAndWalkToPos>(Mod.NAME);
		_FldPlayerSetAndWalkToPosParam = scans.CreateWrapper<FldPlayerSetAndWalkToPosParam>(Mod.NAME);
		_FldPlayerRunToTbox = scans.CreateWrapper<FldPlayerRunToTbox>(Mod.NAME);
		_FldPlayerSetPosToTbox = scans.CreateWrapper<FldPlayerSetPosToTbox>(Mod.NAME);
		_FldPlayerSetPosToGimmick = scans.CreateWrapper<FldPlayerSetPosToGimmick>(Mod.NAME);
		_FldPlayerWalkToDoor = scans.CreateWrapper<FldPlayerWalkToDoor>(Mod.NAME);
		_FldPlayerWalkToDoorCustom = scans.CreateWrapper<FldPlayerWalkToDoorCustom>(Mod.NAME);
		_FldPlayerSetToDoor = scans.CreateWrapper<FldPlayerSetToDoor>(Mod.NAME);
		_FldPlayerSetToDoorCustom = scans.CreateWrapper<FldPlayerSetToDoorCustom>(Mod.NAME);
		_FldPlayerSetByNpc = scans.CreateWrapper<FldPlayerSetByNpc>(Mod.NAME);
		_FldPlayerSetByEnemy = scans.CreateWrapper<FldPlayerSetByEnemy>(Mod.NAME);
		_FldPlayerSetByDoor = scans.CreateWrapper<FldPlayerSetByDoor>(Mod.NAME);
		_FldPlayerSetByLadder = scans.CreateWrapper<FldPlayerSetByLadder>(Mod.NAME);
		_FldPlayerSetByTbox = scans.CreateWrapper<FldPlayerSetByTbox>(Mod.NAME);
		_FldPlayerSetByObj = scans.CreateWrapper<FldPlayerSetByObj>(Mod.NAME);
		_FldPlayerSetByGather = scans.CreateWrapper<FldPlayerSetByGather>(Mod.NAME);
		_FldPlayerSetByGimmick = scans.CreateWrapper<FldPlayerSetByGimmick>(Mod.NAME);
		_FldPlayerSetByBgObj = scans.CreateWrapper<FldPlayerSetByBgObj>(Mod.NAME);
		_FldPlayerSetByHitCollis = scans.CreateWrapper<FldPlayerSetByHitCollis>(Mod.NAME);
		_FldPlayerRunToBack = scans.CreateWrapper<FldPlayerRunToBack>(Mod.NAME);
		_FldPlayerRunByHitCollis = scans.CreateWrapper<FldPlayerRunByHitCollis>(Mod.NAME);
		_FldPlayerRunToBackByHitCollis = scans.CreateWrapper<FldPlayerRunToBackByHitCollis>(Mod.NAME);
		_FldPlayerRunToFrontByHitCollis = scans.CreateWrapper<FldPlayerRunToFrontByHitCollis>(Mod.NAME);
		_FldPlayerWalkByHitCollis = scans.CreateWrapper<FldPlayerWalkByHitCollis>(Mod.NAME);
		_FldPlayerWalkToBackByHitCollis = scans.CreateWrapper<FldPlayerWalkToBackByHitCollis>(Mod.NAME);
		_FldPlayerWalkToFrontByHitCollis = scans.CreateWrapper<FldPlayerWalkToFrontByHitCollis>(Mod.NAME);
		_FldPlayerRunToBackByDoor = scans.CreateWrapper<FldPlayerRunToBackByDoor>(Mod.NAME);
		_FldPlayerRunToFrontByDoor = scans.CreateWrapper<FldPlayerRunToFrontByDoor>(Mod.NAME);
		_FldPlayerWalkToBackByDoor = scans.CreateWrapper<FldPlayerWalkToBackByDoor>(Mod.NAME);
		_FldPlayerWalkToFrontByDoor = scans.CreateWrapper<FldPlayerWalkToFrontByDoor>(Mod.NAME);
		_FldPlayerSetKeySepMoveRate = scans.CreateWrapper<FldPlayerSetKeySepMoveRate>(Mod.NAME);
		_FldPlayerSetAnim = scans.CreateWrapper<FldPlayerSetAnim>(Mod.NAME);
		_FldPlayerSetAnimParam = scans.CreateWrapper<FldPlayerSetAnimParam>(Mod.NAME);
		_FldPlayerSetAnimParamImmidiately = scans.CreateWrapper<FldPlayerSetAnimParamImmidiately>(Mod.NAME);
		_FldPlayerIsAnimEnd = scans.CreateWrapper<FldPlayerIsAnimEnd>(Mod.NAME);
		_FldPlayerSetAddAnim = scans.CreateWrapper<FldPlayerSetAddAnim>(Mod.NAME);
		_FldPlayerSetAnimSoundActive = scans.CreateWrapper<FldPlayerSetAnimSoundActive>(Mod.NAME);
		_FldPlayerPlayABL = scans.CreateWrapper<FldPlayerPlayABL>(Mod.NAME);
		_FldPlayerStopABL = scans.CreateWrapper<FldPlayerStopABL>(Mod.NAME);
		_FldPlayerPreLoadEffect = scans.CreateWrapper<FldPlayerPreLoadEffect>(Mod.NAME);
		_FldPlayerIsEndPreLoadEffect = scans.CreateWrapper<FldPlayerIsEndPreLoadEffect>(Mod.NAME);
		_FldPlayerPlayEffectByPreLoad = scans.CreateWrapper<FldPlayerPlayEffectByPreLoad>(Mod.NAME);
		_FldPlayerPlayEffect = scans.CreateWrapper<FldPlayerPlayEffect>(Mod.NAME);
		_FldPlayerIsAutoCtrl = scans.CreateWrapper<FldPlayerIsAutoCtrl>(Mod.NAME);
		_FldPlayerSetColActive = scans.CreateWrapper<FldPlayerSetColActive>(Mod.NAME);
		_FldPlayerGetBasePose = scans.CreateWrapper<FldPlayerGetBasePose>(Mod.NAME);
		_FldPlayerSetBasePose = scans.CreateWrapper<FldPlayerSetBasePose>(Mod.NAME);
		_FldPlayerSetAction = scans.CreateWrapper<FldPlayerSetAction>(Mod.NAME);
		_FldPlayerSetActionAsAutoCtrl = scans.CreateWrapper<FldPlayerSetActionAsAutoCtrl>(Mod.NAME);
		_FldPlayerSetActionWaitTime = scans.CreateWrapper<FldPlayerSetActionWaitTime>(Mod.NAME);
		_FldPlayerEndLoopAction = scans.CreateWrapper<FldPlayerEndLoopAction>(Mod.NAME);
		_FldPlayerIsLoopActionLoopState = scans.CreateWrapper<FldPlayerIsLoopActionLoopState>(Mod.NAME);
		_FldPlayerIsWaitAction = scans.CreateWrapper<FldPlayerIsWaitAction>(Mod.NAME);
		_FldPlayerSetDrawSword = scans.CreateWrapper<FldPlayerSetDrawSword>(Mod.NAME);
		_FldPlayerIsDrawSword = scans.CreateWrapper<FldPlayerIsDrawSword>(Mod.NAME);
		_FldPlayerSetVisible = scans.CreateWrapper<FldPlayerSetVisible>(Mod.NAME);
		_FldPlayerStartFade = scans.CreateWrapper<FldPlayerStartFade>(Mod.NAME);
		_FldPlayerPlayIcon = scans.CreateWrapper<FldPlayerPlayIcon>(Mod.NAME);
		_FldPlayerStopIcon = scans.CreateWrapper<FldPlayerStopIcon>(Mod.NAME);
		_FldPlayerLookAtStart = scans.CreateWrapper<FldPlayerLookAtStart>(Mod.NAME);
		_FldPlayerLookAtSetType = scans.CreateWrapper<FldPlayerLookAtSetType>(Mod.NAME);
		_FldPlayerLookAtSetMember = scans.CreateWrapper<FldPlayerLookAtSetMember>(Mod.NAME);
		_FldPlayerLookAtSetNpc = scans.CreateWrapper<FldPlayerLookAtSetNpc>(Mod.NAME);
		_FldPlayerLookAtSetPos = scans.CreateWrapper<FldPlayerLookAtSetPos>(Mod.NAME);
		_FldPlayerLookAtSetDeg = scans.CreateWrapper<FldPlayerLookAtSetDeg>(Mod.NAME);
		_FldPlayerLookAtEnd = scans.CreateWrapper<FldPlayerLookAtEnd>(Mod.NAME);
		_FldPlayerSetInputLock = scans.CreateWrapper<FldPlayerSetInputLock>(Mod.NAME);
		_FldPlayerIsInputLock = scans.CreateWrapper<FldPlayerIsInputLock>(Mod.NAME);
		_FldPlayerSetActionLock = scans.CreateWrapper<FldPlayerSetActionLock>(Mod.NAME);
		_FldPlayerSetIsForceSquat = scans.CreateWrapper<FldPlayerSetIsForceSquat>(Mod.NAME);
		_FldPlayerSetIsForceDash = scans.CreateWrapper<FldPlayerSetIsForceDash>(Mod.NAME);
		_FldPlayerSetIsForceMove = scans.CreateWrapper<FldPlayerSetIsForceMove>(Mod.NAME);
		_FldPlayerSetIsMoveFollowCurve = scans.CreateWrapper<FldPlayerSetIsMoveFollowCurve>(Mod.NAME);
		_FldPlayerSetIsMoveFollowCamera = scans.CreateWrapper<FldPlayerSetIsMoveFollowCamera>(Mod.NAME);
		_FldPlayerSetIsFixInputL_Up = scans.CreateWrapper<FldPlayerSetIsFixInputL_Up>(Mod.NAME);
		_FldPlayerGetAttackID = scans.CreateWrapper<FldPlayerGetAttackID>(Mod.NAME);
		_FldPlayerGetAttackAttribute = scans.CreateWrapper<FldPlayerGetAttackAttribute>(Mod.NAME);
		_FldPlayerAttachItem = scans.CreateWrapper<FldPlayerAttachItem>(Mod.NAME);
		_FldPlayerIsAttachmentItemReady = scans.CreateWrapper<FldPlayerIsAttachmentItemReady>(Mod.NAME);
		_FldPlayerDetachItem = scans.CreateWrapper<FldPlayerDetachItem>(Mod.NAME);
		_FldPlayerPlayBattleVoice = scans.CreateWrapper<FldPlayerPlayBattleVoice>(Mod.NAME);
		_FldPlayerPlayPartVoice = scans.CreateWrapper<FldPlayerPlayPartVoice>(Mod.NAME);
		_FldPlayerSetIsMebika = scans.CreateWrapper<FldPlayerSetIsMebika>(Mod.NAME);
		_FldPlayerSetMebikaCustom = scans.CreateWrapper<FldPlayerSetMebikaCustom>(Mod.NAME);
		_FldPlayerSetArchetypeModelVisible = scans.CreateWrapper<FldPlayerSetArchetypeModelVisible>(Mod.NAME);
		_FldSetPlayerPos = scans.CreateWrapper<FldSetPlayerPos>(Mod.NAME);
		_FldSetPlayerPosParam = scans.CreateWrapper<FldSetPlayerPosParam>(Mod.NAME);
		_FldMemberGetUidByCharaID = scans.CreateWrapper<FldMemberGetUidByCharaID>(Mod.NAME);
		_FldMemberIsExistByCharaID = scans.CreateWrapper<FldMemberIsExistByCharaID>(Mod.NAME);
		_FldMemberGetFollowIndexMax = scans.CreateWrapper<FldMemberGetFollowIndexMax>(Mod.NAME);
		_FldMemberGetUidByFollowIndex = scans.CreateWrapper<FldMemberGetUidByFollowIndex>(Mod.NAME);
		_FldMemberCreateByCharaID = scans.CreateWrapper<FldMemberCreateByCharaID>(Mod.NAME);
		_FldMemberIsSetup = scans.CreateWrapper<FldMemberIsSetup>(Mod.NAME);
		_FldMemberDelete = scans.CreateWrapper<FldMemberDelete>(Mod.NAME);
		_FldMemberSetAIActive = scans.CreateWrapper<FldMemberSetAIActive>(Mod.NAME);
		_FldMemberIsAIActive = scans.CreateWrapper<FldMemberIsAIActive>(Mod.NAME);
		_FldMemberSetAIState_Event = scans.CreateWrapper<FldMemberSetAIState_Event>(Mod.NAME);
		_FldMemberSetColActive_AdjustGround = scans.CreateWrapper<FldMemberSetColActive_AdjustGround>(Mod.NAME);
		_FldMemberGetDegToPlayer = scans.CreateWrapper<FldMemberGetDegToPlayer>(Mod.NAME);
		_FldMemberSetDeg = scans.CreateWrapper<FldMemberSetDeg>(Mod.NAME);
		_FldMemberSetPos = scans.CreateWrapper<FldMemberSetPos>(Mod.NAME);
		_FldMemberSetPosParam = scans.CreateWrapper<FldMemberSetPosParam>(Mod.NAME);
		_FldMemberTurnToDeg = scans.CreateWrapper<FldMemberTurnToDeg>(Mod.NAME);
		_FldMemberTurnAddDeg = scans.CreateWrapper<FldMemberTurnAddDeg>(Mod.NAME);
		_FldMemberRun = scans.CreateWrapper<FldMemberRun>(Mod.NAME);
		_FldMemberRunToPos = scans.CreateWrapper<FldMemberRunToPos>(Mod.NAME);
		_FldMemberRunToPosParam = scans.CreateWrapper<FldMemberRunToPosParam>(Mod.NAME);
		_FldMemberSetAndRunToPos = scans.CreateWrapper<FldMemberSetAndRunToPos>(Mod.NAME);
		_FldMemberSetAndRunToPosParam = scans.CreateWrapper<FldMemberSetAndRunToPosParam>(Mod.NAME);
		_FldMemberWalk = scans.CreateWrapper<FldMemberWalk>(Mod.NAME);
		_FldMemberWalkToPos = scans.CreateWrapper<FldMemberWalkToPos>(Mod.NAME);
		_FldMemberWalkToPosParam = scans.CreateWrapper<FldMemberWalkToPosParam>(Mod.NAME);
		_FldMemberSetAndWalkToPos = scans.CreateWrapper<FldMemberSetAndWalkToPos>(Mod.NAME);
		_FldMemberSetAndWalkToPosParam = scans.CreateWrapper<FldMemberSetAndWalkToPosParam>(Mod.NAME);
		_FldMemberSetFormation = scans.CreateWrapper<FldMemberSetFormation>(Mod.NAME);
		_FldMemberRunToFormation = scans.CreateWrapper<FldMemberRunToFormation>(Mod.NAME);
		_FldMemberSetAndRunToFormation = scans.CreateWrapper<FldMemberSetAndRunToFormation>(Mod.NAME);
		_FldMemberWalkToFormation = scans.CreateWrapper<FldMemberWalkToFormation>(Mod.NAME);
		_FldMemberSetAndWalkToFormation = scans.CreateWrapper<FldMemberSetAndWalkToFormation>(Mod.NAME);
		_FldMemberSetAnim = scans.CreateWrapper<FldMemberSetAnim>(Mod.NAME);
		_FldMemberSetAnimParam = scans.CreateWrapper<FldMemberSetAnimParam>(Mod.NAME);
		_FldMemberSetAnimParamImmidiately = scans.CreateWrapper<FldMemberSetAnimParamImmidiately>(Mod.NAME);
		_FldMemberIsAnimEnd = scans.CreateWrapper<FldMemberIsAnimEnd>(Mod.NAME);
		_FldMemberSetAddAnim = scans.CreateWrapper<FldMemberSetAddAnim>(Mod.NAME);
		_FldMemberSetAnimSoundActive = scans.CreateWrapper<FldMemberSetAnimSoundActive>(Mod.NAME);
		_FldMemberPlayABL = scans.CreateWrapper<FldMemberPlayABL>(Mod.NAME);
		_FldMemberStopABL = scans.CreateWrapper<FldMemberStopABL>(Mod.NAME);
		_FldMemberPlayEffect = scans.CreateWrapper<FldMemberPlayEffect>(Mod.NAME);
		_FldMemberIsAutoCtrl = scans.CreateWrapper<FldMemberIsAutoCtrl>(Mod.NAME);
		_FldMemberGetBasePose = scans.CreateWrapper<FldMemberGetBasePose>(Mod.NAME);
		_FldMemberSetBasePose = scans.CreateWrapper<FldMemberSetBasePose>(Mod.NAME);
		_FldMemberSetAction = scans.CreateWrapper<FldMemberSetAction>(Mod.NAME);
		_FldMemberSetActionAsAutoCtrl = scans.CreateWrapper<FldMemberSetActionAsAutoCtrl>(Mod.NAME);
		_FldMemberSetActionWaitTime = scans.CreateWrapper<FldMemberSetActionWaitTime>(Mod.NAME);
		_FldMemberEndLoopAction = scans.CreateWrapper<FldMemberEndLoopAction>(Mod.NAME);
		_FldMemberIsLoopActionLoopState = scans.CreateWrapper<FldMemberIsLoopActionLoopState>(Mod.NAME);
		_FldMemberIsWaitAction = scans.CreateWrapper<FldMemberIsWaitAction>(Mod.NAME);
		_FldMemberSetVisible = scans.CreateWrapper<FldMemberSetVisible>(Mod.NAME);
		_FldMemberStartFade = scans.CreateWrapper<FldMemberStartFade>(Mod.NAME);
		_FldMemberPlayIcon = scans.CreateWrapper<FldMemberPlayIcon>(Mod.NAME);
		_FldMemberStopIcon = scans.CreateWrapper<FldMemberStopIcon>(Mod.NAME);
		_FldMemberLookAtStart = scans.CreateWrapper<FldMemberLookAtStart>(Mod.NAME);
		_FldMemberLookAtSetType = scans.CreateWrapper<FldMemberLookAtSetType>(Mod.NAME);
		_FldMemberLookAtSetPlayer = scans.CreateWrapper<FldMemberLookAtSetPlayer>(Mod.NAME);
		_FldMemberLookAtSetMember = scans.CreateWrapper<FldMemberLookAtSetMember>(Mod.NAME);
		_FldMemberLookAtSetNpc = scans.CreateWrapper<FldMemberLookAtSetNpc>(Mod.NAME);
		_FldMemberLookAtSetPos = scans.CreateWrapper<FldMemberLookAtSetPos>(Mod.NAME);
		_FldMemberLookAtSetDeg = scans.CreateWrapper<FldMemberLookAtSetDeg>(Mod.NAME);
		_FldMemberLookAtEnd = scans.CreateWrapper<FldMemberLookAtEnd>(Mod.NAME);
		_FldMemberSetMoveAnimRate = scans.CreateWrapper<FldMemberSetMoveAnimRate>(Mod.NAME);
		_FldMemberIsInCamera = scans.CreateWrapper<FldMemberIsInCamera>(Mod.NAME);
		_FldMemberSetPlayerNeighborPos = scans.CreateWrapper<FldMemberSetPlayerNeighborPos>(Mod.NAME);
		_FldMemberAllSetVisible = scans.CreateWrapper<FldMemberAllSetVisible>(Mod.NAME);
		_FldMemberAllSetAIState_Event = scans.CreateWrapper<FldMemberAllSetAIState_Event>(Mod.NAME);
		_FldMemberAllSetAIState_BackStep = scans.CreateWrapper<FldMemberAllSetAIState_BackStep>(Mod.NAME);
		_FldMemberAddList = scans.CreateWrapper<FldMemberAddList>(Mod.NAME);
		_FldMemberReloadByBtlMember = scans.CreateWrapper<FldMemberReloadByBtlMember>(Mod.NAME);
		_FldMemberReloadByCharaID = scans.CreateWrapper<FldMemberReloadByCharaID>(Mod.NAME);
		_FldMemberIsReloadEnd = scans.CreateWrapper<FldMemberIsReloadEnd>(Mod.NAME);
		_FldMemberGetUnitID = scans.CreateWrapper<FldMemberGetUnitID>(Mod.NAME);
		_FldMemberGetAttackID = scans.CreateWrapper<FldMemberGetAttackID>(Mod.NAME);
		_FldMemberGetAttackAttribute = scans.CreateWrapper<FldMemberGetAttackAttribute>(Mod.NAME);
		_FldMemberPlayBattleVoice = scans.CreateWrapper<FldMemberPlayBattleVoice>(Mod.NAME);
		_FldMemberPlayPartVoice = scans.CreateWrapper<FldMemberPlayPartVoice>(Mod.NAME);
		_FldEnemyGetUidByTableNo = scans.CreateWrapper<FldEnemyGetUidByTableNo>(Mod.NAME);
		_FldEnemyIsExistByTableNo = scans.CreateWrapper<FldEnemyIsExistByTableNo>(Mod.NAME);
		_FldEnemyIsExist = scans.CreateWrapper<FldEnemyIsExist>(Mod.NAME);
		_FldEnemyPreLoad = scans.CreateWrapper<FldEnemyPreLoad>(Mod.NAME);
		_FldEnemyIsPreLoadEnd = scans.CreateWrapper<FldEnemyIsPreLoadEnd>(Mod.NAME);
		_FldEnemyPopByPreLoad = scans.CreateWrapper<FldEnemyPopByPreLoad>(Mod.NAME);
		_FldEnemyCreateByPreLoad = scans.CreateWrapper<FldEnemyCreateByPreLoad>(Mod.NAME);
		_FldEnemyCreate = scans.CreateWrapper<FldEnemyCreate>(Mod.NAME);
		_FldEnemyCreateBySetDeg = scans.CreateWrapper<FldEnemyCreateBySetDeg>(Mod.NAME);
		_FldEnemyIsSetup = scans.CreateWrapper<FldEnemyIsSetup>(Mod.NAME);
		_FldEnemyDelete = scans.CreateWrapper<FldEnemyDelete>(Mod.NAME);
		_FldEnemyDeleteByTableNo = scans.CreateWrapper<FldEnemyDeleteByTableNo>(Mod.NAME);
		_FldEnemyKill = scans.CreateWrapper<FldEnemyKill>(Mod.NAME);
		_FldEnemyGetResScrID = scans.CreateWrapper<FldEnemyGetResScrID>(Mod.NAME);
		_FldEnemySetAIActive = scans.CreateWrapper<FldEnemySetAIActive>(Mod.NAME);
		_FldEnemySetColActive = scans.CreateWrapper<FldEnemySetColActive>(Mod.NAME);
		_FldEnemySetTargetActive = scans.CreateWrapper<FldEnemySetTargetActive>(Mod.NAME);
		_FldEnemySetAttractedOn = scans.CreateWrapper<FldEnemySetAttractedOn>(Mod.NAME);
		_FldEnemySetAIState_Discover = scans.CreateWrapper<FldEnemySetAIState_Discover>(Mod.NAME);
		_FldEnemyGetDegToPlayer = scans.CreateWrapper<FldEnemyGetDegToPlayer>(Mod.NAME);
		_FldEnemySetDeg = scans.CreateWrapper<FldEnemySetDeg>(Mod.NAME);
		_FldEnemySetPos = scans.CreateWrapper<FldEnemySetPos>(Mod.NAME);
		_FldEnemySetPosParam = scans.CreateWrapper<FldEnemySetPosParam>(Mod.NAME);
		_FldEnemyResetPos = scans.CreateWrapper<FldEnemyResetPos>(Mod.NAME);
		_FldEnemyTurnToDeg = scans.CreateWrapper<FldEnemyTurnToDeg>(Mod.NAME);
		_FldEnemyTurnAddDeg = scans.CreateWrapper<FldEnemyTurnAddDeg>(Mod.NAME);
		_FldEnemyRun = scans.CreateWrapper<FldEnemyRun>(Mod.NAME);
		_FldEnemyRunToPos = scans.CreateWrapper<FldEnemyRunToPos>(Mod.NAME);
		_FldEnemyRunToPosParam = scans.CreateWrapper<FldEnemyRunToPosParam>(Mod.NAME);
		_FldEnemySetAndRunToPos = scans.CreateWrapper<FldEnemySetAndRunToPos>(Mod.NAME);
		_FldEnemySetAndRunToPosParam = scans.CreateWrapper<FldEnemySetAndRunToPosParam>(Mod.NAME);
		_FldEnemyWalk = scans.CreateWrapper<FldEnemyWalk>(Mod.NAME);
		_FldEnemyWalkToPos = scans.CreateWrapper<FldEnemyWalkToPos>(Mod.NAME);
		_FldEnemyWalkToPosParam = scans.CreateWrapper<FldEnemyWalkToPosParam>(Mod.NAME);
		_FldEnemySetAndWalkToPos = scans.CreateWrapper<FldEnemySetAndWalkToPos>(Mod.NAME);
		_FldEnemySetAndWalkToPosParam = scans.CreateWrapper<FldEnemySetAndWalkToPosParam>(Mod.NAME);
		_FldEnemySetAnim = scans.CreateWrapper<FldEnemySetAnim>(Mod.NAME);
		_FldEnemySetAnimParam = scans.CreateWrapper<FldEnemySetAnimParam>(Mod.NAME);
		_FldEnemySetAnimParamImmidiately = scans.CreateWrapper<FldEnemySetAnimParamImmidiately>(Mod.NAME);
		_FldEnemyIsAnimEnd = scans.CreateWrapper<FldEnemyIsAnimEnd>(Mod.NAME);
		_FldEnemySetAnimSoundActive = scans.CreateWrapper<FldEnemySetAnimSoundActive>(Mod.NAME);
		_FldEnemyPlayEffect = scans.CreateWrapper<FldEnemyPlayEffect>(Mod.NAME);
		_FldEnemyIsAutoCtrl = scans.CreateWrapper<FldEnemyIsAutoCtrl>(Mod.NAME);
		_FldEnemyGetBasePose = scans.CreateWrapper<FldEnemyGetBasePose>(Mod.NAME);
		_FldEnemySetBasePose = scans.CreateWrapper<FldEnemySetBasePose>(Mod.NAME);
		_FldEnemySetAction = scans.CreateWrapper<FldEnemySetAction>(Mod.NAME);
		_FldEnemySetActionAsAutoCtrl = scans.CreateWrapper<FldEnemySetActionAsAutoCtrl>(Mod.NAME);
		_FldEnemySetActionWaitTime = scans.CreateWrapper<FldEnemySetActionWaitTime>(Mod.NAME);
		_FldEnemyEndLoopAction = scans.CreateWrapper<FldEnemyEndLoopAction>(Mod.NAME);
		_FldEnemyIsLoopActionLoopState = scans.CreateWrapper<FldEnemyIsLoopActionLoopState>(Mod.NAME);
		_FldEnemyIsWaitAction = scans.CreateWrapper<FldEnemyIsWaitAction>(Mod.NAME);
		_FldEnemySetVisible = scans.CreateWrapper<FldEnemySetVisible>(Mod.NAME);
		_FldEnemyStartFade = scans.CreateWrapper<FldEnemyStartFade>(Mod.NAME);
		_FldEnemyPlayIcon = scans.CreateWrapper<FldEnemyPlayIcon>(Mod.NAME);
		_FldEnemyStopIcon = scans.CreateWrapper<FldEnemyStopIcon>(Mod.NAME);
		_FldEnemySetAIRouteID = scans.CreateWrapper<FldEnemySetAIRouteID>(Mod.NAME);
		_FldEnemySetIsAIRouteLoop = scans.CreateWrapper<FldEnemySetIsAIRouteLoop>(Mod.NAME);
		_FldEnemyRegisterEventHitScript = scans.CreateWrapper<FldEnemyRegisterEventHitScript>(Mod.NAME);
		_FldEnemySetEventHitScriptActive = scans.CreateWrapper<FldEnemySetEventHitScriptActive>(Mod.NAME);
		_FldEnemySetIsHide = scans.CreateWrapper<FldEnemySetIsHide>(Mod.NAME);
		_FldEnemyGeneratorExecute = scans.CreateWrapper<FldEnemyGeneratorExecute>(Mod.NAME);
		_FldEnemySetTargetCursor = scans.CreateWrapper<FldEnemySetTargetCursor>(Mod.NAME);
		_FldEnemySetAccessGmc = scans.CreateWrapper<FldEnemySetAccessGmc>(Mod.NAME);
		_FldEnemyResetAccess = scans.CreateWrapper<FldEnemyResetAccess>(Mod.NAME);
		_FldEnemyAllSetAnimPause = scans.CreateWrapper<FldEnemyAllSetAnimPause>(Mod.NAME);
		_FldEnemyAllSetAIActive = scans.CreateWrapper<FldEnemyAllSetAIActive>(Mod.NAME);
		_FldEnemyAllResetPos = scans.CreateWrapper<FldEnemyAllResetPos>(Mod.NAME);
		_FldEnemyAllSetVisible = scans.CreateWrapper<FldEnemyAllSetVisible>(Mod.NAME);
		_FldEnemyKillWithinTargetRange = scans.CreateWrapper<FldEnemyKillWithinTargetRange>(Mod.NAME);
		_FldEnemyRespawnReset = scans.CreateWrapper<FldEnemyRespawnReset>(Mod.NAME);
		_FldEnemyGetUnitID = scans.CreateWrapper<FldEnemyGetUnitID>(Mod.NAME);
		_FldEnemyGetEnemyID = scans.CreateWrapper<FldEnemyGetEnemyID>(Mod.NAME);
		_FldEnemyGetAttackID = scans.CreateWrapper<FldEnemyGetAttackID>(Mod.NAME);
		_FldEnemyGetAttackAttribute = scans.CreateWrapper<FldEnemyGetAttackAttribute>(Mod.NAME);
		_FldEnemyIsDamageBackAttack = scans.CreateWrapper<FldEnemyIsDamageBackAttack>(Mod.NAME);
		_FldEnemyIsBreak = scans.CreateWrapper<FldEnemyIsBreak>(Mod.NAME);
		_FldEnemyIsDark = scans.CreateWrapper<FldEnemyIsDark>(Mod.NAME);
		_FldEnemyGetTier = scans.CreateWrapper<FldEnemyGetTier>(Mod.NAME);
		_FldEnemyIsDead = scans.CreateWrapper<FldEnemyIsDead>(Mod.NAME);
		_FldNpcGetUid = scans.CreateWrapper<FldNpcGetUid>(Mod.NAME);
		_FldNpcGetUidByNpcID = scans.CreateWrapper<FldNpcGetUidByNpcID>(Mod.NAME);
		_FldNpcGetUidByCharaID = scans.CreateWrapper<FldNpcGetUidByCharaID>(Mod.NAME);
		_FldNpcCreateByNpcID = scans.CreateWrapper<FldNpcCreateByNpcID>(Mod.NAME);
		_FldNpcIsExistByNpcID = scans.CreateWrapper<FldNpcIsExistByNpcID>(Mod.NAME);
		_FldNpcIsExistByCharaID = scans.CreateWrapper<FldNpcIsExistByCharaID>(Mod.NAME);
		_FldNpcGetUidByTableNo = scans.CreateWrapper<FldNpcGetUidByTableNo>(Mod.NAME);
		_FldNpcIsExistByTableNo = scans.CreateWrapper<FldNpcIsExistByTableNo>(Mod.NAME);
		_FldNpcCreate = scans.CreateWrapper<FldNpcCreate>(Mod.NAME);
		_FldNpcIsSetup = scans.CreateWrapper<FldNpcIsSetup>(Mod.NAME);
		_FldNpcDelete = scans.CreateWrapper<FldNpcDelete>(Mod.NAME);
		_FldNpcGetNpcID = scans.CreateWrapper<FldNpcGetNpcID>(Mod.NAME);
		_FldNpcGetCharaID = scans.CreateWrapper<FldNpcGetCharaID>(Mod.NAME);
		_FldNpcGetResScrID = scans.CreateWrapper<FldNpcGetResScrID>(Mod.NAME);
		_FldNpcIsSetOnPoint = scans.CreateWrapper<FldNpcIsSetOnPoint>(Mod.NAME);
		_FldNpcIsSetOnPointAnyone = scans.CreateWrapper<FldNpcIsSetOnPointAnyone>(Mod.NAME);
		_FldNpcSetSummaryOnByTable = scans.CreateWrapper<FldNpcSetSummaryOnByTable>(Mod.NAME);
		_FldNpcSetSummaryOff = scans.CreateWrapper<FldNpcSetSummaryOff>(Mod.NAME);
		_FldNpcIsSummaryOn = scans.CreateWrapper<FldNpcIsSummaryOn>(Mod.NAME);
		_FldNpcSetAIActive = scans.CreateWrapper<FldNpcSetAIActive>(Mod.NAME);
		_FldNpcIsAIActive = scans.CreateWrapper<FldNpcIsAIActive>(Mod.NAME);
		_FldNpcAddWaitPointMax = scans.CreateWrapper<FldNpcAddWaitPointMax>(Mod.NAME);
		_FldNpcIsCanOnTalk = scans.CreateWrapper<FldNpcIsCanOnTalk>(Mod.NAME);
		_FldNpcOnTalk = scans.CreateWrapper<FldNpcOnTalk>(Mod.NAME);
		_FldNpcIsEndTalk = scans.CreateWrapper<FldNpcIsEndTalk>(Mod.NAME);
		_FldNpcSetCallOut = scans.CreateWrapper<FldNpcSetCallOut>(Mod.NAME);
		_FldNpcIsCallOut = scans.CreateWrapper<FldNpcIsCallOut>(Mod.NAME);
		_FldNpcGetDegToPlayer = scans.CreateWrapper<FldNpcGetDegToPlayer>(Mod.NAME);
		_FldNpcSetDeg = scans.CreateWrapper<FldNpcSetDeg>(Mod.NAME);
		_FldNpcSetPos = scans.CreateWrapper<FldNpcSetPos>(Mod.NAME);
		_FldNpcSetPosParam = scans.CreateWrapper<FldNpcSetPosParam>(Mod.NAME);
		_FldNpcSetPosInit = scans.CreateWrapper<FldNpcSetPosInit>(Mod.NAME);
		_FldNpcTurnToDeg = scans.CreateWrapper<FldNpcTurnToDeg>(Mod.NAME);
		_FldNpcTurnAddDeg = scans.CreateWrapper<FldNpcTurnAddDeg>(Mod.NAME);
		_FldNpcSetColActive = scans.CreateWrapper<FldNpcSetColActive>(Mod.NAME);
		_FldNpcRun = scans.CreateWrapper<FldNpcRun>(Mod.NAME);
		_FldNpcRunToPos = scans.CreateWrapper<FldNpcRunToPos>(Mod.NAME);
		_FldNpcRunToPosParam = scans.CreateWrapper<FldNpcRunToPosParam>(Mod.NAME);
		_FldNpcSetAndRunToPos = scans.CreateWrapper<FldNpcSetAndRunToPos>(Mod.NAME);
		_FldNpcSetAndRunToPosParam = scans.CreateWrapper<FldNpcSetAndRunToPosParam>(Mod.NAME);
		_FldNpcWalk = scans.CreateWrapper<FldNpcWalk>(Mod.NAME);
		_FldNpcWalkToPos = scans.CreateWrapper<FldNpcWalkToPos>(Mod.NAME);
		_FldNpcWalkToPosParam = scans.CreateWrapper<FldNpcWalkToPosParam>(Mod.NAME);
		_FldNpcSetAndWalkToPos = scans.CreateWrapper<FldNpcSetAndWalkToPos>(Mod.NAME);
		_FldNpcSetAndWalkToPosParam = scans.CreateWrapper<FldNpcSetAndWalkToPosParam>(Mod.NAME);
		_FldNpcSetAnim = scans.CreateWrapper<FldNpcSetAnim>(Mod.NAME);
		_FldNpcSetAnimParam = scans.CreateWrapper<FldNpcSetAnimParam>(Mod.NAME);
		_FldNpcSetAnimParamImmidiately = scans.CreateWrapper<FldNpcSetAnimParamImmidiately>(Mod.NAME);
		_FldNpcGetAnimID = scans.CreateWrapper<FldNpcGetAnimID>(Mod.NAME);
		_FldNpcRemoveAllAutoCtrl = scans.CreateWrapper<FldNpcRemoveAllAutoCtrl>(Mod.NAME);
		_FldNpcIsAnimEnd = scans.CreateWrapper<FldNpcIsAnimEnd>(Mod.NAME);
		_FldNpcSetAnimSoundActive = scans.CreateWrapper<FldNpcSetAnimSoundActive>(Mod.NAME);
		_FldNpcPlayABL = scans.CreateWrapper<FldNpcPlayABL>(Mod.NAME);
		_FldNpcStopABL = scans.CreateWrapper<FldNpcStopABL>(Mod.NAME);
		_FldNpcPlayEffect = scans.CreateWrapper<FldNpcPlayEffect>(Mod.NAME);
		_FldNpcIsAutoCtrl = scans.CreateWrapper<FldNpcIsAutoCtrl>(Mod.NAME);
		_FldNpcGetBasePose = scans.CreateWrapper<FldNpcGetBasePose>(Mod.NAME);
		_FldNpcSetBasePose = scans.CreateWrapper<FldNpcSetBasePose>(Mod.NAME);
		_FldNpcSetAction = scans.CreateWrapper<FldNpcSetAction>(Mod.NAME);
		_FldNpcSetActionAsAutoCtrl = scans.CreateWrapper<FldNpcSetActionAsAutoCtrl>(Mod.NAME);
		_FldNpcSetActionWaitTime = scans.CreateWrapper<FldNpcSetActionWaitTime>(Mod.NAME);
		_FldNpcEndLoopAction = scans.CreateWrapper<FldNpcEndLoopAction>(Mod.NAME);
		_FldNpcIsLoopActionLoopState = scans.CreateWrapper<FldNpcIsLoopActionLoopState>(Mod.NAME);
		_FldNpcIsWaitAction = scans.CreateWrapper<FldNpcIsWaitAction>(Mod.NAME);
		_FldNpcSetVisible = scans.CreateWrapper<FldNpcSetVisible>(Mod.NAME);
		_FldNpcStartFade = scans.CreateWrapper<FldNpcStartFade>(Mod.NAME);
		_FldNpcPlayIcon = scans.CreateWrapper<FldNpcPlayIcon>(Mod.NAME);
		_FldNpcStopIcon = scans.CreateWrapper<FldNpcStopIcon>(Mod.NAME);
		_FldNpcLookAtStart = scans.CreateWrapper<FldNpcLookAtStart>(Mod.NAME);
		_FldNpcLookAtSetType = scans.CreateWrapper<FldNpcLookAtSetType>(Mod.NAME);
		_FldNpcLookAtSetPlayer = scans.CreateWrapper<FldNpcLookAtSetPlayer>(Mod.NAME);
		_FldNpcLookAtSetMember = scans.CreateWrapper<FldNpcLookAtSetMember>(Mod.NAME);
		_FldNpcLookAtSetNpc = scans.CreateWrapper<FldNpcLookAtSetNpc>(Mod.NAME);
		_FldNpcLookAtSetPos = scans.CreateWrapper<FldNpcLookAtSetPos>(Mod.NAME);
		_FldNpcLookAtSetDeg = scans.CreateWrapper<FldNpcLookAtSetDeg>(Mod.NAME);
		_FldNpcLookAtSetDelay = scans.CreateWrapper<FldNpcLookAtSetDelay>(Mod.NAME);
		_FldNpcLookAtSetSpeedType = scans.CreateWrapper<FldNpcLookAtSetSpeedType>(Mod.NAME);
		_FldNpcLookAtEnd = scans.CreateWrapper<FldNpcLookAtEnd>(Mod.NAME);
		_FldNpcAttachItem = scans.CreateWrapper<FldNpcAttachItem>(Mod.NAME);
		_FldNpcIsAttachmentItemReady = scans.CreateWrapper<FldNpcIsAttachmentItemReady>(Mod.NAME);
		_FldNpcDetachItem = scans.CreateWrapper<FldNpcDetachItem>(Mod.NAME);
		_FldNpcSetIsMebika = scans.CreateWrapper<FldNpcSetIsMebika>(Mod.NAME);
		_FldNpcUpdateCloth = scans.CreateWrapper<FldNpcUpdateCloth>(Mod.NAME);
		_FldNpcGetInitNpcPosID = scans.CreateWrapper<FldNpcGetInitNpcPosID>(Mod.NAME);
		_FldNpcFollowerSummaryGetTalkFuncName = scans.CreateWrapper<FldNpcFollowerSummaryGetTalkFuncName>(Mod.NAME);
		_FldNpcFollowerSummarySetParam = scans.CreateWrapper<FldNpcFollowerSummarySetParam>(Mod.NAME);
		_FldNpcHavingCharaIDSetVisible = scans.CreateWrapper<FldNpcHavingCharaIDSetVisible>(Mod.NAME);
		_FldNpcNotHavingCharaIDSetVisible = scans.CreateWrapper<FldNpcNotHavingCharaIDSetVisible>(Mod.NAME);
		_FldNpcSetSummaryOn = scans.CreateWrapper<FldNpcSetSummaryOn>(Mod.NAME);
		_FldNpcSummaryOn = scans.CreateWrapper<FldNpcSummaryOn>(Mod.NAME);
		_FldNpcSummaryOff = scans.CreateWrapper<FldNpcSummaryOff>(Mod.NAME);
		_FldGetFollowerID = scans.CreateWrapper<FldGetFollowerID>(Mod.NAME);
		_FldFollowerSetVoiceResult = scans.CreateWrapper<FldFollowerSetVoiceResult>(Mod.NAME);
		_FldFollowerSetRemindLastDay = scans.CreateWrapper<FldFollowerSetRemindLastDay>(Mod.NAME);
		_FldFollowerJump = scans.CreateWrapper<FldFollowerJump>(Mod.NAME);
		_FldFollowerGetJumpToZoneID = scans.CreateWrapper<FldFollowerGetJumpToZoneID>(Mod.NAME);
		_FldFollowerIsLayoutForFollowerScenario = scans.CreateWrapper<FldFollowerIsLayoutForFollowerScenario>(Mod.NAME);
		_FldFollowerIsAbsence = scans.CreateWrapper<FldFollowerIsAbsence>(Mod.NAME);
		_FldFollowerGetRankupStatus = scans.CreateWrapper<FldFollowerGetRankupStatus>(Mod.NAME);
		_FldFollowerGetUnlockStatus = scans.CreateWrapper<FldFollowerGetUnlockStatus>(Mod.NAME);
		_FldFollowerUpdateLayoutInfo = scans.CreateWrapper<FldFollowerUpdateLayoutInfo>(Mod.NAME);
		_FldBgSetVisible = scans.CreateWrapper<FldBgSetVisible>(Mod.NAME);
		_FldBgSetIsCommandBattle = scans.CreateWrapper<FldBgSetIsCommandBattle>(Mod.NAME);
		_FldBgDataGetIndexByLayoutID = scans.CreateWrapper<FldBgDataGetIndexByLayoutID>(Mod.NAME);
		_FldBgDataGetIndexByLayoutName = scans.CreateWrapper<FldBgDataGetIndexByLayoutName>(Mod.NAME);
		_FldBgDataGetIndexByNodeName = scans.CreateWrapper<FldBgDataGetIndexByNodeName>(Mod.NAME);
		_FldBgDataGetNum = scans.CreateWrapper<FldBgDataGetNum>(Mod.NAME);
		_FldBgDataIsContainLayoutName = scans.CreateWrapper<FldBgDataIsContainLayoutName>(Mod.NAME);
		_FldBgDataIsContainNodeName = scans.CreateWrapper<FldBgDataIsContainNodeName>(Mod.NAME);
		_FldBgDataSetEnable = scans.CreateWrapper<FldBgDataSetEnable>(Mod.NAME);
		_FldBgDataGetEnable = scans.CreateWrapper<FldBgDataGetEnable>(Mod.NAME);
		_FldSetEnableBgDataName = scans.CreateWrapper<FldSetEnableBgDataName>(Mod.NAME);
		_FldGetEnableBgDataName = scans.CreateWrapper<FldGetEnableBgDataName>(Mod.NAME);
		_FldSetEnableBgDataNodeName = scans.CreateWrapper<FldSetEnableBgDataNodeName>(Mod.NAME);
		_FldGetEnableBgDataNodeName = scans.CreateWrapper<FldGetEnableBgDataNodeName>(Mod.NAME);
		_FldBgLightGetIndexByID = scans.CreateWrapper<FldBgLightGetIndexByID>(Mod.NAME);
		_FldBgLightGetIndexByName = scans.CreateWrapper<FldBgLightGetIndexByName>(Mod.NAME);
		_FldBgLightGetNum = scans.CreateWrapper<FldBgLightGetNum>(Mod.NAME);
		_FldBgLightIsContainName = scans.CreateWrapper<FldBgLightIsContainName>(Mod.NAME);
		_FldBgLightSetEnable = scans.CreateWrapper<FldBgLightSetEnable>(Mod.NAME);
		_FldBgLightGetEnable = scans.CreateWrapper<FldBgLightGetEnable>(Mod.NAME);
		_FldGetEnableBgLightName = scans.CreateWrapper<FldGetEnableBgLightName>(Mod.NAME);
		_FldGetEnableBgLightId = scans.CreateWrapper<FldGetEnableBgLightId>(Mod.NAME);
		_FldSetEnableBgLightName = scans.CreateWrapper<FldSetEnableBgLightName>(Mod.NAME);
		_FldSetEnableBgLightId = scans.CreateWrapper<FldSetEnableBgLightId>(Mod.NAME);
		_FldBgEffectGetIndexByLayoutName = scans.CreateWrapper<FldBgEffectGetIndexByLayoutName>(Mod.NAME);
		_FldBgEffectGetNum = scans.CreateWrapper<FldBgEffectGetNum>(Mod.NAME);
		_FldBgEffectIsContainLayoutName = scans.CreateWrapper<FldBgEffectIsContainLayoutName>(Mod.NAME);
		_FldBgEffectSetVisible = scans.CreateWrapper<FldBgEffectSetVisible>(Mod.NAME);
		_FldBgEffectGetVisible = scans.CreateWrapper<FldBgEffectGetVisible>(Mod.NAME);
		_FldDoorGetUid = scans.CreateWrapper<FldDoorGetUid>(Mod.NAME);
		_FldDoorGetUidByClosestOnPlayer = scans.CreateWrapper<FldDoorGetUidByClosestOnPlayer>(Mod.NAME);
		_FldDoorGetUidByResrcUid = scans.CreateWrapper<FldDoorGetUidByResrcUid>(Mod.NAME);
		_FldDoorGetResScrID = scans.CreateWrapper<FldDoorGetResScrID>(Mod.NAME);
		_FldDoorIsPlayerInFront = scans.CreateWrapper<FldDoorIsPlayerInFront>(Mod.NAME);
		_FldDoorGetType = scans.CreateWrapper<FldDoorGetType>(Mod.NAME);
		_FldDoorSetAction = scans.CreateWrapper<FldDoorSetAction>(Mod.NAME);
		_FldDoorSetAnim = scans.CreateWrapper<FldDoorSetAnim>(Mod.NAME);
		_FldDoorIsAnimEnd = scans.CreateWrapper<FldDoorIsAnimEnd>(Mod.NAME);
		_FldDoorSetLockState = scans.CreateWrapper<FldDoorSetLockState>(Mod.NAME);
		_FldDoorGetLockState = scans.CreateWrapper<FldDoorGetLockState>(Mod.NAME);
		_FldDoorSetColActive = scans.CreateWrapper<FldDoorSetColActive>(Mod.NAME);
		_FldDoorSetIsDanger = scans.CreateWrapper<FldDoorSetIsDanger>(Mod.NAME);
		_FldDoorGetLinkFlag_ST = scans.CreateWrapper<FldDoorGetLinkFlag_ST>(Mod.NAME);
		_FldDoorGetLinkFlag_ED = scans.CreateWrapper<FldDoorGetLinkFlag_ED>(Mod.NAME);
		_FldLadderGetUidByClosestOnPlayer = scans.CreateWrapper<FldLadderGetUidByClosestOnPlayer>(Mod.NAME);
		_FldLadderGetUidByResrcUid = scans.CreateWrapper<FldLadderGetUidByResrcUid>(Mod.NAME);
		_FldLadderOnAccess = scans.CreateWrapper<FldLadderOnAccess>(Mod.NAME);
		_FldTboxGetUid = scans.CreateWrapper<FldTboxGetUid>(Mod.NAME);
		_FldTboxGetUidByLayoutName = scans.CreateWrapper<FldTboxGetUidByLayoutName>(Mod.NAME);
		_FldTboxGetResScrID = scans.CreateWrapper<FldTboxGetResScrID>(Mod.NAME);
		_FldTboxGetItemID = scans.CreateWrapper<FldTboxGetItemID>(Mod.NAME);
		_FldTboxGetItemNum = scans.CreateWrapper<FldTboxGetItemNum>(Mod.NAME);
		_FldTboxGetRarity = scans.CreateWrapper<FldTboxGetRarity>(Mod.NAME);
		_FldTboxPrepareOfOpen = scans.CreateWrapper<FldTboxPrepareOfOpen>(Mod.NAME);
		_FldTboxIsReadyToOpen = scans.CreateWrapper<FldTboxIsReadyToOpen>(Mod.NAME);
		_FldTboxSetAction = scans.CreateWrapper<FldTboxSetAction>(Mod.NAME);
		_FldTboxGetUseState = scans.CreateWrapper<FldTboxGetUseState>(Mod.NAME);
		_FldTboxCleanupOfOpen = scans.CreateWrapper<FldTboxCleanupOfOpen>(Mod.NAME);
		_FldTboxSetColActive = scans.CreateWrapper<FldTboxSetColActive>(Mod.NAME);
		_FldObjGetUid = scans.CreateWrapper<FldObjGetUid>(Mod.NAME);
		_FldObjGetUidByLayoutName = scans.CreateWrapper<FldObjGetUidByLayoutName>(Mod.NAME);
		_FldObjGetItemID = scans.CreateWrapper<FldObjGetItemID>(Mod.NAME);
		_FldObjGetItemNum = scans.CreateWrapper<FldObjGetItemNum>(Mod.NAME);
		_FldObjBreak = scans.CreateWrapper<FldObjBreak>(Mod.NAME);
		_FldObjIsBreak = scans.CreateWrapper<FldObjIsBreak>(Mod.NAME);
		_FldObjResetBreak = scans.CreateWrapper<FldObjResetBreak>(Mod.NAME);
		_FldObjFadeOut = scans.CreateWrapper<FldObjFadeOut>(Mod.NAME);
		_FldGatherGetUid = scans.CreateWrapper<FldGatherGetUid>(Mod.NAME);
		_FldGatherGetUidByLayoutName = scans.CreateWrapper<FldGatherGetUidByLayoutName>(Mod.NAME);
		_FldGatherGetUidByLayoutID = scans.CreateWrapper<FldGatherGetUidByLayoutID>(Mod.NAME);
		_FldGatherSetAction = scans.CreateWrapper<FldGatherSetAction>(Mod.NAME);
		_FldGatherGetItemID = scans.CreateWrapper<FldGatherGetItemID>(Mod.NAME);
		_FldGatherGetItemNum = scans.CreateWrapper<FldGatherGetItemNum>(Mod.NAME);
		_FldGatherSetIsAcquired = scans.CreateWrapper<FldGatherSetIsAcquired>(Mod.NAME);
		_FldGmcGetUid = scans.CreateWrapper<FldGmcGetUid>(Mod.NAME);
		_FldGmcGetUidByLayoutName = scans.CreateWrapper<FldGmcGetUidByLayoutName>(Mod.NAME);
		_FldGmcGetResScrID = scans.CreateWrapper<FldGmcGetResScrID>(Mod.NAME);
		_FldGmcIsExist = scans.CreateWrapper<FldGmcIsExist>(Mod.NAME);
		_FldGmcSetAnim = scans.CreateWrapper<FldGmcSetAnim>(Mod.NAME);
		_FldGmcIsAnimEnd = scans.CreateWrapper<FldGmcIsAnimEnd>(Mod.NAME);
		_FldGmcSetAnimCurrentTime = scans.CreateWrapper<FldGmcSetAnimCurrentTime>(Mod.NAME);
		_FldGmcSetAnimSpeed = scans.CreateWrapper<FldGmcSetAnimSpeed>(Mod.NAME);
		_FldGmcSetAnimSoundActive = scans.CreateWrapper<FldGmcSetAnimSoundActive>(Mod.NAME);
		_FldGmcPlayEffect = scans.CreateWrapper<FldGmcPlayEffect>(Mod.NAME);
		_FldGmcSetIsActivated = scans.CreateWrapper<FldGmcSetIsActivated>(Mod.NAME);
		_FldGmcOnActivate = scans.CreateWrapper<FldGmcOnActivate>(Mod.NAME);
		_FldGmcIsActivated = scans.CreateWrapper<FldGmcIsActivated>(Mod.NAME);
		_FldGmcIsRunLinkScript = scans.CreateWrapper<FldGmcIsRunLinkScript>(Mod.NAME);
		_FldGmcSetVisible = scans.CreateWrapper<FldGmcSetVisible>(Mod.NAME);
		_FldGmcStartFade = scans.CreateWrapper<FldGmcStartFade>(Mod.NAME);
		_FldGmcSetColActive = scans.CreateWrapper<FldGmcSetColActive>(Mod.NAME);
		_FldGmcSetColActiveWithID = scans.CreateWrapper<FldGmcSetColActiveWithID>(Mod.NAME);
		_FldGmcSetObstacleActive = scans.CreateWrapper<FldGmcSetObstacleActive>(Mod.NAME);
		_FldGmcDestruction = scans.CreateWrapper<FldGmcDestruction>(Mod.NAME);
		_FldGmcSetAtkDirForce = scans.CreateWrapper<FldGmcSetAtkDirForce>(Mod.NAME);
		_FldGmcSetAtkIgnoreWall = scans.CreateWrapper<FldGmcSetAtkIgnoreWall>(Mod.NAME);
		_FldGmcSetMaxHP = scans.CreateWrapper<FldGmcSetMaxHP>(Mod.NAME);
		_FldGmcSetHP = scans.CreateWrapper<FldGmcSetHP>(Mod.NAME);
		_FldGmcGetHP = scans.CreateWrapper<FldGmcGetHP>(Mod.NAME);
		_FldGmcDecreaseHP = scans.CreateWrapper<FldGmcDecreaseHP>(Mod.NAME);
		_FldGmcIsPlayerInFront = scans.CreateWrapper<FldGmcIsPlayerInFront>(Mod.NAME);
		_FldGmcSetAttachPartyCharaToMyself = scans.CreateWrapper<FldGmcSetAttachPartyCharaToMyself>(Mod.NAME);
		_FldGmcGetExcelData_Flag = scans.CreateWrapper<FldGmcGetExcelData_Flag>(Mod.NAME);
		_FldGmcGetExcelData_EnemyLayoutID = scans.CreateWrapper<FldGmcGetExcelData_EnemyLayoutID>(Mod.NAME);
		_FldGmcGetExcelData_CameraNodeName = scans.CreateWrapper<FldGmcGetExcelData_CameraNodeName>(Mod.NAME);
		_FldGmcGetExcelData_GmcLayoutName = scans.CreateWrapper<FldGmcGetExcelData_GmcLayoutName>(Mod.NAME);
		_FldGmcRegisterTimerScript = scans.CreateWrapper<FldGmcRegisterTimerScript>(Mod.NAME);
		_FldGmcUnregisterTimerScript = scans.CreateWrapper<FldGmcUnregisterTimerScript>(Mod.NAME);
		_FldGmcUpdateGridInfo = scans.CreateWrapper<FldGmcUpdateGridInfo>(Mod.NAME);
		_FldGmcAdjustFOE = scans.CreateWrapper<FldGmcAdjustFOE>(Mod.NAME);
		_FldBgObjGetResScrIDByResrcUid = scans.CreateWrapper<FldBgObjGetResScrIDByResrcUid>(Mod.NAME);
		_FldHitCollisGetUid = scans.CreateWrapper<FldHitCollisGetUid>(Mod.NAME);
		_FldHitCollisGetUidByLayoutName = scans.CreateWrapper<FldHitCollisGetUidByLayoutName>(Mod.NAME);
		_FldHitCollisIsCheckUnitInOBB = scans.CreateWrapper<FldHitCollisIsCheckUnitInOBB>(Mod.NAME);
		_FldHitCollisGetLinkPosID = scans.CreateWrapper<FldHitCollisGetLinkPosID>(Mod.NAME);
		_FldHitCollisRegisterTimerScript = scans.CreateWrapper<FldHitCollisRegisterTimerScript>(Mod.NAME);
		_FldHitCollisUnregisterTimerScript = scans.CreateWrapper<FldHitCollisUnregisterTimerScript>(Mod.NAME);
		_FldActionHitGetUidByLayoutName = scans.CreateWrapper<FldActionHitGetUidByLayoutName>(Mod.NAME);
		_FldActionHitSetDashJumpFollowPath = scans.CreateWrapper<FldActionHitSetDashJumpFollowPath>(Mod.NAME);
		_FldActionHitSetDashJumpHitStop = scans.CreateWrapper<FldActionHitSetDashJumpHitStop>(Mod.NAME);
		_FldGayaHitGetUidByLayoutName = scans.CreateWrapper<FldGayaHitGetUidByLayoutName>(Mod.NAME);
		_FldGayaHitUpdateTableData = scans.CreateWrapper<FldGayaHitUpdateTableData>(Mod.NAME);
		_FldGayaHitSetSleepInterval = scans.CreateWrapper<FldGayaHitSetSleepInterval>(Mod.NAME);
		_FldEnvBoxHeightChange_Start = scans.CreateWrapper<FldEnvBoxHeightChange_Start>(Mod.NAME);
		_FldEnvBoxHeightChange_Reset = scans.CreateWrapper<FldEnvBoxHeightChange_Reset>(Mod.NAME);
		_FldEnvBoxHeightChange_End = scans.CreateWrapper<FldEnvBoxHeightChange_End>(Mod.NAME);
		_FldEnvBoxHeightChange_IsActive = scans.CreateWrapper<FldEnvBoxHeightChange_IsActive>(Mod.NAME);
		_FldEnvBoxCreateByEnvNumberMask = scans.CreateWrapper<FldEnvBoxCreateByEnvNumberMask>(Mod.NAME);
		_FldEnvBoxSetByUid = scans.CreateWrapper<FldEnvBoxSetByUid>(Mod.NAME);
		_FldCameraBoxGetUidByNodeName = scans.CreateWrapper<FldCameraBoxGetUidByNodeName>(Mod.NAME);
		_FldCameraBoxSetIsActivated = scans.CreateWrapper<FldCameraBoxSetIsActivated>(Mod.NAME);
		_FldCameraBoxGetIsActivated = scans.CreateWrapper<FldCameraBoxGetIsActivated>(Mod.NAME);
		_FldCameraBoxSetWideMode = scans.CreateWrapper<FldCameraBoxSetWideMode>(Mod.NAME);
		_FldCameraBoxAllSetWideMode = scans.CreateWrapper<FldCameraBoxAllSetWideMode>(Mod.NAME);
		_FldCameraBoxAllSetIsIgnoreInputLock = scans.CreateWrapper<FldCameraBoxAllSetIsIgnoreInputLock>(Mod.NAME);
		_FldMaskBoxSetOnByUid = scans.CreateWrapper<FldMaskBoxSetOnByUid>(Mod.NAME);
		_FldMaskBoxSetOnByGroupID = scans.CreateWrapper<FldMaskBoxSetOnByGroupID>(Mod.NAME);
		_FldMaskBoxSetIsUpdate = scans.CreateWrapper<FldMaskBoxSetIsUpdate>(Mod.NAME);
		_FldMaskBoxSetOnByLine = scans.CreateWrapper<FldMaskBoxSetOnByLine>(Mod.NAME);
		_FldSaveEntryEnemyCheckScript_Register = scans.CreateWrapper<FldSaveEntryEnemyCheckScript_Register>(Mod.NAME);
		_FldSaveEntryEnemyCheckScript_Unregister = scans.CreateWrapper<FldSaveEntryEnemyCheckScript_Unregister>(Mod.NAME);
		_FldSaveEntryEnemyCheckScript_IsRegister = scans.CreateWrapper<FldSaveEntryEnemyCheckScript_IsRegister>(Mod.NAME);
		_FldSaveEntryEnemyCheckScript_AddEnemyTableNo = scans.CreateWrapper<FldSaveEntryEnemyCheckScript_AddEnemyTableNo>(Mod.NAME);
		_FldSaveEntryGimmickDestination_Register = scans.CreateWrapper<FldSaveEntryGimmickDestination_Register>(Mod.NAME);
		_FldSaveEntryGimmickDestination_Unregister = scans.CreateWrapper<FldSaveEntryGimmickDestination_Unregister>(Mod.NAME);
		_FldEntryTimerScript_Register = scans.CreateWrapper<FldEntryTimerScript_Register>(Mod.NAME);
		_FldEntryTimerScript_Unregister = scans.CreateWrapper<FldEntryTimerScript_Unregister>(Mod.NAME);
		_FldEntryTimerLinkScript_Register = scans.CreateWrapper<FldEntryTimerLinkScript_Register>(Mod.NAME);
		_FldEntryTimerLinkScript_Unregister = scans.CreateWrapper<FldEntryTimerLinkScript_Unregister>(Mod.NAME);
		_FldEntryEnemyCheckScript_Register = scans.CreateWrapper<FldEntryEnemyCheckScript_Register>(Mod.NAME);
		_FldEntryEnemyCheckScript_Unregister = scans.CreateWrapper<FldEntryEnemyCheckScript_Unregister>(Mod.NAME);
		_FldEntryEnemyCheckScript_IsRegister = scans.CreateWrapper<FldEntryEnemyCheckScript_IsRegister>(Mod.NAME);
		_FldEntryEnemyCheckScript_AddEnemyTableNo = scans.CreateWrapper<FldEntryEnemyCheckScript_AddEnemyTableNo>(Mod.NAME);
		_FldEntryEnemyDamageScript_Register = scans.CreateWrapper<FldEntryEnemyDamageScript_Register>(Mod.NAME);
		_FldEntryEnemyDamageScript_Unregister = scans.CreateWrapper<FldEntryEnemyDamageScript_Unregister>(Mod.NAME);
		_FldEntryEnemyDiscoverScript_Register = scans.CreateWrapper<FldEntryEnemyDiscoverScript_Register>(Mod.NAME);
		_FldEntryEnemyDiscoverScript_Unregister = scans.CreateWrapper<FldEntryEnemyDiscoverScript_Unregister>(Mod.NAME);
		_FldCreateEva = scans.CreateWrapper<FldCreateEva>(Mod.NAME);
		_FldReturnItemGetMapID = scans.CreateWrapper<FldReturnItemGetMapID>(Mod.NAME);
		_FldReturnItemGetPosID = scans.CreateWrapper<FldReturnItemGetPosID>(Mod.NAME);
		_FldChangeCameraNormal = scans.CreateWrapper<FldChangeCameraNormal>(Mod.NAME);
		_FldChangeCameraWatchY = scans.CreateWrapper<FldChangeCameraWatchY>(Mod.NAME);
		_DUMMY = scans.CreateWrapper<DUMMY>(Mod.NAME);
		_CMD_MDL_VISIBLE = scans.CreateWrapper<CMD_MDL_VISIBLE>(Mod.NAME);
		_CMD_MDL_ANIM = scans.CreateWrapper<CMD_MDL_ANIM>(Mod.NAME);
		_CMD_MDL_ANIM_SYNC = scans.CreateWrapper<CMD_MDL_ANIM_SYNC>(Mod.NAME);
		_CMD_MDL_ANIM_SEEK = scans.CreateWrapper<CMD_MDL_ANIM_SEEK>(Mod.NAME);
		_CMD_MDL_ANIM_FRAMESYNC = scans.CreateWrapper<CMD_MDL_ANIM_FRAMESYNC>(Mod.NAME);
		_CMD_MDL_ANIM_BLENDSYNC = scans.CreateWrapper<CMD_MDL_ANIM_BLENDSYNC>(Mod.NAME);
		_CMD_MDL_ANIM_LOOPSYNC = scans.CreateWrapper<CMD_MDL_ANIM_LOOPSYNC>(Mod.NAME);
		_CMD_MDL_ANIM_SPEED = scans.CreateWrapper<CMD_MDL_ANIM_SPEED>(Mod.NAME);
		_CMD_MDL_ANIM_NEXT = scans.CreateWrapper<CMD_MDL_ANIM_NEXT>(Mod.NAME);
		_CMD_MDL_GET_ANIM = scans.CreateWrapper<CMD_MDL_GET_ANIM>(Mod.NAME);
		_CMD_MDL_GET_ANIM_COUNT = scans.CreateWrapper<CMD_MDL_GET_ANIM_COUNT>(Mod.NAME);
		_CMD_MDL_ICON = scans.CreateWrapper<CMD_MDL_ICON>(Mod.NAME);
		_CMD_MDL_ICON_EX = scans.CreateWrapper<CMD_MDL_ICON_EX>(Mod.NAME);
		_CMD_MDL_ICON_SET_SCALE = scans.CreateWrapper<CMD_MDL_ICON_SET_SCALE>(Mod.NAME);
		_CMD_MDL_ICON_END = scans.CreateWrapper<CMD_MDL_ICON_END>(Mod.NAME);
		_CMD_MDL_SET_SCALE = scans.CreateWrapper<CMD_MDL_SET_SCALE>(Mod.NAME);
		_CMD_MDL_GET_ITEM_RESHND = scans.CreateWrapper<CMD_MDL_GET_ITEM_RESHND>(Mod.NAME);
		_CMD_MDL_ADD_ANIM = scans.CreateWrapper<CMD_MDL_ADD_ANIM>(Mod.NAME);
		_CMD_MDL_EMOTE_ANIM = scans.CreateWrapper<CMD_MDL_EMOTE_ANIM>(Mod.NAME);
		_CMD_MDL_ADD_ANIM_NEXT = scans.CreateWrapper<CMD_MDL_ADD_ANIM_NEXT>(Mod.NAME);
		_CMD_MDL_ADD_ANIM_SYNC = scans.CreateWrapper<CMD_MDL_ADD_ANIM_SYNC>(Mod.NAME);
		_CMD_MDL_TRACK_ADD_ANIM = scans.CreateWrapper<CMD_MDL_TRACK_ADD_ANIM>(Mod.NAME);
		_CMD_MDL_TRACK_ADD_ANIM_NEXT = scans.CreateWrapper<CMD_MDL_TRACK_ADD_ANIM_NEXT>(Mod.NAME);
		_CMD_MDL_TRACK_ADD_ANIM_SYNC = scans.CreateWrapper<CMD_MDL_TRACK_ADD_ANIM_SYNC>(Mod.NAME);
		_CMD_MDL_TRACK_CLEAR_ANIM = scans.CreateWrapper<CMD_MDL_TRACK_CLEAR_ANIM>(Mod.NAME);
		_CMD_MOVIE_PLAY = scans.CreateWrapper<CMD_MOVIE_PLAY>(Mod.NAME);
		_CMD_MOVIE_SYNC = scans.CreateWrapper<CMD_MOVIE_SYNC>(Mod.NAME);
		_CMD_PAD_TRIG = scans.CreateWrapper<CMD_PAD_TRIG>(Mod.NAME);
		_CMD_PAD_PRESS = scans.CreateWrapper<CMD_PAD_PRESS>(Mod.NAME);
		_CMD_PAD_CHK_TRIG = scans.CreateWrapper<CMD_PAD_CHK_TRIG>(Mod.NAME);
		_CMD_PAD_CHK_PRESS = scans.CreateWrapper<CMD_PAD_CHK_PRESS>(Mod.NAME);
		_CMD_ANALOG_ASTICK_CHECK = scans.CreateWrapper<CMD_ANALOG_ASTICK_CHECK>(Mod.NAME);
		_CMD_FADE_IN = scans.CreateWrapper<CMD_FADE_IN>(Mod.NAME);
		_CMD_FADE_OUT = scans.CreateWrapper<CMD_FADE_OUT>(Mod.NAME);
		_CMD_FADEEND_CHECK = scans.CreateWrapper<CMD_FADEEND_CHECK>(Mod.NAME);
		_CMD_FADE_SYNC = scans.CreateWrapper<CMD_FADE_SYNC>(Mod.NAME);
		_CMD_FADE_COLOR = scans.CreateWrapper<CMD_FADE_COLOR>(Mod.NAME);
    }

	public seterrorhandler seterrorhandler => _seterrorhandler.Wrapper;
	public setdebughook setdebughook => _setdebughook.Wrapper;
	public enabledebuginfo enabledebuginfo => _enabledebuginfo.Wrapper;
	public getstackinfos getstackinfos => _getstackinfos.Wrapper;
	public getroottable getroottable => _getroottable.Wrapper;
	public setroottable setroottable => _setroottable.Wrapper;
	public getconsttable getconsttable => _getconsttable.Wrapper;
	public setconsttable setconsttable => _setconsttable.Wrapper;
	public assert assert => _assert.Wrapper;
	public error error => _error.Wrapper;
	public compilestring compilestring => _compilestring.Wrapper;
	public newthread newthread => _newthread.Wrapper;
	public suspend suspend => _suspend.Wrapper;
	public array array => _array.Wrapper;
	public type type => _type.Wrapper;
	public callee callee => _callee.Wrapper;
	public dummy dummy => _dummy.Wrapper;
	public collectgarbage collectgarbage => _collectgarbage.Wrapper;
	public resurrectunreachable resurrectunreachable => _resurrectunreachable.Wrapper;
	public CMD_GET_AND CMD_GET_AND => _CMD_GET_AND.Wrapper;
	public CMD_GET_OR CMD_GET_OR => _CMD_GET_OR.Wrapper;
	public CMD_GET_XOR CMD_GET_XOR => _CMD_GET_XOR.Wrapper;
	public CMD_GET_NOT CMD_GET_NOT => _CMD_GET_NOT.Wrapper;
	public CMD_GET_L_SHIFT CMD_GET_L_SHIFT => _CMD_GET_L_SHIFT.Wrapper;
	public CMD_GET_R_SHIFT CMD_GET_R_SHIFT => _CMD_GET_R_SHIFT.Wrapper;
	public CMD_ADD CMD_ADD => _CMD_ADD.Wrapper;
	public CMD_SUB CMD_SUB => _CMD_SUB.Wrapper;
	public CMD_MUL CMD_MUL => _CMD_MUL.Wrapper;
	public CMD_DIV CMD_DIV => _CMD_DIV.Wrapper;
	public CMD_SURPLUS CMD_SURPLUS => _CMD_SURPLUS.Wrapper;
	public CMD_SIN CMD_SIN => _CMD_SIN.Wrapper;
	public CMD_COS CMD_COS => _CMD_COS.Wrapper;
	public CMD_TAN CMD_TAN => _CMD_TAN.Wrapper;
	public CMD_ASIN CMD_ASIN => _CMD_ASIN.Wrapper;
	public CMD_ACOS CMD_ACOS => _CMD_ACOS.Wrapper;
	public CMD_ATAN CMD_ATAN => _CMD_ATAN.Wrapper;
	public CMD_ATAN2 CMD_ATAN2 => _CMD_ATAN2.Wrapper;
	public CMD_SQRT CMD_SQRT => _CMD_SQRT.Wrapper;
	public CMD_GET_MAX CMD_GET_MAX => _CMD_GET_MAX.Wrapper;
	public CMD_GET_MIN CMD_GET_MIN => _CMD_GET_MIN.Wrapper;
	public XU_AAAAA XU_AAAAA => _XU_AAAAA.Wrapper;
	public XU_BBBBB XU_BBBBB => _XU_BBBBB.Wrapper;
	public Daily_Process Daily_Process => _Daily_Process.Wrapper;
	public GetRandomRate GetRandomRate => _GetRandomRate.Wrapper;
	public Sqrt Sqrt => _Sqrt.Wrapper;
	public ScriptSkipStopMark ScriptSkipStopMark => _ScriptSkipStopMark.Wrapper;
	public BitGet BitGet => _BitGet.Wrapper;
	public BitOn BitOn => _BitOn.Wrapper;
	public BitOff BitOff => _BitOff.Wrapper;
	public CounterGet CounterGet => _CounterGet.Wrapper;
	public CounterSet CounterSet => _CounterSet.Wrapper;
	public GetDifficulty GetDifficulty => _GetDifficulty.Wrapper;
	public TravelersVoiceAddValueFromRewardID TravelersVoiceAddValueFromRewardID => _TravelersVoiceAddValueFromRewardID.Wrapper;
	public TravelersVoiceAddValue TravelersVoiceAddValue => _TravelersVoiceAddValue.Wrapper;
	public TravelersVoicePartySendRequest TravelersVoicePartySendRequest => _TravelersVoicePartySendRequest.Wrapper;
	public GetDeltaTime GetDeltaTime => _GetDeltaTime.Wrapper;
	public GetElapsedTime GetElapsedTime => _GetElapsedTime.Wrapper;
	public IsTimeProgressUI IsTimeProgressUI => _IsTimeProgressUI.Wrapper;
	public GameStartInitialize GameStartInitialize => _GameStartInitialize.Wrapper;
	public GetMoney GetMoney => _GetMoney.Wrapper;
	public SetMoney SetMoney => _SetMoney.Wrapper;
	public AddMoney AddMoney => _AddMoney.Wrapper;
	public SetMag SetMag => _SetMag.Wrapper;
	public AddMag AddMag => _AddMag.Wrapper;
	public OpenMoneyUI OpenMoneyUI => _OpenMoneyUI.Wrapper;
	public AddMoneyUI AddMoneyUI => _AddMoneyUI.Wrapper;
	public CloseMoneyUI CloseMoneyUI => _CloseMoneyUI.Wrapper;
	public IsAddMoneyUIClosed IsAddMoneyUIClosed => _IsAddMoneyUIClosed.Wrapper;
	public OpenMagUI OpenMagUI => _OpenMagUI.Wrapper;
	public AddMagUI AddMagUI => _AddMagUI.Wrapper;
	public CloseMagUI CloseMagUI => _CloseMagUI.Wrapper;
	public IsAddMagUIClosed IsAddMagUIClosed => _IsAddMagUIClosed.Wrapper;
	public OpenEventAddedMagUI OpenEventAddedMagUI => _OpenEventAddedMagUI.Wrapper;
	public IsEventAddedMagUIClosed IsEventAddedMagUIClosed => _IsEventAddedMagUIClosed.Wrapper;
	public SetBagItem SetBagItem => _SetBagItem.Wrapper;
	public AddBagItem AddBagItem => _AddBagItem.Wrapper;
	public GetBagItem GetBagItem => _GetBagItem.Wrapper;
	public HasItemType HasItemType => _HasItemType.Wrapper;
	public JoinParty JoinParty => _JoinParty.Wrapper;
	public JoinPartyNoRecovery JoinPartyNoRecovery => _JoinPartyNoRecovery.Wrapper;
	public LeaveParty LeaveParty => _LeaveParty.Wrapper;
	public SetPartyHeroOnly SetPartyHeroOnly => _SetPartyHeroOnly.Wrapper;
	public SetPartyGameClear SetPartyGameClear => _SetPartyGameClear.Wrapper;
	public InitialClearParty InitialClearParty => _InitialClearParty.Wrapper;
	public IsInParty IsInParty => _IsInParty.Wrapper;
	public JoinPartyAsGuest JoinPartyAsGuest => _JoinPartyAsGuest.Wrapper;
	public SetBattleParty SetBattleParty => _SetBattleParty.Wrapper;
	public GetBattleParty GetBattleParty => _GetBattleParty.Wrapper;
	public SetBattlePartyFormation SetBattlePartyFormation => _SetBattlePartyFormation.Wrapper;
	public SetPartyMemberAwakened SetPartyMemberAwakened => _SetPartyMemberAwakened.Wrapper;
	public AcquireClass AcquireClass => _AcquireClass.Wrapper;
	public CanAcquireClass CanAcquireClass => _CanAcquireClass.Wrapper;
	public LearnRoyalClassOnPreviousRound LearnRoyalClassOnPreviousRound => _LearnRoyalClassOnPreviousRound.Wrapper;
	public GetClassLevel GetClassLevel => _GetClassLevel.Wrapper;
	public GetPartyLearnedClassNum GetPartyLearnedClassNum => _GetPartyLearnedClassNum.Wrapper;
	public SetHeroDefaultParam SetHeroDefaultParam => _SetHeroDefaultParam.Wrapper;
	public IsRoundPlay IsRoundPlay => _IsRoundPlay.Wrapper;
	public PartyPreset PartyPreset => _PartyPreset.Wrapper;
	public GetLearnedClassRateRewardProgress GetLearnedClassRateRewardProgress => _GetLearnedClassRateRewardProgress.Wrapper;
	public GetLearnedClassRateRewardItemRecievedProgress GetLearnedClassRateRewardItemRecievedProgress => _GetLearnedClassRateRewardItemRecievedProgress.Wrapper;
	public GetLearnedClassRateRewardItemID GetLearnedClassRateRewardItemID => _GetLearnedClassRateRewardItemID.Wrapper;
	public GetLearnedClassRateRewardItemNum GetLearnedClassRateRewardItemNum => _GetLearnedClassRateRewardItemNum.Wrapper;
	public SetLearnedClassRateRewardItemRecieved SetLearnedClassRateRewardItemRecieved => _SetLearnedClassRateRewardItemRecieved.Wrapper;
	public PadIsTrigOK PadIsTrigOK => _PadIsTrigOK.Wrapper;
	public PadIsTrigOKCancel PadIsTrigOKCancel => _PadIsTrigOKCancel.Wrapper;
	public PadGet PadGet => _PadGet.Wrapper;
	public PadRumbleStart PadRumbleStart => _PadRumbleStart.Wrapper;
	public PadRumbleStop PadRumbleStop => _PadRumbleStop.Wrapper;
	public DebugPadRumblePresetRuntimeTest DebugPadRumblePresetRuntimeTest => _DebugPadRumblePresetRuntimeTest.Wrapper;
	public SndPlayBgm SndPlayBgm => _SndPlayBgm.Wrapper;
	public SndStopBgm SndStopBgm => _SndStopBgm.Wrapper;
	public SndFadeOutBgm SndFadeOutBgm => _SndFadeOutBgm.Wrapper;
	public SndPlaySystemSe SndPlaySystemSe => _SndPlaySystemSe.Wrapper;
	public SndPlaySystemSeWithPos SndPlaySystemSeWithPos => _SndPlaySystemSeWithPos.Wrapper;
	public SndPlaySystemSeStr SndPlaySystemSeStr => _SndPlaySystemSeStr.Wrapper;
	public SndPlaySystemSeStrWithPos SndPlaySystemSeStrWithPos => _SndPlaySystemSeStrWithPos.Wrapper;
	public SndStopSystemSe SndStopSystemSe => _SndStopSystemSe.Wrapper;
	public SndStopAll SndStopAll => _SndStopAll.Wrapper;
	public SndSetBgmByMapID SndSetBgmByMapID => _SndSetBgmByMapID.Wrapper;
	public SndSetEnvByMapID SndSetEnvByMapID => _SndSetEnvByMapID.Wrapper;
	public SndPlayEnv SndPlayEnv => _SndPlayEnv.Wrapper;
	public SndStopEnv SndStopEnv => _SndStopEnv.Wrapper;
	public SndPlayPartVoice SndPlayPartVoice => _SndPlayPartVoice.Wrapper;
	public CameraShakeAnimStart CameraShakeAnimStart => _CameraShakeAnimStart.Wrapper;
	public CameraShakeAnimStop CameraShakeAnimStop => _CameraShakeAnimStop.Wrapper;
	public CameraShakeAnimSetScale CameraShakeAnimSetScale => _CameraShakeAnimSetScale.Wrapper;
	public CameraShakeAnimSetSpeed CameraShakeAnimSetSpeed => _CameraShakeAnimSetSpeed.Wrapper;
	public CameraShakeProgramStart CameraShakeProgramStart => _CameraShakeProgramStart.Wrapper;
	public CameraShakeProgramStop CameraShakeProgramStop => _CameraShakeProgramStop.Wrapper;
	public SetSchedulerAutoProceedTime SetSchedulerAutoProceedTime => _SetSchedulerAutoProceedTime.Wrapper;
	public GetCalendarDay GetCalendarDay => _GetCalendarDay.Wrapper;
	public SetCalendarDay SetCalendarDay => _SetCalendarDay.Wrapper;
	public GetYear GetYear => _GetYear.Wrapper;
	public SetYear SetYear => _SetYear.Wrapper;
	public GetMonth GetMonth => _GetMonth.Wrapper;
	public SetMonth SetMonth => _SetMonth.Wrapper;
	public GetDay GetDay => _GetDay.Wrapper;
	public SetDay SetDay => _SetDay.Wrapper;
	public GetCalendarDow GetCalendarDow => _GetCalendarDow.Wrapper;
	public SetCalendarDow SetCalendarDow => _SetCalendarDow.Wrapper;
	public GetCalendarTime GetCalendarTime => _GetCalendarTime.Wrapper;
	public SetCalendarTime SetCalendarTime => _SetCalendarTime.Wrapper;
	public IsCalendarHoliday IsCalendarHoliday => _IsCalendarHoliday.Wrapper;
	public GetCalendarTemperature GetCalendarTemperature => _GetCalendarTemperature.Wrapper;
	public GetCalendarWeather GetCalendarWeather => _GetCalendarWeather.Wrapper;
	public GetCalendarWeatherByPoint GetCalendarWeatherByPoint => _GetCalendarWeatherByPoint.Wrapper;
	public SetCalendarWeather SetCalendarWeather => _SetCalendarWeather.Wrapper;
	public GetCalendarGFakeWeather GetCalendarGFakeWeather => _GetCalendarGFakeWeather.Wrapper;
	public SetCalendarGFakeWeather SetCalendarGFakeWeather => _SetCalendarGFakeWeather.Wrapper;
	public ClearCalendarGFakeWeather ClearCalendarGFakeWeather => _ClearCalendarGFakeWeather.Wrapper;
	public GetCalendarOverwriteWeatherEndTotalDay GetCalendarOverwriteWeatherEndTotalDay => _GetCalendarOverwriteWeatherEndTotalDay.Wrapper;
	public IsCalendarOverwriteWeatherEnable IsCalendarOverwriteWeatherEnable => _IsCalendarOverwriteWeatherEnable.Wrapper;
	public SetCalendarOverwriteWeather SetCalendarOverwriteWeather => _SetCalendarOverwriteWeather.Wrapper;
	public ClearCalendarOverwriteWeather ClearCalendarOverwriteWeather => _ClearCalendarOverwriteWeather.Wrapper;
	public IsCalendarBadWeather IsCalendarBadWeather => _IsCalendarBadWeather.Wrapper;
	public GetCalendarRegion GetCalendarRegion => _GetCalendarRegion.Wrapper;
	public SetCalendarRegion SetCalendarRegion => _SetCalendarRegion.Wrapper;
	public GetWwbgID GetWwbgID => _GetWwbgID.Wrapper;
	public SetWwbgID SetWwbgID => _SetWwbgID.Wrapper;
	public MsgOpen MsgOpen => _MsgOpen.Wrapper;
	public MsgGetHandleID MsgGetHandleID => _MsgGetHandleID.Wrapper;
	public MsgCheckOpened MsgCheckOpened => _MsgCheckOpened.Wrapper;
	public MsgRequest MsgRequest => _MsgRequest.Wrapper;
	public MsgRequestID MsgRequestID => _MsgRequestID.Wrapper;
	public MsgRequestAccessSpot MsgRequestAccessSpot => _MsgRequestAccessSpot.Wrapper;
	public MsgRequestAuto MsgRequestAuto => _MsgRequestAuto.Wrapper;
	public MsgRequestIDAuto MsgRequestIDAuto => _MsgRequestIDAuto.Wrapper;
	public MsgRequestSystemMessage MsgRequestSystemMessage => _MsgRequestSystemMessage.Wrapper;
	public MsgRequestSystemMessageID MsgRequestSystemMessageID => _MsgRequestSystemMessageID.Wrapper;
	public MsgRequestSubtitles MsgRequestSubtitles => _MsgRequestSubtitles.Wrapper;
	public MsgRequestSubtitlesAuto MsgRequestSubtitlesAuto => _MsgRequestSubtitlesAuto.Wrapper;
	public MsgRequestNarration MsgRequestNarration => _MsgRequestNarration.Wrapper;
	public MsgRequestSelect MsgRequestSelect => _MsgRequestSelect.Wrapper;
	public MsgRequestSelect_CancelExit MsgRequestSelect_CancelExit => _MsgRequestSelect_CancelExit.Wrapper;
	public MsgRequestSelectID MsgRequestSelectID => _MsgRequestSelectID.Wrapper;
	public MsgRequestSystemMessageSelect MsgRequestSystemMessageSelect => _MsgRequestSystemMessageSelect.Wrapper;
	public MsgRequestSystemMessageSelectID MsgRequestSystemMessageSelectID => _MsgRequestSystemMessageSelectID.Wrapper;
	public MsgRequestSelect_Ex MsgRequestSelect_Ex => _MsgRequestSelect_Ex.Wrapper;
	public MsgRequestSelectID_Ex MsgRequestSelectID_Ex => _MsgRequestSelectID_Ex.Wrapper;
	public MsgRequestSelectAccessSpot MsgRequestSelectAccessSpot => _MsgRequestSelectAccessSpot.Wrapper;
	public MsgRequestSelectAccessSpot_Ex MsgRequestSelectAccessSpot_Ex => _MsgRequestSelectAccessSpot_Ex.Wrapper;
	public MsgRequestSystemMessageSelect_Ex MsgRequestSystemMessageSelect_Ex => _MsgRequestSystemMessageSelect_Ex.Wrapper;
	public MsgRequestSystemMessageSelectID_Ex MsgRequestSystemMessageSelectID_Ex => _MsgRequestSystemMessageSelectID_Ex.Wrapper;
	public MsgRequestSelect_Shop MsgRequestSelect_Shop => _MsgRequestSelect_Shop.Wrapper;
	public MsgEnd_KeepVoice MsgEnd_KeepVoice => _MsgEnd_KeepVoice.Wrapper;
	public MsgCheckEnd MsgCheckEnd => _MsgCheckEnd.Wrapper;
	public MsgCheckWindowClosed MsgCheckWindowClosed => _MsgCheckWindowClosed.Wrapper;
	public MsgIsSelectWindowOpened MsgIsSelectWindowOpened => _MsgIsSelectWindowOpened.Wrapper;
	public MsgGetSelectedID MsgGetSelectedID => _MsgGetSelectedID.Wrapper;
	public MsgGetSelectNum MsgGetSelectNum => _MsgGetSelectNum.Wrapper;
	public MsgCanClose MsgCanClose => _MsgCanClose.Wrapper;
	public MsgClose MsgClose => _MsgClose.Wrapper;
	public MsgBacklogSeparator MsgBacklogSeparator => _MsgBacklogSeparator.Wrapper;
	public MsgGreetingRequest MsgGreetingRequest => _MsgGreetingRequest.Wrapper;
	public MsgGreetingRequestID MsgGreetingRequestID => _MsgGreetingRequestID.Wrapper;
	public MsgGreetingRequest_Option MsgGreetingRequest_Option => _MsgGreetingRequest_Option.Wrapper;
	public MsgGreetingRequestID_Option MsgGreetingRequestID_Option => _MsgGreetingRequestID_Option.Wrapper;
	public MsgGreetingClose MsgGreetingClose => _MsgGreetingClose.Wrapper;
	public MsgGreetingCheckEnd MsgGreetingCheckEnd => _MsgGreetingCheckEnd.Wrapper;
	public MsgSetVariable MsgSetVariable => _MsgSetVariable.Wrapper;
	public MsgSetVariableINT MsgSetVariableINT => _MsgSetVariableINT.Wrapper;
	public MsgSetVariableMapName MsgSetVariableMapName => _MsgSetVariableMapName.Wrapper;
	public MsgClearVariable MsgClearVariable => _MsgClearVariable.Wrapper;
	public MsgSetSelectMaskID MsgSetSelectMaskID => _MsgSetSelectMaskID.Wrapper;
	public MsgSetSelectMaskLabel MsgSetSelectMaskLabel => _MsgSetSelectMaskLabel.Wrapper;
	public MsgSetSelectMask MsgSetSelectMask => _MsgSetSelectMask.Wrapper;
	public MsgSystemConfirm MsgSystemConfirm => _MsgSystemConfirm.Wrapper;
	public MsgSystemConfirmCheckEnd MsgSystemConfirmCheckEnd => _MsgSystemConfirmCheckEnd.Wrapper;
	public MsgSystemConfirmGetSelectedID MsgSystemConfirmGetSelectedID => _MsgSystemConfirmGetSelectedID.Wrapper;
	public MsgReportOpen MsgReportOpen => _MsgReportOpen.Wrapper;
	public MsgReportOpenID MsgReportOpenID => _MsgReportOpenID.Wrapper;
	public MsgReportOpenType MsgReportOpenType => _MsgReportOpenType.Wrapper;
	public MsgReportOpenTypeID MsgReportOpenTypeID => _MsgReportOpenTypeID.Wrapper;
	public MsgReportOpenEx MsgReportOpenEx => _MsgReportOpenEx.Wrapper;
	public MsgReportOpenIDEx MsgReportOpenIDEx => _MsgReportOpenIDEx.Wrapper;
	public MsgReportClearRequested MsgReportClearRequested => _MsgReportClearRequested.Wrapper;
	public MsgBustupSetFace MsgBustupSetFace => _MsgBustupSetFace.Wrapper;
	public MsgBustupChangeFace MsgBustupChangeFace => _MsgBustupChangeFace.Wrapper;
	public MsgBustupSetOFF MsgBustupSetOFF => _MsgBustupSetOFF.Wrapper;
	public MsgBustupSetCostume MsgBustupSetCostume => _MsgBustupSetCostume.Wrapper;
	public TutorialWindowStart TutorialWindowStart => _TutorialWindowStart.Wrapper;
	public IsTutorialWindowReady IsTutorialWindowReady => _IsTutorialWindowReady.Wrapper;
	public TutorialWindowOpen TutorialWindowOpen => _TutorialWindowOpen.Wrapper;
	public TutorialWindowIsEnd TutorialWindowIsEnd => _TutorialWindowIsEnd.Wrapper;
	public TutorialWindowEnd TutorialWindowEnd => _TutorialWindowEnd.Wrapper;
	public EventUIBegin EventUIBegin => _EventUIBegin.Wrapper;
	public EventUIEnd EventUIEnd => _EventUIEnd.Wrapper;
	public EventMessageBgClose EventMessageBgClose => _EventMessageBgClose.Wrapper;
	public WipeStart WipeStart => _WipeStart.Wrapper;
	public IsWipeStarted IsWipeStarted => _IsWipeStarted.Wrapper;
	public WipeIsEnd WipeIsEnd => _WipeIsEnd.Wrapper;
	public WipePreRead WipePreRead => _WipePreRead.Wrapper;
	public EventWipeStartOut EventWipeStartOut => _EventWipeStartOut.Wrapper;
	public EventWipeStartIn EventWipeStartIn => _EventWipeStartIn.Wrapper;
	public EventWipeIsOutEnd EventWipeIsOutEnd => _EventWipeIsOutEnd.Wrapper;
	public EventWipeIsOutPlayEnd EventWipeIsOutPlayEnd => _EventWipeIsOutPlayEnd.Wrapper;
	public EventWipeIsInEnd EventWipeIsInEnd => _EventWipeIsInEnd.Wrapper;
	public WipeAreaChangeStart WipeAreaChangeStart => _WipeAreaChangeStart.Wrapper;
	public WipeAreaChangeStartBoat WipeAreaChangeStartBoat => _WipeAreaChangeStartBoat.Wrapper;
	public WipeAreaChangeOutIsEnd WipeAreaChangeOutIsEnd => _WipeAreaChangeOutIsEnd.Wrapper;
	public WipeAreaChangeInIsEnd WipeAreaChangeInIsEnd => _WipeAreaChangeInIsEnd.Wrapper;
	public WipeAreaChangeInStart WipeAreaChangeInStart => _WipeAreaChangeInStart.Wrapper;
	public WipeIsNeedToWaitOut WipeIsNeedToWaitOut => _WipeIsNeedToWaitOut.Wrapper;
	public FadeIn FadeIn => _FadeIn.Wrapper;
	public FadeOut FadeOut => _FadeOut.Wrapper;
	public FadeIsEnd FadeIsEnd => _FadeIsEnd.Wrapper;
	public AnimFadeOut AnimFadeOut => _AnimFadeOut.Wrapper;
	public EventFadeSetPartsBehavior EventFadeSetPartsBehavior => _EventFadeSetPartsBehavior.Wrapper;
	public EventFadeOut EventFadeOut => _EventFadeOut.Wrapper;
	public EventFadeIn EventFadeIn => _EventFadeIn.Wrapper;
	public FadeOut_Plain FadeOut_Plain => _FadeOut_Plain.Wrapper;
	public EventFadeOut_Plain EventFadeOut_Plain => _EventFadeOut_Plain.Wrapper;
	public FadeWipeIsEndOut FadeWipeIsEndOut => _FadeWipeIsEndOut.Wrapper;
	public ResrcReloadClothDataByCurrentSequence ResrcReloadClothDataByCurrentSequence => _ResrcReloadClothDataByCurrentSequence.Wrapper;
	public ResrcClothStatSetting ResrcClothStatSetting => _ResrcClothStatSetting.Wrapper;
	public ResrcGetClothStatSetting ResrcGetClothStatSetting => _ResrcGetClothStatSetting.Wrapper;
	public ResrcSearchFieldCharModel ResrcSearchFieldCharModel => _ResrcSearchFieldCharModel.Wrapper;
	public ResrcSearchUniqID ResrcSearchUniqID => _ResrcSearchUniqID.Wrapper;
	public ResrcGetGroupIdNum ResrcGetGroupIdNum => _ResrcGetGroupIdNum.Wrapper;
	public ResrcGetGroupId ResrcGetGroupId => _ResrcGetGroupId.Wrapper;
	public ResrcGetFaceObjectNum ResrcGetFaceObjectNum => _ResrcGetFaceObjectNum.Wrapper;
	public ResrcGetFaceObject ResrcGetFaceObject => _ResrcGetFaceObject.Wrapper;
	public ResrcRead ResrcRead => _ResrcRead.Wrapper;
	public ResrcReadWithUid ResrcReadWithUid => _ResrcReadWithUid.Wrapper;
	public ResrcRead_ATypeModel ResrcRead_ATypeModel => _ResrcRead_ATypeModel.Wrapper;
	public ResrcReadBaseAnimation ResrcReadBaseAnimation => _ResrcReadBaseAnimation.Wrapper;
	public ResrcReadEventBaseAnimation ResrcReadEventBaseAnimation => _ResrcReadEventBaseAnimation.Wrapper;
	public ResrcSync ResrcSync => _ResrcSync.Wrapper;
	public ResrcDestroy ResrcDestroy => _ResrcDestroy.Wrapper;
	public ResrcBgCacheDestroy ResrcBgCacheDestroy => _ResrcBgCacheDestroy.Wrapper;
	public ResrcAtachScene ResrcAtachScene => _ResrcAtachScene.Wrapper;
	public ResrcDetachScene ResrcDetachScene => _ResrcDetachScene.Wrapper;
	public ResrcCameraSet ResrcCameraSet => _ResrcCameraSet.Wrapper;
	public ResrcCameraReset ResrcCameraReset => _ResrcCameraReset.Wrapper;
	public ResrcSetVisible ResrcSetVisible => _ResrcSetVisible.Wrapper;
	public ResrcGetVisible ResrcGetVisible => _ResrcGetVisible.Wrapper;
	public ResrcSetVisibleGID ResrcSetVisibleGID => _ResrcSetVisibleGID.Wrapper;
	public ResrcGetVisibleGID ResrcGetVisibleGID => _ResrcGetVisibleGID.Wrapper;
	public ResrcSetTranslate ResrcSetTranslate => _ResrcSetTranslate.Wrapper;
	public ResrcSetRotate ResrcSetRotate => _ResrcSetRotate.Wrapper;
	public ResrcSetTranslateToResrc ResrcSetTranslateToResrc => _ResrcSetTranslateToResrc.Wrapper;
	public ResrcSetScale ResrcSetScale => _ResrcSetScale.Wrapper;
	public ResrcAdjustGpPos ResrcAdjustGpPos => _ResrcAdjustGpPos.Wrapper;
	public ResrcSetAnim ResrcSetAnim => _ResrcSetAnim.Wrapper;
	public ResrcSetAnimNext ResrcSetAnimNext => _ResrcSetAnimNext.Wrapper;
	public ResrcSetAnimWithoutSE ResrcSetAnimWithoutSE => _ResrcSetAnimWithoutSE.Wrapper;
	public ResrcSyncAnim ResrcSyncAnim => _ResrcSyncAnim.Wrapper;
	public ResrcSetAnimSpeed ResrcSetAnimSpeed => _ResrcSetAnimSpeed.Wrapper;
	public ResrcSetAnimSpeedNext ResrcSetAnimSpeedNext => _ResrcSetAnimSpeedNext.Wrapper;
	public ResrcSetAnimCurrentTime ResrcSetAnimCurrentTime => _ResrcSetAnimCurrentTime.Wrapper;
	public ResrcGetAnimDuration ResrcGetAnimDuration => _ResrcGetAnimDuration.Wrapper;
	public ResrcAddColObject ResrcAddColObject => _ResrcAddColObject.Wrapper;
	public ResrcRebuildColObject ResrcRebuildColObject => _ResrcRebuildColObject.Wrapper;
	public ResrcIsContainLayoutName ResrcIsContainLayoutName => _ResrcIsContainLayoutName.Wrapper;
	public PostLoadSearchByUidInObj PostLoadSearchByUidInObj => _PostLoadSearchByUidInObj.Wrapper;
	public PostLoadSearchByUidInDoor PostLoadSearchByUidInDoor => _PostLoadSearchByUidInDoor.Wrapper;
	public PostLoadGetGidNum PostLoadGetGidNum => _PostLoadGetGidNum.Wrapper;
	public PostLoadGetGidByIndex PostLoadGetGidByIndex => _PostLoadGetGidByIndex.Wrapper;
	public PostLoadGetEffectNum PostLoadGetEffectNum => _PostLoadGetEffectNum.Wrapper;
	public PostLoadGetEffectByIndex PostLoadGetEffectByIndex => _PostLoadGetEffectByIndex.Wrapper;
	public PostLoadConnectBgMng PostLoadConnectBgMng => _PostLoadConnectBgMng.Wrapper;
	public PostLoadAdjustGpPos PostLoadAdjustGpPos => _PostLoadAdjustGpPos.Wrapper;
	public PostLoadAddColObject PostLoadAddColObject => _PostLoadAddColObject.Wrapper;
	public PostLoadSetVisibleByGidInObj PostLoadSetVisibleByGidInObj => _PostLoadSetVisibleByGidInObj.Wrapper;
	public PostLoadSetEnableBgData PostLoadSetEnableBgData => _PostLoadSetEnableBgData.Wrapper;
	public GetPlayerUnitID GetPlayerUnitID => _GetPlayerUnitID.Wrapper;
	public UnitGetLevel UnitGetLevel => _UnitGetLevel.Wrapper;
	public UnitGetMaxHP UnitGetMaxHP => _UnitGetMaxHP.Wrapper;
	public UnitGetParam UnitGetParam => _UnitGetParam.Wrapper;
	public UnitGetEquipWeaponParam UnitGetEquipWeaponParam => _UnitGetEquipWeaponParam.Wrapper;
	public UnitGetEquipArmorParam UnitGetEquipArmorParam => _UnitGetEquipArmorParam.Wrapper;
	public UnitGetAffinity UnitGetAffinity => _UnitGetAffinity.Wrapper;
	public UnitGetAffinityType UnitGetAffinityType => _UnitGetAffinityType.Wrapper;
	public UnitFullRecoveryAll UnitFullRecoveryAll => _UnitFullRecoveryAll.Wrapper;
	public UnitHPRecoveryAll UnitHPRecoveryAll => _UnitHPRecoveryAll.Wrapper;
	public UnitMPRecoveryAll UnitMPRecoveryAll => _UnitMPRecoveryAll.Wrapper;
	public UnitBadStatusRecoveryAll UnitBadStatusRecoveryAll => _UnitBadStatusRecoveryAll.Wrapper;
	public CharaAddMaxHP CharaAddMaxHP => _CharaAddMaxHP.Wrapper;
	public CharaAddHP CharaAddHP => _CharaAddHP.Wrapper;
	public CharaRecoveryHP CharaRecoveryHP => _CharaRecoveryHP.Wrapper;
	public CharaAddMaxMP CharaAddMaxMP => _CharaAddMaxMP.Wrapper;
	public CharaRecoveryMP CharaRecoveryMP => _CharaRecoveryMP.Wrapper;
	public CharaRecoveryBadStatus CharaRecoveryBadStatus => _CharaRecoveryBadStatus.Wrapper;
	public CharaGetClassID CharaGetClassID => _CharaGetClassID.Wrapper;
	public CharaSetClass CharaSetClass => _CharaSetClass.Wrapper;
	public CharaAddBaseParam CharaAddBaseParam => _CharaAddBaseParam.Wrapper;
	public CharaSetEquip CharaSetEquip => _CharaSetEquip.Wrapper;
	public CharaGetEquip CharaGetEquip => _CharaGetEquip.Wrapper;
	public AddNotCompanionCharaEquip AddNotCompanionCharaEquip => _AddNotCompanionCharaEquip.Wrapper;
	public AnalyzeOpenAttribute AnalyzeOpenAttribute => _AnalyzeOpenAttribute.Wrapper;
	public FldVoicePackOpen FldVoicePackOpen => _FldVoicePackOpen.Wrapper;
	public FldVoicePackIsEndOpen FldVoicePackIsEndOpen => _FldVoicePackIsEndOpen.Wrapper;
	public FldVoicePackSetActive FldVoicePackSetActive => _FldVoicePackSetActive.Wrapper;
	public FldVoicePackClose FldVoicePackClose => _FldVoicePackClose.Wrapper;
	public FldAccessSpotInitEveryDay FldAccessSpotInitEveryDay => _FldAccessSpotInitEveryDay.Wrapper;
	public FldSpecialDayGet FldSpecialDayGet => _FldSpecialDayGet.Wrapper;
	public FldEventRewardSet_VariableBufferByUpPcParam FldEventRewardSet_VariableBufferByUpPcParam => _FldEventRewardSet_VariableBufferByUpPcParam.Wrapper;
	public FldEventRewardGet_TravelersVoiceID FldEventRewardGet_TravelersVoiceID => _FldEventRewardGet_TravelersVoiceID.Wrapper;
	public FldEventRewardGet_PcParam FldEventRewardGet_PcParam => _FldEventRewardGet_PcParam.Wrapper;
	public FldEventRewardGet_ItemID FldEventRewardGet_ItemID => _FldEventRewardGet_ItemID.Wrapper;
	public FldEventRewardGet_ItemNum FldEventRewardGet_ItemNum => _FldEventRewardGet_ItemNum.Wrapper;
	public FldEventRewardGet_Money FldEventRewardGet_Money => _FldEventRewardGet_Money.Wrapper;
	public FldEventRewardGet_Mag FldEventRewardGet_Mag => _FldEventRewardGet_Mag.Wrapper;
	public FldEventRewardGet_CharaID FldEventRewardGet_CharaID => _FldEventRewardGet_CharaID.Wrapper;
	public FldEventRewardGet_Parameter FldEventRewardGet_Parameter => _FldEventRewardGet_Parameter.Wrapper;
	public FldEventRewardGet_MaxHP FldEventRewardGet_MaxHP => _FldEventRewardGet_MaxHP.Wrapper;
	public FldEventRewardGet_MaxMP FldEventRewardGet_MaxMP => _FldEventRewardGet_MaxMP.Wrapper;
	public FldEventRewardGet_ATCategoryID FldEventRewardGet_ATCategoryID => _FldEventRewardGet_ATCategoryID.Wrapper;
	public FldEventRewardGet_ATCategoryExp FldEventRewardGet_ATCategoryExp => _FldEventRewardGet_ATCategoryExp.Wrapper;
	public FldEventRewardGet_QuestID FldEventRewardGet_QuestID => _FldEventRewardGet_QuestID.Wrapper;
	public FldGetCurrentMapID FldGetCurrentMapID => _FldGetCurrentMapID.Wrapper;
	public FldGetPreMapID FldGetPreMapID => _FldGetPreMapID.Wrapper;
	public FldSetMapEntered FldSetMapEntered => _FldSetMapEntered.Wrapper;
	public FldGetCurrentMapZoneID FldGetCurrentMapZoneID => _FldGetCurrentMapZoneID.Wrapper;
	public FldDoorSaveDataClear FldDoorSaveDataClear => _FldDoorSaveDataClear.Wrapper;
	public FldGetSeason FldGetSeason => _FldGetSeason.Wrapper;
	public FldCameraIsEndImmidiateChange FldCameraIsEndImmidiateChange => _FldCameraIsEndImmidiateChange.Wrapper;
	public FldTopUIClose FldTopUIClose => _FldTopUIClose.Wrapper;
	public FldTopUIIsClosed FldTopUIIsClosed => _FldTopUIIsClosed.Wrapper;
	public FldPreKeyFreeUIOpen FldPreKeyFreeUIOpen => _FldPreKeyFreeUIOpen.Wrapper;
	public FldPreKeyFreeUIClose FldPreKeyFreeUIClose => _FldPreKeyFreeUIClose.Wrapper;
	public FldMapGetCategory FldMapGetCategory => _FldMapGetCategory.Wrapper;
	public FldMapGetRegion FldMapGetRegion => _FldMapGetRegion.Wrapper;
	public FldMapGetGenericMapType FldMapGetGenericMapType => _FldMapGetGenericMapType.Wrapper;
	public FldScriptFuncGetArg_Int FldScriptFuncGetArg_Int => _FldScriptFuncGetArg_Int.Wrapper;
	public FldScriptFuncGetArg_Float FldScriptFuncGetArg_Float => _FldScriptFuncGetArg_Float.Wrapper;
	public FldScriptFuncGetArg_Bool FldScriptFuncGetArg_Bool => _FldScriptFuncGetArg_Bool.Wrapper;
	public FldScriptFuncSetResult_Int FldScriptFuncSetResult_Int => _FldScriptFuncSetResult_Int.Wrapper;
	public FldScriptFuncSetResult_Float FldScriptFuncSetResult_Float => _FldScriptFuncSetResult_Float.Wrapper;
	public FldScriptFuncSetResult_Bool FldScriptFuncSetResult_Bool => _FldScriptFuncSetResult_Bool.Wrapper;
	public FldMorningSetStatusIndex FldMorningSetStatusIndex => _FldMorningSetStatusIndex.Wrapper;
	public FldDinnerSetStatusIndex FldDinnerSetStatusIndex => _FldDinnerSetStatusIndex.Wrapper;
	public FldTravelGetZoneIDByMapID FldTravelGetZoneIDByMapID => _FldTravelGetZoneIDByMapID.Wrapper;
	public FldTravelSetMoveType FldTravelSetMoveType => _FldTravelSetMoveType.Wrapper;
	public FldTravelGetMoveType FldTravelGetMoveType => _FldTravelGetMoveType.Wrapper;
	public FldTravelIsCarMove FldTravelIsCarMove => _FldTravelIsCarMove.Wrapper;
	public FldTravelGetNowPathID FldTravelGetNowPathID => _FldTravelGetNowPathID.Wrapper;
	public FldTravelGetQuestID FldTravelGetQuestID => _FldTravelGetQuestID.Wrapper;
	public FldTravelGetMsgNum FldTravelGetMsgNum => _FldTravelGetMsgNum.Wrapper;
	public FldTravelMsgRequest FldTravelMsgRequest => _FldTravelMsgRequest.Wrapper;
	public FldTravelIsSeason FldTravelIsSeason => _FldTravelIsSeason.Wrapper;
	public FldTravelIsNeedTimeZoneTransitionDirection FldTravelIsNeedTimeZoneTransitionDirection => _FldTravelIsNeedTimeZoneTransitionDirection.Wrapper;
	public FldTravelResetTimeZoneTransitionExecutionHistory FldTravelResetTimeZoneTransitionExecutionHistory => _FldTravelResetTimeZoneTransitionExecutionHistory.Wrapper;
	public FldCookItemReset FldCookItemReset => _FldCookItemReset.Wrapper;
	public FldPresetCharaArchitype FldPresetCharaArchitype => _FldPresetCharaArchitype.Wrapper;
	public ElectionRankUp_Rival ElectionRankUp_Rival => _ElectionRankUp_Rival.Wrapper;
	public ElectionRankUp_PlaySpot ElectionRankUp_PlaySpot => _ElectionRankUp_PlaySpot.Wrapper;
	public ElectionRankUp_Follower ElectionRankUp_Follower => _ElectionRankUp_Follower.Wrapper;
	public Election_Daily_Process Election_Daily_Process => _Election_Daily_Process.Wrapper;
	public ElectionRankUp_IsEnd ElectionRankUp_IsEnd => _ElectionRankUp_IsEnd.Wrapper;
	public Election_SetRank Election_SetRank => _Election_SetRank.Wrapper;
	public Election_SetRankByFlag Election_SetRankByFlag => _Election_SetRankByFlag.Wrapper;
	public Election_IsHighestRank Election_IsHighestRank => _Election_IsHighestRank.Wrapper;
	public Election_Display_Open Election_Display_Open => _Election_Display_Open.Wrapper;
	public Election_Display_Close Election_Display_Close => _Election_Display_Close.Wrapper;
	public BtlGetEncountIDByPack BtlGetEncountIDByPack => _BtlGetEncountIDByPack.Wrapper;
	public BtlLoadPrereadData BtlLoadPrereadData => _BtlLoadPrereadData.Wrapper;
	public BtlLoadPrereadMultiDataByPack BtlLoadPrereadMultiDataByPack => _BtlLoadPrereadMultiDataByPack.Wrapper;
	public BtlLoadPrereadRandomDataByPack BtlLoadPrereadRandomDataByPack => _BtlLoadPrereadRandomDataByPack.Wrapper;
	public BtlIsLoadedPrereadData BtlIsLoadedPrereadData => _BtlIsLoadedPrereadData.Wrapper;
	public BtlGetResult BtlGetResult => _BtlGetResult.Wrapper;
	public BtlGetElapsedPlayerTurn BtlGetElapsedPlayerTurn => _BtlGetElapsedPlayerTurn.Wrapper;
	public BtlGetGameOverSelectId BtlGetGameOverSelectId => _BtlGetGameOverSelectId.Wrapper;
	public SeqCallField_MapID SeqCallField_MapID => _SeqCallField_MapID.Wrapper;
	public SeqCallField_MapIDByNpcPos SeqCallField_MapIDByNpcPos => _SeqCallField_MapIDByNpcPos.Wrapper;
	public SeqCallField_BgID SeqCallField_BgID => _SeqCallField_BgID.Wrapper;
	public SeqCallField_Eva SeqCallField_Eva => _SeqCallField_Eva.Wrapper;
	public SeqCallField_EvaPlayerPos SeqCallField_EvaPlayerPos => _SeqCallField_EvaPlayerPos.Wrapper;
	public SeqCallField_MapID_DungeonEvent SeqCallField_MapID_DungeonEvent => _SeqCallField_MapID_DungeonEvent.Wrapper;
	public SeqCallField_MapIDByNpcPos_DungeonEvent SeqCallField_MapIDByNpcPos_DungeonEvent => _SeqCallField_MapIDByNpcPos_DungeonEvent.Wrapper;
	public SeqCallField_Eva_DungeonEvent SeqCallField_Eva_DungeonEvent => _SeqCallField_Eva_DungeonEvent.Wrapper;
	public SeqCallField_EvaPlayerPos_DungeonEvent SeqCallField_EvaPlayerPos_DungeonEvent => _SeqCallField_EvaPlayerPos_DungeonEvent.Wrapper;
	public SeqFieldFadeInLockOff SeqFieldFadeInLockOff => _SeqFieldFadeInLockOff.Wrapper;
	public SeqExistFieldEva SeqExistFieldEva => _SeqExistFieldEva.Wrapper;
	public SeqExistField SeqExistField => _SeqExistField.Wrapper;
	public SeqExistFieldByUid SeqExistFieldByUid => _SeqExistFieldByUid.Wrapper;
	public SeqReadyField SeqReadyField => _SeqReadyField.Wrapper;
	public SeqIdleField SeqIdleField => _SeqIdleField.Wrapper;
	public SeqFieldIsCanUseCommand SeqFieldIsCanUseCommand => _SeqFieldIsCanUseCommand.Wrapper;
	public SeqEndWait SeqEndWait => _SeqEndWait.Wrapper;
	public SeqCallTitle SeqCallTitle => _SeqCallTitle.Wrapper;
	public SeqCallCamp SeqCallCamp => _SeqCallCamp.Wrapper;
	public SeqCallEvent SeqCallEvent => _SeqCallEvent.Wrapper;
	public SeqExistEvent SeqExistEvent => _SeqExistEvent.Wrapper;
	public SeqCallModelViewer_1031 SeqCallModelViewer_1031 => _SeqCallModelViewer_1031.Wrapper;
	public SeqCallCalendar SeqCallCalendar => _SeqCallCalendar.Wrapper;
	public SeqCallCalendarMDT SeqCallCalendarMDT => _SeqCallCalendarMDT.Wrapper;
	public SeqExistCalendar SeqExistCalendar => _SeqExistCalendar.Wrapper;
	public SeqCallBattle SeqCallBattle => _SeqCallBattle.Wrapper;
	public SeqCallBattleByPack SeqCallBattleByPack => _SeqCallBattleByPack.Wrapper;
	public SeqExistBattle SeqExistBattle => _SeqExistBattle.Wrapper;
	public SeqCurrentDestroy SeqCurrentDestroy => _SeqCurrentDestroy.Wrapper;
	public SeqCallStartMenu SeqCallStartMenu => _SeqCallStartMenu.Wrapper;
	public SeqSetSoftResetEnable SeqSetSoftResetEnable => _SeqSetSoftResetEnable.Wrapper;
	public NovelStart NovelStart => _NovelStart.Wrapper;
	public NovelIsReady NovelIsReady => _NovelIsReady.Wrapper;
	public NovelEnd NovelEnd => _NovelEnd.Wrapper;
	public NovelIsEnd NovelIsEnd => _NovelIsEnd.Wrapper;
	public WorldMapStart WorldMapStart => _WorldMapStart.Wrapper;
	public WorldMapIsReady WorldMapIsReady => _WorldMapIsReady.Wrapper;
	public WorldMapOpen WorldMapOpen => _WorldMapOpen.Wrapper;
	public WorldMapOpenNowMap WorldMapOpenNowMap => _WorldMapOpenNowMap.Wrapper;
	public WorldMapIsOpened WorldMapIsOpened => _WorldMapIsOpened.Wrapper;
	public WorldMapClose WorldMapClose => _WorldMapClose.Wrapper;
	public WorldMapIsClosed WorldMapIsClosed => _WorldMapIsClosed.Wrapper;
	public WorldMapGetSelected WorldMapGetSelected => _WorldMapGetSelected.Wrapper;
	public WorldMapEnd WorldMapEnd => _WorldMapEnd.Wrapper;
	public MapOpen MapOpen => _MapOpen.Wrapper;
	public MapOpenEx MapOpenEx => _MapOpenEx.Wrapper;
	public MapOpenWithID MapOpenWithID => _MapOpenWithID.Wrapper;
	public MapIsEnd MapIsEnd => _MapIsEnd.Wrapper;
	public MapIsShortcut MapIsShortcut => _MapIsShortcut.Wrapper;
	public GetShortcutMapID GetShortcutMapID => _GetShortcutMapID.Wrapper;
	public GetShortcutPositionID GetShortcutPositionID => _GetShortcutPositionID.Wrapper;
	public ItemGetWindowEventOpen ItemGetWindowEventOpen => _ItemGetWindowEventOpen.Wrapper;
	public ItemGetWindowIsEnd ItemGetWindowIsEnd => _ItemGetWindowIsEnd.Wrapper;
	public ItemGetTreasure ItemGetTreasure => _ItemGetTreasure.Wrapper;
	public ItemGet ItemGet => _ItemGet.Wrapper;
	public FclShopStart FclShopStart => _FclShopStart.Wrapper;
	public FclShopIsEnd FclShopIsEnd => _FclShopIsEnd.Wrapper;
	public FclShopGetItemID FclShopGetItemID => _FclShopGetItemID.Wrapper;
	public FclShopIsFirstInfoItem FclShopIsFirstInfoItem => _FclShopIsFirstInfoItem.Wrapper;
	public FclShopGetSelectedMenu FclShopGetSelectedMenu => _FclShopGetSelectedMenu.Wrapper;
	public FclShopExit FclShopExit => _FclShopExit.Wrapper;
	public FclRecruitmentStart FclRecruitmentStart => _FclRecruitmentStart.Wrapper;
	public FclRecruitmentTitleStart FclRecruitmentTitleStart => _FclRecruitmentTitleStart.Wrapper;
	public FclRecruitmentIsClearEvent FclRecruitmentIsClearEvent => _FclRecruitmentIsClearEvent.Wrapper;
	public FclRecruitmentIsEnd FclRecruitmentIsEnd => _FclRecruitmentIsEnd.Wrapper;
	public FclRecruitmentExit FclRecruitmentExit => _FclRecruitmentExit.Wrapper;
	public FclNameEntryStart FclNameEntryStart => _FclNameEntryStart.Wrapper;
	public FclNameEntryIsEnd FclNameEntryIsEnd => _FclNameEntryIsEnd.Wrapper;
	public FclPlayerNameEntryStart FclPlayerNameEntryStart => _FclPlayerNameEntryStart.Wrapper;
	public FclPlayerNameEntryIsEnd FclPlayerNameEntryIsEnd => _FclPlayerNameEntryIsEnd.Wrapper;
	public DifficultySelectStart DifficultySelectStart => _DifficultySelectStart.Wrapper;
	public DifficultySelectIsReady DifficultySelectIsReady => _DifficultySelectIsReady.Wrapper;
	public DifficultySelectOpen DifficultySelectOpen => _DifficultySelectOpen.Wrapper;
	public DifficultySelectIsEnd DifficultySelectIsEnd => _DifficultySelectIsEnd.Wrapper;
	public DifficultySelectDestroy DifficultySelectDestroy => _DifficultySelectDestroy.Wrapper;
	public AcademiaStart AcademiaStart => _AcademiaStart.Wrapper;
	public AcademiaWaitUIOpend AcademiaWaitUIOpend => _AcademiaWaitUIOpend.Wrapper;
	public AcademiaIsEnd AcademiaIsEnd => _AcademiaIsEnd.Wrapper;
	public AcademiaIsTopMenu AcademiaIsTopMenu => _AcademiaIsTopMenu.Wrapper;
	public AcademiaItemGetWindowEventOpen AcademiaItemGetWindowEventOpen => _AcademiaItemGetWindowEventOpen.Wrapper;
	public AcademiaTalk_LabelNum AcademiaTalk_LabelNum => _AcademiaTalk_LabelNum.Wrapper;
	public AcademiaTalk_RequestMessage AcademiaTalk_RequestMessage => _AcademiaTalk_RequestMessage.Wrapper;
	public AcademiaLearnTalk_GetClassID AcademiaLearnTalk_GetClassID => _AcademiaLearnTalk_GetClassID.Wrapper;
	public AcademiaLearnTalk_GetCharaID AcademiaLearnTalk_GetCharaID => _AcademiaLearnTalk_GetCharaID.Wrapper;
	public AcademiaLearnTalk_GetNeedMag AcademiaLearnTalk_GetNeedMag => _AcademiaLearnTalk_GetNeedMag.Wrapper;
	public AcademiaLearnTalk_SetVariableBufferClass AcademiaLearnTalk_SetVariableBufferClass => _AcademiaLearnTalk_SetVariableBufferClass.Wrapper;
	public AcademiaLearnTalk_NotDispAcademia AcademiaLearnTalk_NotDispAcademia => _AcademiaLearnTalk_NotDispAcademia.Wrapper;
	public AcademiaLearnTalk_DispAcademia AcademiaLearnTalk_DispAcademia => _AcademiaLearnTalk_DispAcademia.Wrapper;
	public DateProgressUI_Start DateProgressUI_Start => _DateProgressUI_Start.Wrapper;
	public DateProgressUI_IsReady DateProgressUI_IsReady => _DateProgressUI_IsReady.Wrapper;
	public DateProgressUI_Open DateProgressUI_Open => _DateProgressUI_Open.Wrapper;
	public DateProgressUI_OpenNoMessage DateProgressUI_OpenNoMessage => _DateProgressUI_OpenNoMessage.Wrapper;
	public DateProgressUI_IsClosed DateProgressUI_IsClosed => _DateProgressUI_IsClosed.Wrapper;
	public DateProgressUI_End DateProgressUI_End => _DateProgressUI_End.Wrapper;
	public DateUI_ChangeTime DateUI_ChangeTime => _DateUI_ChangeTime.Wrapper;
	public Quest_GetStatus Quest_GetStatus => _Quest_GetStatus.Wrapper;
	public Quest_SetState_Obtained Quest_SetState_Obtained => _Quest_SetState_Obtained.Wrapper;
	public Quest_SetState_Accepted Quest_SetState_Accepted => _Quest_SetState_Accepted.Wrapper;
	public Quest_SetState_ReadyToDebrief Quest_SetState_ReadyToDebrief => _Quest_SetState_ReadyToDebrief.Wrapper;
	public Quest_SetState_Completed Quest_SetState_Completed => _Quest_SetState_Completed.Wrapper;
	public Quest_SetState_Expired Quest_SetState_Expired => _Quest_SetState_Expired.Wrapper;
	public Quest_GetProgression Quest_GetProgression => _Quest_GetProgression.Wrapper;
	public Quest_AdvanceProgression Quest_AdvanceProgression => _Quest_AdvanceProgression.Wrapper;
	public Quest_SetProgression Quest_SetProgression => _Quest_SetProgression.Wrapper;
	public Quest_SetDestinationOpen Quest_SetDestinationOpen => _Quest_SetDestinationOpen.Wrapper;
	public Quest_IsDestinationOpened Quest_IsDestinationOpened => _Quest_IsDestinationOpened.Wrapper;
	public Quest_GetRemainDays Quest_GetRemainDays => _Quest_GetRemainDays.Wrapper;
	public Quest_GetTargetEnemyGoalCount Quest_GetTargetEnemyGoalCount => _Quest_GetTargetEnemyGoalCount.Wrapper;
	public Quest_GetTargetEnemyNowCount Quest_GetTargetEnemyNowCount => _Quest_GetTargetEnemyNowCount.Wrapper;
	public Quest_GetTargetEnemyID Quest_GetTargetEnemyID => _Quest_GetTargetEnemyID.Wrapper;
	public Quest_GetTargetItemID Quest_GetTargetItemID => _Quest_GetTargetItemID.Wrapper;
	public Quest_Change_RewardMoney_Type Quest_Change_RewardMoney_Type => _Quest_Change_RewardMoney_Type.Wrapper;
	public Quest_GetRewardMoney Quest_GetRewardMoney => _Quest_GetRewardMoney.Wrapper;
	public Quest_Daily_Process Quest_Daily_Process => _Quest_Daily_Process.Wrapper;
	public Quest_GetNum_ReadyToDebrief Quest_GetNum_ReadyToDebrief => _Quest_GetNum_ReadyToDebrief.Wrapper;
	public Quest_GetNumSpecifiedDaysToLimit Quest_GetNumSpecifiedDaysToLimit => _Quest_GetNumSpecifiedDaysToLimit.Wrapper;
	public QuestUI_Start QuestUI_Start => _QuestUI_Start.Wrapper;
	public QuestUI_IsReady QuestUI_IsReady => _QuestUI_IsReady.Wrapper;
	public QuestUI_Open_Accept QuestUI_Open_Accept => _QuestUI_Open_Accept.Wrapper;
	public QuestUI_Open_Clear QuestUI_Open_Clear => _QuestUI_Open_Clear.Wrapper;
	public QuestUI_IsClosed QuestUI_IsClosed => _QuestUI_IsClosed.Wrapper;
	public QuestUI_End QuestUI_End => _QuestUI_End.Wrapper;
	public BountyUI_Start BountyUI_Start => _BountyUI_Start.Wrapper;
	public BountyUI_IsReady BountyUI_IsReady => _BountyUI_IsReady.Wrapper;
	public BountyUI_Open_Accept BountyUI_Open_Accept => _BountyUI_Open_Accept.Wrapper;
	public BountyUI_Open_Clear BountyUI_Open_Clear => _BountyUI_Open_Clear.Wrapper;
	public BountyUI_IsClosed BountyUI_IsClosed => _BountyUI_IsClosed.Wrapper;
	public BountyUI_End BountyUI_End => _BountyUI_End.Wrapper;
	public FollowerUI_Start FollowerUI_Start => _FollowerUI_Start.Wrapper;
	public FollowerUI_IsEnd FollowerUI_IsEnd => _FollowerUI_IsEnd.Wrapper;
	public GetFollowerID_OnRankUpScript GetFollowerID_OnRankUpScript => _GetFollowerID_OnRankUpScript.Wrapper;
	public GetFollowerRank_OnRankUpScript GetFollowerRank_OnRankUpScript => _GetFollowerRank_OnRankUpScript.Wrapper;
	public SortieUI_Start SortieUI_Start => _SortieUI_Start.Wrapper;
	public SortieUI_IsReady SortieUI_IsReady => _SortieUI_IsReady.Wrapper;
	public SortieUI_Open SortieUI_Open => _SortieUI_Open.Wrapper;
	public SortieUI_IsClosed SortieUI_IsClosed => _SortieUI_IsClosed.Wrapper;
	public SortieUI_GetResult SortieUI_GetResult => _SortieUI_GetResult.Wrapper;
	public SortieUI_End SortieUI_End => _SortieUI_End.Wrapper;
	public SortieMapUI_Start SortieMapUI_Start => _SortieMapUI_Start.Wrapper;
	public SortieMapUI_IsReady SortieMapUI_IsReady => _SortieMapUI_IsReady.Wrapper;
	public SortieMapUI_Open SortieMapUI_Open => _SortieMapUI_Open.Wrapper;
	public SortieMapUI_Open_MapPoint SortieMapUI_Open_MapPoint => _SortieMapUI_Open_MapPoint.Wrapper;
	public SortieMapUI_Open_MapPointByMapID SortieMapUI_Open_MapPointByMapID => _SortieMapUI_Open_MapPointByMapID.Wrapper;
	public SortieMapUI_Open_Intercity SortieMapUI_Open_Intercity => _SortieMapUI_Open_Intercity.Wrapper;
	public SortieMapUI_Open_SelectDestinationPoint SortieMapUI_Open_SelectDestinationPoint => _SortieMapUI_Open_SelectDestinationPoint.Wrapper;
	public SortieMapUI_IsClosed SortieMapUI_IsClosed => _SortieMapUI_IsClosed.Wrapper;
	public SortieMapUI_GetResult SortieMapUI_GetResult => _SortieMapUI_GetResult.Wrapper;
	public SortieMapUI_End SortieMapUI_End => _SortieMapUI_End.Wrapper;
	public SortieMapUI_SetPlayedPointEffect SortieMapUI_SetPlayedPointEffect => _SortieMapUI_SetPlayedPointEffect.Wrapper;
	public SortieMapUI_SetPlayedPathEffect SortieMapUI_SetPlayedPathEffect => _SortieMapUI_SetPlayedPathEffect.Wrapper;
	public SortieMapUI_GetPlayedPointEffect SortieMapUI_GetPlayedPointEffect => _SortieMapUI_GetPlayedPointEffect.Wrapper;
	public SortieMapUI_GetPlayedPathEffect SortieMapUI_GetPlayedPathEffect => _SortieMapUI_GetPlayedPathEffect.Wrapper;
	public SortieMapUI_IsEventToolTestMode SortieMapUI_IsEventToolTestMode => _SortieMapUI_IsEventToolTestMode.Wrapper;
	public SortieMapUI_SetPlayedAllOpendPointAndPathEffect SortieMapUI_SetPlayedAllOpendPointAndPathEffect => _SortieMapUI_SetPlayedAllOpendPointAndPathEffect.Wrapper;
	public SortieMapUI_ResetRoute SortieMapUI_ResetRoute => _SortieMapUI_ResetRoute.Wrapper;
	public SortieMapUI_AddRoute SortieMapUI_AddRoute => _SortieMapUI_AddRoute.Wrapper;
	public SortieMapUIEffect_Start SortieMapUIEffect_Start => _SortieMapUIEffect_Start.Wrapper;
	public SortieMapUIEffect_IsReady SortieMapUIEffect_IsReady => _SortieMapUIEffect_IsReady.Wrapper;
	public SortieMapUIEffect_OpenHighlightPoint SortieMapUIEffect_OpenHighlightPoint => _SortieMapUIEffect_OpenHighlightPoint.Wrapper;
	public SortieMapUIEffect_IsOpen SortieMapUIEffect_IsOpen => _SortieMapUIEffect_IsOpen.Wrapper;
	public SortieMapUIEffect_OpenAutoClose SortieMapUIEffect_OpenAutoClose => _SortieMapUIEffect_OpenAutoClose.Wrapper;
	public SortieMapUIEffect_OpenPlayerAnime SortieMapUIEffect_OpenPlayerAnime => _SortieMapUIEffect_OpenPlayerAnime.Wrapper;
	public SortieMapUIEffect_OpenPlayerAnimeIntercity SortieMapUIEffect_OpenPlayerAnimeIntercity => _SortieMapUIEffect_OpenPlayerAnimeIntercity.Wrapper;
	public SortieMapUIEffect_Close SortieMapUIEffect_Close => _SortieMapUIEffect_Close.Wrapper;
	public SortieMapUIEffect_IsClosed SortieMapUIEffect_IsClosed => _SortieMapUIEffect_IsClosed.Wrapper;
	public SortieMapUIEffect_End SortieMapUIEffect_End => _SortieMapUIEffect_End.Wrapper;
	public SortieMapUIEffect_AddNewEffect SortieMapUIEffect_AddNewEffect => _SortieMapUIEffect_AddNewEffect.Wrapper;
	public SortieMapUI_IsEnableSortie SortieMapUI_IsEnableSortie => _SortieMapUI_IsEnableSortie.Wrapper;
	public SortieMapUI_IsConnect SortieMapUI_IsConnect => _SortieMapUI_IsConnect.Wrapper;
	public SortieMapUI_GetPointID SortieMapUI_GetPointID => _SortieMapUI_GetPointID.Wrapper;
	public SortieMapUI_GetPointMapDataID SortieMapUI_GetPointMapDataID => _SortieMapUI_GetPointMapDataID.Wrapper;
	public SortieMapUI_GetPointPositionID SortieMapUI_GetPointPositionID => _SortieMapUI_GetPointPositionID.Wrapper;
	public SortieMapUI_GetPointQuestID SortieMapUI_GetPointQuestID => _SortieMapUI_GetPointQuestID.Wrapper;
	public SortieMapUI_GetMapID SortieMapUI_GetMapID => _SortieMapUI_GetMapID.Wrapper;
	public SortieMapUI_GetPathNeedDay SortieMapUI_GetPathNeedDay => _SortieMapUI_GetPathNeedDay.Wrapper;
	public SortieMapUI_MoveAutoCursor SortieMapUI_MoveAutoCursor => _SortieMapUI_MoveAutoCursor.Wrapper;
	public SortieMapUI_IsEndMoveAutoCursor SortieMapUI_IsEndMoveAutoCursor => _SortieMapUI_IsEndMoveAutoCursor.Wrapper;
	public SortieMapUI_IsFirstMap SortieMapUI_IsFirstMap => _SortieMapUI_IsFirstMap.Wrapper;
	public SortieMapUI_IsBadWeather SortieMapUI_IsBadWeather => _SortieMapUI_IsBadWeather.Wrapper;
	public SortieMapUI_IsBadWeatherToday SortieMapUI_IsBadWeatherToday => _SortieMapUI_IsBadWeatherToday.Wrapper;
	public SortieMapUI_IsOpenArrivalDayWeather SortieMapUI_IsOpenArrivalDayWeather => _SortieMapUI_IsOpenArrivalDayWeather.Wrapper;
	public SortieMapUI_GetRouteNum SortieMapUI_GetRouteNum => _SortieMapUI_GetRouteNum.Wrapper;
	public SortieMapUI_StartRouteSelect SortieMapUI_StartRouteSelect => _SortieMapUI_StartRouteSelect.Wrapper;
	public SortieMapUI_IsEndRouteSelect SortieMapUI_IsEndRouteSelect => _SortieMapUI_IsEndRouteSelect.Wrapper;
	public SortieMapUI_GetRoutePathIDOnSortieScript SortieMapUI_GetRoutePathIDOnSortieScript => _SortieMapUI_GetRoutePathIDOnSortieScript.Wrapper;
	public SortieMapUI_GetRoutePointIDOnSortieScript SortieMapUI_GetRoutePointIDOnSortieScript => _SortieMapUI_GetRoutePointIDOnSortieScript.Wrapper;
	public SortieMapUI_GetRoutePathIndexMaxOnSortieScript SortieMapUI_GetRoutePathIndexMaxOnSortieScript => _SortieMapUI_GetRoutePathIndexMaxOnSortieScript.Wrapper;
	public SortieMapUI_GetRoutePathID SortieMapUI_GetRoutePathID => _SortieMapUI_GetRoutePathID.Wrapper;
	public SortieMapUI_GetRoutePointID SortieMapUI_GetRoutePointID => _SortieMapUI_GetRoutePointID.Wrapper;
	public SortieMapUI_GetRoutePathIndexMax SortieMapUI_GetRoutePathIndexMax => _SortieMapUI_GetRoutePathIndexMax.Wrapper;
	public SortieMapUI_GetPointType SortieMapUI_GetPointType => _SortieMapUI_GetPointType.Wrapper;
	public SortieMapUI_GetHapeningIndex SortieMapUI_GetHapeningIndex => _SortieMapUI_GetHapeningIndex.Wrapper;
	public SortieMapUI_SetHapeningOccurred SortieMapUI_SetHapeningOccurred => _SortieMapUI_SetHapeningOccurred.Wrapper;
	public SortieMapUI_GetPathMapID SortieMapUI_GetPathMapID => _SortieMapUI_GetPathMapID.Wrapper;
	public SortieMapUI_GetHappeningID SortieMapUI_GetHappeningID => _SortieMapUI_GetHappeningID.Wrapper;
	public SortieMapUI_GetHappeningArg SortieMapUI_GetHappeningArg => _SortieMapUI_GetHappeningArg.Wrapper;
	public SortieMapUI_CallEvent SortieMapUI_CallEvent => _SortieMapUI_CallEvent.Wrapper;
	public SortieMapUI_GetLoadPrereadData SortieMapUI_GetLoadPrereadData => _SortieMapUI_GetLoadPrereadData.Wrapper;
	public SortieMapUI_GetLoadPrereadDataByGaisennsha SortieMapUI_GetLoadPrereadDataByGaisennsha => _SortieMapUI_GetLoadPrereadDataByGaisennsha.Wrapper;
	public SortieMapUI_GetMapIDByPoint SortieMapUI_GetMapIDByPoint => _SortieMapUI_GetMapIDByPoint.Wrapper;
	public SortieMapUI_GetPosIDByPoint SortieMapUI_GetPosIDByPoint => _SortieMapUI_GetPosIDByPoint.Wrapper;
	public SortieMapUI_GetRegionIDByPoint SortieMapUI_GetRegionIDByPoint => _SortieMapUI_GetRegionIDByPoint.Wrapper;
	public SortieMapUI_GetPointFlagID SortieMapUI_GetPointFlagID => _SortieMapUI_GetPointFlagID.Wrapper;
	public SortieMapUI_CallPointArriveEvent SortieMapUI_CallPointArriveEvent => _SortieMapUI_CallPointArriveEvent.Wrapper;
	public SortieMapUI_CallPointNotHappeningEvent SortieMapUI_CallPointNotHappeningEvent => _SortieMapUI_CallPointNotHappeningEvent.Wrapper;
	public SortieMapUI_GetLoadPrereadDataByPoint SortieMapUI_GetLoadPrereadDataByPoint => _SortieMapUI_GetLoadPrereadDataByPoint.Wrapper;
	public SortieMapUI_UnlockPath SortieMapUI_UnlockPath => _SortieMapUI_UnlockPath.Wrapper;
	public SortieMapUI_UnlockPoint SortieMapUI_UnlockPoint => _SortieMapUI_UnlockPoint.Wrapper;
	public SortieMapUI_GetPathType SortieMapUI_GetPathType => _SortieMapUI_GetPathType.Wrapper;
	public SortieMapUI_CurrentPointMessage SortieMapUI_CurrentPointMessage => _SortieMapUI_CurrentPointMessage.Wrapper;
	public SortieMapUI_UpdateSortieTownMap SortieMapUI_UpdateSortieTownMap => _SortieMapUI_UpdateSortieTownMap.Wrapper;
	public SortieMapUI_InsertPointIntoRoute SortieMapUI_InsertPointIntoRoute => _SortieMapUI_InsertPointIntoRoute.Wrapper;
	public SortieMapUI_CheckInsertPointIntoRoute SortieMapUI_CheckInsertPointIntoRoute => _SortieMapUI_CheckInsertPointIntoRoute.Wrapper;
	public SortieMapUI_IsEnableFollowerHelp SortieMapUI_IsEnableFollowerHelp => _SortieMapUI_IsEnableFollowerHelp.Wrapper;
	public SortieMapUI_RequestFollowerHelpChoice SortieMapUI_RequestFollowerHelpChoice => _SortieMapUI_RequestFollowerHelpChoice.Wrapper;
	public SortieMapUI_RequestFollowerHelpMsg SortieMapUI_RequestFollowerHelpMsg => _SortieMapUI_RequestFollowerHelpMsg.Wrapper;
	public SortieMapUI_GetFollowerHelpID SortieMapUI_GetFollowerHelpID => _SortieMapUI_GetFollowerHelpID.Wrapper;
	public SortieMapUI_RequestFollowerHelpSetFlag SortieMapUI_RequestFollowerHelpSetFlag => _SortieMapUI_RequestFollowerHelpSetFlag.Wrapper;
	public SortieMapUI_IsAllViewPointVisited SortieMapUI_IsAllViewPointVisited => _SortieMapUI_IsAllViewPointVisited.Wrapper;
	public HumanParamUPQuest HumanParamUPQuest => _HumanParamUPQuest.Wrapper;
	public HumanParamUP1 HumanParamUP1 => _HumanParamUP1.Wrapper;
	public HumanParamUP2 HumanParamUP2 => _HumanParamUP2.Wrapper;
	public IsHumanParamUPEnd IsHumanParamUPEnd => _IsHumanParamUPEnd.Wrapper;
	public HumanParamGetLevel HumanParamGetLevel => _HumanParamGetLevel.Wrapper;
	public IllustrationUI_Start IllustrationUI_Start => _IllustrationUI_Start.Wrapper;
	public IllustrationUI_IsReady IllustrationUI_IsReady => _IllustrationUI_IsReady.Wrapper;
	public IllustrationUI_Close IllustrationUI_Close => _IllustrationUI_Close.Wrapper;
	public IllustrationUI_IsClosed IllustrationUI_IsClosed => _IllustrationUI_IsClosed.Wrapper;
	public IllustrationUI_End IllustrationUI_End => _IllustrationUI_End.Wrapper;
	public FollowerGetRank FollowerGetRank => _FollowerGetRank.Wrapper;
	public FollowerSetRank FollowerSetRank => _FollowerSetRank.Wrapper;
	public FollowerSyncRank FollowerSyncRank => _FollowerSyncRank.Wrapper;
	public FollowerGetFriendship FollowerGetFriendship => _FollowerGetFriendship.Wrapper;
	public FollowerSetFriendship FollowerSetFriendship => _FollowerSetFriendship.Wrapper;
	public FollowerAddFriendship FollowerAddFriendship => _FollowerAddFriendship.Wrapper;
	public FollowerClassGrow FollowerClassGrow => _FollowerClassGrow.Wrapper;
	public Timer_Start Timer_Start => _Timer_Start.Wrapper;
	public Timer_End Timer_End => _Timer_End.Wrapper;
	public Timer_IsActive Timer_IsActive => _Timer_IsActive.Wrapper;
	public Timer_Open Timer_Open => _Timer_Open.Wrapper;
	public Timer_Close Timer_Close => _Timer_Close.Wrapper;
	public Timer_Pause Timer_Pause => _Timer_Pause.Wrapper;
	public Timer_Get Timer_Get => _Timer_Get.Wrapper;
	public Timer_SetPinchTime Timer_SetPinchTime => _Timer_SetPinchTime.Wrapper;
	public Lotto_CreateUI Lotto_CreateUI => _Lotto_CreateUI.Wrapper;
	public Lotto_IsReadyUI Lotto_IsReadyUI => _Lotto_IsReadyUI.Wrapper;
	public Lotto_DestroyUI Lotto_DestroyUI => _Lotto_DestroyUI.Wrapper;
	public Lotto_OpenWindow Lotto_OpenWindow => _Lotto_OpenWindow.Wrapper;
	public Lotto_IsClosedWindow Lotto_IsClosedWindow => _Lotto_IsClosedWindow.Wrapper;
	public Lotto_GetNumbers Lotto_GetNumbers => _Lotto_GetNumbers.Wrapper;
	public Lotto_SaveBuyData Lotto_SaveBuyData => _Lotto_SaveBuyData.Wrapper;
	public Lotto_DoTheLottery Lotto_DoTheLottery => _Lotto_DoTheLottery.Wrapper;
	public Lotto_CalcWinningAmount Lotto_CalcWinningAmount => _Lotto_CalcWinningAmount.Wrapper;
	public Cooking_CreateUI Cooking_CreateUI => _Cooking_CreateUI.Wrapper;
	public Cooking_IsReadyUI Cooking_IsReadyUI => _Cooking_IsReadyUI.Wrapper;
	public Cooking_OpenWindow Cooking_OpenWindow => _Cooking_OpenWindow.Wrapper;
	public Cooking_IsClosed Cooking_IsClosed => _Cooking_IsClosed.Wrapper;
	public Cooking_DestroyUI Cooking_DestroyUI => _Cooking_DestroyUI.Wrapper;
	public Cooking_GetItem Cooking_GetItem => _Cooking_GetItem.Wrapper;
	public Cooking_IsChara Cooking_IsChara => _Cooking_IsChara.Wrapper;
	public Cooking_GetChara Cooking_GetChara => _Cooking_GetChara.Wrapper;
	public Cooking_IsCancel Cooking_IsCancel => _Cooking_IsCancel.Wrapper;
	public Cooking_IsCookingRecipe Cooking_IsCookingRecipe => _Cooking_IsCookingRecipe.Wrapper;
	public Cooking_Count Cooking_Count => _Cooking_Count.Wrapper;
	public Cooking_RecipeGetOpenWindow Cooking_RecipeGetOpenWindow => _Cooking_RecipeGetOpenWindow.Wrapper;
	public Cooking_IsRecipeGetClosed Cooking_IsRecipeGetClosed => _Cooking_IsRecipeGetClosed.Wrapper;
	public Cooking_IsGetRecipe Cooking_IsGetRecipe => _Cooking_IsGetRecipe.Wrapper;
	public Cooking_IsGetSpecialRecipe Cooking_IsGetSpecialRecipe => _Cooking_IsGetSpecialRecipe.Wrapper;
	public Cooking_GetSpecialRecipe Cooking_GetSpecialRecipe => _Cooking_GetSpecialRecipe.Wrapper;
	public Exp_Add_Character_Hero Exp_Add_Character_Hero => _Exp_Add_Character_Hero.Wrapper;
	public Exp_Add_Class_Category_Hero Exp_Add_Class_Category_Hero => _Exp_Add_Class_Category_Hero.Wrapper;
	public Exp_Add_Character_All Exp_Add_Character_All => _Exp_Add_Character_All.Wrapper;
	public Exp_Add_Class_Category_All Exp_Add_Class_Category_All => _Exp_Add_Class_Category_All.Wrapper;
	public Exp_Add_IsClosed Exp_Add_IsClosed => _Exp_Add_IsClosed.Wrapper;
	public BattleEventUI_Open BattleEventUI_Open => _BattleEventUI_Open.Wrapper;
	public BattleEventUI_Close BattleEventUI_Close => _BattleEventUI_Close.Wrapper;
	public EventUIDisplaySuppressionStart EventUIDisplaySuppressionStart => _EventUIDisplaySuppressionStart.Wrapper;
	public EventUIDisplaySuppressionEnd EventUIDisplaySuppressionEnd => _EventUIDisplaySuppressionEnd.Wrapper;
	public BattleMissionUI_Open BattleMissionUI_Open => _BattleMissionUI_Open.Wrapper;
	public BattleMissionUI_Close BattleMissionUI_Close => _BattleMissionUI_Close.Wrapper;
	public CampStatus_Open CampStatus_Open => _CampStatus_Open.Wrapper;
	public CampStatus_OpenWithFixCharacter CampStatus_OpenWithFixCharacter => _CampStatus_OpenWithFixCharacter.Wrapper;
	public CampStatus_IsClosed CampStatus_IsClosed => _CampStatus_IsClosed.Wrapper;
	public SafeRoomMenuUI_Start SafeRoomMenuUI_Start => _SafeRoomMenuUI_Start.Wrapper;
	public SafeRoomMenuUI_IsReady SafeRoomMenuUI_IsReady => _SafeRoomMenuUI_IsReady.Wrapper;
	public SafeRoomMenuUI_End SafeRoomMenuUI_End => _SafeRoomMenuUI_End.Wrapper;
	public SafeRoomMenuUI_Open SafeRoomMenuUI_Open => _SafeRoomMenuUI_Open.Wrapper;
	public SafeRoomMenuUI_IsClosed SafeRoomMenuUI_IsClosed => _SafeRoomMenuUI_IsClosed.Wrapper;
	public SafeRoomMenuUI_GetResult SafeRoomMenuUI_GetResult => _SafeRoomMenuUI_GetResult.Wrapper;
	public Food_ActivateEffect Food_ActivateEffect => _Food_ActivateEffect.Wrapper;
	public Food_DeactivateEffect Food_DeactivateEffect => _Food_DeactivateEffect.Wrapper;
	public SortieMeeting_Start SortieMeeting_Start => _SortieMeeting_Start.Wrapper;
	public SortieMeeting_IsReady SortieMeeting_IsReady => _SortieMeeting_IsReady.Wrapper;
	public SortieMeeting_Open SortieMeeting_Open => _SortieMeeting_Open.Wrapper;
	public SortieMeeting_IsClosed SortieMeeting_IsClosed => _SortieMeeting_IsClosed.Wrapper;
	public SortieMeeting_End SortieMeeting_End => _SortieMeeting_End.Wrapper;
	public GallicaTalk_IsScenario GallicaTalk_IsScenario => _GallicaTalk_IsScenario.Wrapper;
	public GallicaTalk_Open GallicaTalk_Open => _GallicaTalk_Open.Wrapper;
	public GallicaTalk_IsClosed GallicaTalk_IsClosed => _GallicaTalk_IsClosed.Wrapper;
	public Savedata_HeaderStore Savedata_HeaderStore => _Savedata_HeaderStore.Wrapper;
	public Savedata_SaveStart Savedata_SaveStart => _Savedata_SaveStart.Wrapper;
	public Savedata_SaveStart_NameID Savedata_SaveStart_NameID => _Savedata_SaveStart_NameID.Wrapper;
	public Savedata_SaveStart_Fade Savedata_SaveStart_Fade => _Savedata_SaveStart_Fade.Wrapper;
	public Savedata_SaveStart_NameID_Fade Savedata_SaveStart_NameID_Fade => _Savedata_SaveStart_NameID_Fade.Wrapper;
	public Savedata_LoadStart Savedata_LoadStart => _Savedata_LoadStart.Wrapper;
	public Savedata_Wait Savedata_Wait => _Savedata_Wait.Wrapper;
	public Savedata_ScriptSaveExecute Savedata_ScriptSaveExecute => _Savedata_ScriptSaveExecute.Wrapper;
	public Savedata_ScriptLoadExecute Savedata_ScriptLoadExecute => _Savedata_ScriptLoadExecute.Wrapper;
	public Savedata_ScriptLoadExecuteSlot Savedata_ScriptLoadExecuteSlot => _Savedata_ScriptLoadExecuteSlot.Wrapper;
	public Savedata_ScriptLoadIsEnd Savedata_ScriptLoadIsEnd => _Savedata_ScriptLoadIsEnd.Wrapper;
	public IsSavedata_Loaded IsSavedata_Loaded => _IsSavedata_Loaded.Wrapper;
	public Savedata_SystemSaveExecute Savedata_SystemSaveExecute => _Savedata_SystemSaveExecute.Wrapper;
	public Savedata_SystemLoadExecute Savedata_SystemLoadExecute => _Savedata_SystemLoadExecute.Wrapper;
	public SavedataForExpired_SaveStart SavedataForExpired_SaveStart => _SavedataForExpired_SaveStart.Wrapper;
	public SavedataForExpired_LoadStart SavedataForExpired_LoadStart => _SavedataForExpired_LoadStart.Wrapper;
	public SaveData_GameClearData SaveData_GameClearData => _SaveData_GameClearData.Wrapper;
	public SaveData_GameClearData_NameID SaveData_GameClearData_NameID => _SaveData_GameClearData_NameID.Wrapper;
	public SaveData_GameClearDataAutoSave SaveData_GameClearDataAutoSave => _SaveData_GameClearDataAutoSave.Wrapper;
	public SaveData_LoadGameSequence SaveData_LoadGameSequence => _SaveData_LoadGameSequence.Wrapper;
	public MoviePlay MoviePlay => _MoviePlay.Wrapper;
	public EventMoviePlay EventMoviePlay => _EventMoviePlay.Wrapper;
	public IsMovieEnd IsMovieEnd => _IsMovieEnd.Wrapper;
	public IsMovieSkipped IsMovieSkipped => _IsMovieSkipped.Wrapper;
	public Staffroll_CreateUI Staffroll_CreateUI => _Staffroll_CreateUI.Wrapper;
	public Staffroll_IsReadyUI Staffroll_IsReadyUI => _Staffroll_IsReadyUI.Wrapper;
	public Staffroll_Open Staffroll_Open => _Staffroll_Open.Wrapper;
	public Staffroll_IsClosed Staffroll_IsClosed => _Staffroll_IsClosed.Wrapper;
	public Staffroll_DestroyUI Staffroll_DestroyUI => _Staffroll_DestroyUI.Wrapper;
	public Ending_BG_CreateUI Ending_BG_CreateUI => _Ending_BG_CreateUI.Wrapper;
	public Ending_BG_IsReadyUI Ending_BG_IsReadyUI => _Ending_BG_IsReadyUI.Wrapper;
	public Ending_BG_Open1st Ending_BG_Open1st => _Ending_BG_Open1st.Wrapper;
	public Ending_BG_Close1st Ending_BG_Close1st => _Ending_BG_Close1st.Wrapper;
	public Ending_BG_Open2nd Ending_BG_Open2nd => _Ending_BG_Open2nd.Wrapper;
	public Ending_BG_Close2nd Ending_BG_Close2nd => _Ending_BG_Close2nd.Wrapper;
	public Ending_BG_Open3rd Ending_BG_Open3rd => _Ending_BG_Open3rd.Wrapper;
	public Ending_BG_Close3rd Ending_BG_Close3rd => _Ending_BG_Close3rd.Wrapper;
	public Ending_BG_IsClosed Ending_BG_IsClosed => _Ending_BG_IsClosed.Wrapper;
	public Ending_BG_DestroyUI Ending_BG_DestroyUI => _Ending_BG_DestroyUI.Wrapper;
	public Ending_Message_CreateUI Ending_Message_CreateUI => _Ending_Message_CreateUI.Wrapper;
	public Ending_Message_IsReadyUI Ending_Message_IsReadyUI => _Ending_Message_IsReadyUI.Wrapper;
	public Ending_Message_Open Ending_Message_Open => _Ending_Message_Open.Wrapper;
	public Ending_Message_IsClosed Ending_Message_IsClosed => _Ending_Message_IsClosed.Wrapper;
	public Ending_Message_DestroyUI Ending_Message_DestroyUI => _Ending_Message_DestroyUI.Wrapper;
	public Gameover_CreateUI Gameover_CreateUI => _Gameover_CreateUI.Wrapper;
	public Gameover_IsReadyUI Gameover_IsReadyUI => _Gameover_IsReadyUI.Wrapper;
	public Gameover_Open Gameover_Open => _Gameover_Open.Wrapper;
	public Gameover_IsClosed Gameover_IsClosed => _Gameover_IsClosed.Wrapper;
	public Gameover_DestroyUI Gameover_DestroyUI => _Gameover_DestroyUI.Wrapper;
	public EventLogAutoEnable EventLogAutoEnable => _EventLogAutoEnable.Wrapper;
	public EventLogAutoDisable EventLogAutoDisable => _EventLogAutoDisable.Wrapper;
	public EventStart EventStart => _EventStart.Wrapper;
	public EventEnd EventEnd => _EventEnd.Wrapper;
	public EventGuideClose EventGuideClose => _EventGuideClose.Wrapper;
	public AddContent_StartCheckEnabledContent AddContent_StartCheckEnabledContent => _AddContent_StartCheckEnabledContent.Wrapper;
	public AddContent_FinishedCheckEnabledContent AddContent_FinishedCheckEnabledContent => _AddContent_FinishedCheckEnabledContent.Wrapper;
	public AddContent_ExistsEnabledContent AddContent_ExistsEnabledContent => _AddContent_ExistsEnabledContent.Wrapper;
	public AddContent_EnabledContent AddContent_EnabledContent => _AddContent_EnabledContent.Wrapper;
	public TravelersVoice_AddUploadValue TravelersVoice_AddUploadValue => _TravelersVoice_AddUploadValue.Wrapper;
	public Trophy_Request Trophy_Request => _Trophy_Request.Wrapper;
	public ScreenCapture_SetEnable ScreenCapture_SetEnable => _ScreenCapture_SetEnable.Wrapper;
	public ScreenCapture_SetDisable ScreenCapture_SetDisable => _ScreenCapture_SetDisable.Wrapper;
	public ActivityStart ActivityStart => _ActivityStart.Wrapper;
	public ActivityEnd ActivityEnd => _ActivityEnd.Wrapper;
	public PlayGo_CheckInstalledAllChunks_Request PlayGo_CheckInstalledAllChunks_Request => _PlayGo_CheckInstalledAllChunks_Request.Wrapper;
	public PlayGo_CheckInstalledAllChunks_IsEndProc PlayGo_CheckInstalledAllChunks_IsEndProc => _PlayGo_CheckInstalledAllChunks_IsEndProc.Wrapper;
	public PlayGo_CheckInstalledAllChunks_GetResult PlayGo_CheckInstalledAllChunks_GetResult => _PlayGo_CheckInstalledAllChunks_GetResult.Wrapper;
	public PlayGo_OpenProgressBar_Request PlayGo_OpenProgressBar_Request => _PlayGo_OpenProgressBar_Request.Wrapper;
	public PlayGo_OpenProgressBar_IsEndProc PlayGo_OpenProgressBar_IsEndProc => _PlayGo_OpenProgressBar_IsEndProc.Wrapper;
	public GetFaceScalptureMag GetFaceScalptureMag => _GetFaceScalptureMag.Wrapper;
	public OpenFaceScalptureMagUI OpenFaceScalptureMagUI => _OpenFaceScalptureMagUI.Wrapper;
	public IsEndFaceScalptureMagUI IsEndFaceScalptureMagUI => _IsEndFaceScalptureMagUI.Wrapper;
	public DebugDrawTexture_Begin DebugDrawTexture_Begin => _DebugDrawTexture_Begin.Wrapper;
	public DebugDrawTexture_End DebugDrawTexture_End => _DebugDrawTexture_End.Wrapper;
	public DebugPartyPreset DebugPartyPreset => _DebugPartyPreset.Wrapper;
	public DebugMorningSetStatusIndex DebugMorningSetStatusIndex => _DebugMorningSetStatusIndex.Wrapper;
	public DebugDinnerSetStatusIndex DebugDinnerSetStatusIndex => _DebugDinnerSetStatusIndex.Wrapper;
	public DebugDinnerResetStatusIndex DebugDinnerResetStatusIndex => _DebugDinnerResetStatusIndex.Wrapper;
	public DebugInitializeGameID DebugInitializeGameID => _DebugInitializeGameID.Wrapper;
	public DebugFlagsON DebugFlagsON => _DebugFlagsON.Wrapper;
	public MoviePlay_DEBUG MoviePlay_DEBUG => _MoviePlay_DEBUG.Wrapper;
	public DebugSendTestPlayData DebugSendTestPlayData => _DebugSendTestPlayData.Wrapper;
	public TAIL TAIL => _TAIL.Wrapper;
	public XE_AAAAA XE_AAAAA => _XE_AAAAA.Wrapper;
	public IS_ENTER_PUSHED IS_ENTER_PUSHED => _IS_ENTER_PUSHED.Wrapper;
	public FldGetMsg FldGetMsg => _FldGetMsg.Wrapper;
	public FldIsCanUseCommand FldIsCanUseCommand => _FldIsCanUseCommand.Wrapper;
	public FldGetDeltaTime FldGetDeltaTime => _FldGetDeltaTime.Wrapper;
	public FldSetSceneSpeedRate FldSetSceneSpeedRate => _FldSetSceneSpeedRate.Wrapper;
	public FldGetStartPosID FldGetStartPosID => _FldGetStartPosID.Wrapper;
	public FldGetPosIDByLayoutName FldGetPosIDByLayoutName => _FldGetPosIDByLayoutName.Wrapper;
	public FldIsShingan FldIsShingan => _FldIsShingan.Wrapper;
	public FldSetShingan FldSetShingan => _FldSetShingan.Wrapper;
	public FldInitFadeCustom FldInitFadeCustom => _FldInitFadeCustom.Wrapper;
	public FldInitStopAutoSaveOnFadeIn FldInitStopAutoSaveOnFadeIn => _FldInitStopAutoSaveOnFadeIn.Wrapper;
	public FldInitIsFadeIn FldInitIsFadeIn => _FldInitIsFadeIn.Wrapper;
	public FldLocalSetInt FldLocalSetInt => _FldLocalSetInt.Wrapper;
	public FldLocalGetInt FldLocalGetInt => _FldLocalGetInt.Wrapper;
	public FldLocalSetFloat FldLocalSetFloat => _FldLocalSetFloat.Wrapper;
	public FldLocalGetFloat FldLocalGetFloat => _FldLocalGetFloat.Wrapper;
	public FldLocalSetFlag FldLocalSetFlag => _FldLocalSetFlag.Wrapper;
	public FldLocalGetFlag FldLocalGetFlag => _FldLocalGetFlag.Wrapper;
	public FldBgmSetOverrideByCueID FldBgmSetOverrideByCueID => _FldBgmSetOverrideByCueID.Wrapper;
	public FldBgmResetOverride FldBgmResetOverride => _FldBgmResetOverride.Wrapper;
	public FldBgmSetForceFastBattle FldBgmSetForceFastBattle => _FldBgmSetForceFastBattle.Wrapper;
	public FldSoundEnvSetOverrideByCueID FldSoundEnvSetOverrideByCueID => _FldSoundEnvSetOverrideByCueID.Wrapper;
	public FldSoundEnvResetOverride FldSoundEnvResetOverride => _FldSoundEnvResetOverride.Wrapper;
	public FldEnvLoadOverride FldEnvLoadOverride => _FldEnvLoadOverride.Wrapper;
	public FldEnvLoadOverride_Area FldEnvLoadOverride_Area => _FldEnvLoadOverride_Area.Wrapper;
	public FldEnvIsEndLoadOverride FldEnvIsEndLoadOverride => _FldEnvIsEndLoadOverride.Wrapper;
	public FldEnvSetOverrideActive FldEnvSetOverrideActive => _FldEnvSetOverrideActive.Wrapper;
	public FldTopUISetDefault FldTopUISetDefault => _FldTopUISetDefault.Wrapper;
	public FldTopUISetFieldEvent FldTopUISetFieldEvent => _FldTopUISetFieldEvent.Wrapper;
	public FldTopUISetFieldEventNoMessage FldTopUISetFieldEventNoMessage => _FldTopUISetFieldEventNoMessage.Wrapper;
	public FldTopUISetInval FldTopUISetInval => _FldTopUISetInval.Wrapper;
	public FldLocationNameUIStopAuto FldLocationNameUIStopAuto => _FldLocationNameUIStopAuto.Wrapper;
	public FldLocationNameUIOpen FldLocationNameUIOpen => _FldLocationNameUIOpen.Wrapper;
	public FldLocationNameUIIsEnd FldLocationNameUIIsEnd => _FldLocationNameUIIsEnd.Wrapper;
	public fldChallengeUIStart fldChallengeUIStart => _fldChallengeUIStart.Wrapper;
	public fldChallengeUIComplete fldChallengeUIComplete => _fldChallengeUIComplete.Wrapper;
	public fldChallengeIsUIEnd fldChallengeIsUIEnd => _fldChallengeIsUIEnd.Wrapper;
	public FldMapIconUpdateParam FldMapIconUpdateParam => _FldMapIconUpdateParam.Wrapper;
	public FldLargeMapOpen FldLargeMapOpen => _FldLargeMapOpen.Wrapper;
	public FldLargeMapIsClosed FldLargeMapIsClosed => _FldLargeMapIsClosed.Wrapper;
	public FldFastBtlIsHaveKilled FldFastBtlIsHaveKilled => _FldFastBtlIsHaveKilled.Wrapper;
	public FldFastBtlGetAttackRateType FldFastBtlGetAttackRateType => _FldFastBtlGetAttackRateType.Wrapper;
	public FldFastBtlGetAttackRate FldFastBtlGetAttackRate => _FldFastBtlGetAttackRate.Wrapper;
	public FldFastBtlGetAttackRefParameterID FldFastBtlGetAttackRefParameterID => _FldFastBtlGetAttackRefParameterID.Wrapper;
	public FldHourGet FldHourGet => _FldHourGet.Wrapper;
	public FldHourAdd FldHourAdd => _FldHourAdd.Wrapper;
	public FldHourSet FldHourSet => _FldHourSet.Wrapper;
	public FldHourIsSetEnd FldHourIsSetEnd => _FldHourIsSetEnd.Wrapper;
	public FldHourReset FldHourReset => _FldHourReset.Wrapper;
	public FldHourCallScript FldHourCallScript => _FldHourCallScript.Wrapper;
	public FldHourSetSunset FldHourSetSunset => _FldHourSetSunset.Wrapper;
	public FldScriptEventAssistSetCameraType FldScriptEventAssistSetCameraType => _FldScriptEventAssistSetCameraType.Wrapper;
	public FldScriptEventAssistSetCameraParam_Rotate FldScriptEventAssistSetCameraParam_Rotate => _FldScriptEventAssistSetCameraParam_Rotate.Wrapper;
	public FldScriptEventAssistResetCameraParam FldScriptEventAssistResetCameraParam => _FldScriptEventAssistResetCameraParam.Wrapper;
	public FldScriptEventAssistSetCharaType FldScriptEventAssistSetCharaType => _FldScriptEventAssistSetCharaType.Wrapper;
	public FldScriptEventAssistAddNpc FldScriptEventAssistAddNpc => _FldScriptEventAssistAddNpc.Wrapper;
	public FldScriptEventAssistSetCharaParam_Talk FldScriptEventAssistSetCharaParam_Talk => _FldScriptEventAssistSetCharaParam_Talk.Wrapper;
	public FldScriptEventAssistResetCharaParam FldScriptEventAssistResetCharaParam => _FldScriptEventAssistResetCharaParam.Wrapper;
	public FldMorningIsNeed FldMorningIsNeed => _FldMorningIsNeed.Wrapper;
	public FldMorningStart FldMorningStart => _FldMorningStart.Wrapper;
	public FldMorningIsReady FldMorningIsReady => _FldMorningIsReady.Wrapper;
	public FldMorningEnd FldMorningEnd => _FldMorningEnd.Wrapper;
	public FldMorningGetMsgNum FldMorningGetMsgNum => _FldMorningGetMsgNum.Wrapper;
	public FldMoringGetSpeakerID FldMoringGetSpeakerID => _FldMoringGetSpeakerID.Wrapper;
	public FldMorningMsgRequest FldMorningMsgRequest => _FldMorningMsgRequest.Wrapper;
	public FldMorningTravelLastMessageRequest FldMorningTravelLastMessageRequest => _FldMorningTravelLastMessageRequest.Wrapper;
	public FldMorningSetupItem FldMorningSetupItem => _FldMorningSetupItem.Wrapper;
	public FldMorningSetObjVisibleTmpByResrcUid FldMorningSetObjVisibleTmpByResrcUid => _FldMorningSetObjVisibleTmpByResrcUid.Wrapper;
	public FldMorningSetObjTransformTmpByResrcUid FldMorningSetObjTransformTmpByResrcUid => _FldMorningSetObjTransformTmpByResrcUid.Wrapper;
	public FldMorningQuestEventUnexecutedDaysCountReset FldMorningQuestEventUnexecutedDaysCountReset => _FldMorningQuestEventUnexecutedDaysCountReset.Wrapper;
	public FldMorningQuestEventUnexecutedDaysCountUp FldMorningQuestEventUnexecutedDaysCountUp => _FldMorningQuestEventUnexecutedDaysCountUp.Wrapper;
	public FldMorningIsExistAboutD07GK FldMorningIsExistAboutD07GK => _FldMorningIsExistAboutD07GK.Wrapper;
	public FldMorningGetMsgNum_D07GK FldMorningGetMsgNum_D07GK => _FldMorningGetMsgNum_D07GK.Wrapper;
	public FldMorningMsgRequest_D07GK FldMorningMsgRequest_D07GK => _FldMorningMsgRequest_D07GK.Wrapper;
	public FldMorningMsgRequest_D07GK_End FldMorningMsgRequest_D07GK_End => _FldMorningMsgRequest_D07GK_End.Wrapper;
	public FldDbgGetMorningMsgPattern FldDbgGetMorningMsgPattern => _FldDbgGetMorningMsgPattern.Wrapper;
	public FldDinnerStart FldDinnerStart => _FldDinnerStart.Wrapper;
	public FldDinnerIsReady FldDinnerIsReady => _FldDinnerIsReady.Wrapper;
	public FldDinnerEnd FldDinnerEnd => _FldDinnerEnd.Wrapper;
	public FldDinnerMsgIsSelectedChoice FldDinnerMsgIsSelectedChoice => _FldDinnerMsgIsSelectedChoice.Wrapper;
	public FldDinnerMsgRequest FldDinnerMsgRequest => _FldDinnerMsgRequest.Wrapper;
	public FldDinnerGetMsgType FldDinnerGetMsgType => _FldDinnerGetMsgType.Wrapper;
	public FldDinnerSetupItem FldDinnerSetupItem => _FldDinnerSetupItem.Wrapper;
	public FldDinnerSetObjVisibleTmpByResrcUid FldDinnerSetObjVisibleTmpByResrcUid => _FldDinnerSetObjVisibleTmpByResrcUid.Wrapper;
	public FldDinnerSetObjTransformTmpByResrcUid FldDinnerSetObjTransformTmpByResrcUid => _FldDinnerSetObjTransformTmpByResrcUid.Wrapper;
	public FldDinnerResetStatusIndex FldDinnerResetStatusIndex => _FldDinnerResetStatusIndex.Wrapper;
	public FldDinnerUpdateQuestStatus FldDinnerUpdateQuestStatus => _FldDinnerUpdateQuestStatus.Wrapper;
	public FldDinnerSaveSpotPoint FldDinnerSaveSpotPoint => _FldDinnerSaveSpotPoint.Wrapper;
	public FldDinnerSaveRivalPoint FldDinnerSaveRivalPoint => _FldDinnerSaveRivalPoint.Wrapper;
	public FldDinnerSaveRivalPath FldDinnerSaveRivalPath => _FldDinnerSaveRivalPath.Wrapper;
	public FldDinnerSaveStay FldDinnerSaveStay => _FldDinnerSaveStay.Wrapper;
	public FldDinnerSaveClassLevel FldDinnerSaveClassLevel => _FldDinnerSaveClassLevel.Wrapper;
	public FldDinnerIsOccurredYestoday FldDinnerIsOccurredYestoday => _FldDinnerIsOccurredYestoday.Wrapper;
	public FldDinnerUpdateOccurredStatus FldDinnerUpdateOccurredStatus => _FldDinnerUpdateOccurredStatus.Wrapper;
	public FldDinnerUpdateSaveData FldDinnerUpdateSaveData => _FldDinnerUpdateSaveData.Wrapper;
	public FldDbgGetDinnerMsgPattern FldDbgGetDinnerMsgPattern => _FldDbgGetDinnerMsgPattern.Wrapper;
	public FldQuestIsExistCanDebrief FldQuestIsExistCanDebrief => _FldQuestIsExistCanDebrief.Wrapper;
	public FldQuestDungeonIsExistEntranceEvent FldQuestDungeonIsExistEntranceEvent => _FldQuestDungeonIsExistEntranceEvent.Wrapper;
	public FldQuestDungeonCallEntranceEvent FldQuestDungeonCallEntranceEvent => _FldQuestDungeonCallEntranceEvent.Wrapper;
	public FldKeyFreeHintGetMsgNum FldKeyFreeHintGetMsgNum => _FldKeyFreeHintGetMsgNum.Wrapper;
	public FldKeyFreeHintMsgRequest FldKeyFreeHintMsgRequest => _FldKeyFreeHintMsgRequest.Wrapper;
	public FldKeyFreeHintIsNeedQuestWarning FldKeyFreeHintIsNeedQuestWarning => _FldKeyFreeHintIsNeedQuestWarning.Wrapper;
	public FldKeyFreeHintSetByMapShortCut FldKeyFreeHintSetByMapShortCut => _FldKeyFreeHintSetByMapShortCut.Wrapper;
	public FldAcademeiaSetIsShowLearnState FldAcademeiaSetIsShowLearnState => _FldAcademeiaSetIsShowLearnState.Wrapper;
	public FldAcademeiaIsLearnedClass FldAcademeiaIsLearnedClass => _FldAcademeiaIsLearnedClass.Wrapper;
	public FldAcademeiaSetIsLearnedClass FldAcademeiaSetIsLearnedClass => _FldAcademeiaSetIsLearnedClass.Wrapper;
	public FldMsgReportOpen FldMsgReportOpen => _FldMsgReportOpen.Wrapper;
	public FldMsgReportDungeonScenario FldMsgReportDungeonScenario => _FldMsgReportDungeonScenario.Wrapper;
	public FldMsgReportQuestScenario FldMsgReportQuestScenario => _FldMsgReportQuestScenario.Wrapper;
	public FldMsgReportQuestProgress FldMsgReportQuestProgress => _FldMsgReportQuestProgress.Wrapper;
	public FldMsgReportDowntownAtmosphere FldMsgReportDowntownAtmosphere => _FldMsgReportDowntownAtmosphere.Wrapper;
	public FldMsgReportDowntownScenario FldMsgReportDowntownScenario => _FldMsgReportDowntownScenario.Wrapper;
	public FldMsgReportCarWeather FldMsgReportCarWeather => _FldMsgReportCarWeather.Wrapper;
	public FldMsgReportCarTimeElapsing FldMsgReportCarTimeElapsing => _FldMsgReportCarTimeElapsing.Wrapper;
	public FldEventStart FldEventStart => _FldEventStart.Wrapper;
	public FldEventEnd FldEventEnd => _FldEventEnd.Wrapper;
	public FldAutoSaveSetPosByPosID FldAutoSaveSetPosByPosID => _FldAutoSaveSetPosByPosID.Wrapper;
	public FldDungeonEscapeIsCanEscape FldDungeonEscapeIsCanEscape => _FldDungeonEscapeIsCanEscape.Wrapper;
	public FldDungeonEscapeStartEscape FldDungeonEscapeStartEscape => _FldDungeonEscapeStartEscape.Wrapper;
	public FldEffectLoad FldEffectLoad => _FldEffectLoad.Wrapper;
	public FldEffectIsEndLoad FldEffectIsEndLoad => _FldEffectIsEndLoad.Wrapper;
	public FldEffectRelease FldEffectRelease => _FldEffectRelease.Wrapper;
	public FldEffectPlay FldEffectPlay => _FldEffectPlay.Wrapper;
	public FldEffectPlayByResrc FldEffectPlayByResrc => _FldEffectPlayByResrc.Wrapper;
	public FldEffectIsEndPlay FldEffectIsEndPlay => _FldEffectIsEndPlay.Wrapper;
	public FldEffectStop FldEffectStop => _FldEffectStop.Wrapper;
	public FldEffectStopByType FldEffectStopByType => _FldEffectStopByType.Wrapper;
	public FldEffectPreLoadToPlay FldEffectPreLoadToPlay => _FldEffectPreLoadToPlay.Wrapper;
	public FldEffectIsEndPreLoadToPlay FldEffectIsEndPreLoadToPlay => _FldEffectIsEndPreLoadToPlay.Wrapper;
	public FldEffectPlayByPreLoad FldEffectPlayByPreLoad => _FldEffectPlayByPreLoad.Wrapper;
	public FldEffectPlayByResrcByPreLoad FldEffectPlayByResrcByPreLoad => _FldEffectPlayByResrcByPreLoad.Wrapper;
	public FldCameraSetToDefault FldCameraSetToDefault => _FldCameraSetToDefault.Wrapper;
	public FldCameraSetToDefault_Param FldCameraSetToDefault_Param => _FldCameraSetToDefault_Param.Wrapper;
	public FldCameraSetToPath FldCameraSetToPath => _FldCameraSetToPath.Wrapper;
	public FldCameraSetToExcel FldCameraSetToExcel => _FldCameraSetToExcel.Wrapper;
	public FldCameraSetToLayout FldCameraSetToLayout => _FldCameraSetToLayout.Wrapper;
	public FldCameraSetToParam_Pos FldCameraSetToParam_Pos => _FldCameraSetToParam_Pos.Wrapper;
	public FldCameraSetToParam_Angle FldCameraSetToParam_Angle => _FldCameraSetToParam_Angle.Wrapper;
	public FldCameraSetToParam_AngleToTgt FldCameraSetToParam_AngleToTgt => _FldCameraSetToParam_AngleToTgt.Wrapper;
	public FldCameraSetToParam_Fovy FldCameraSetToParam_Fovy => _FldCameraSetToParam_Fovy.Wrapper;
	public FldCameraSetToParam_NearClip FldCameraSetToParam_NearClip => _FldCameraSetToParam_NearClip.Wrapper;
	public FldCameraSetTgt_Player FldCameraSetTgt_Player => _FldCameraSetTgt_Player.Wrapper;
	public FldCameraSetTgt_Member FldCameraSetTgt_Member => _FldCameraSetTgt_Member.Wrapper;
	public FldCameraSetTgt_Enemy FldCameraSetTgt_Enemy => _FldCameraSetTgt_Enemy.Wrapper;
	public FldCameraSetTgt_Npc FldCameraSetTgt_Npc => _FldCameraSetTgt_Npc.Wrapper;
	public FldCameraSetTgt_Gimmick FldCameraSetTgt_Gimmick => _FldCameraSetTgt_Gimmick.Wrapper;
	public FldCameraSetTgt_Door FldCameraSetTgt_Door => _FldCameraSetTgt_Door.Wrapper;
	public FldCameraSetWideMode FldCameraSetWideMode => _FldCameraSetWideMode.Wrapper;
	public FldCameraSetHeightMode FldCameraSetHeightMode => _FldCameraSetHeightMode.Wrapper;
	public FldCameraIsTypeFollow FldCameraIsTypeFollow => _FldCameraIsTypeFollow.Wrapper;
	public FldCameraFollow_SetYaw FldCameraFollow_SetYaw => _FldCameraFollow_SetYaw.Wrapper;
	public FldCameraPath_SetFollowTarget FldCameraPath_SetFollowTarget => _FldCameraPath_SetFollowTarget.Wrapper;
	public FldCameraPath_SetRate FldCameraPath_SetRate => _FldCameraPath_SetRate.Wrapper;
	public FldCameraPath_SetAutoChange FldCameraPath_SetAutoChange => _FldCameraPath_SetAutoChange.Wrapper;
	public FldCameraGetRelativeToPlayerDir_Yaw FldCameraGetRelativeToPlayerDir_Yaw => _FldCameraGetRelativeToPlayerDir_Yaw.Wrapper;
	public FldCameraGetRelativeToPlayerDir_Pitch FldCameraGetRelativeToPlayerDir_Pitch => _FldCameraGetRelativeToPlayerDir_Pitch.Wrapper;
	public FldCameraGetRelativeToPlayerDir_Diff FldCameraGetRelativeToPlayerDir_Diff => _FldCameraGetRelativeToPlayerDir_Diff.Wrapper;
	public FldCameraUpdateCameraBox FldCameraUpdateCameraBox => _FldCameraUpdateCameraBox.Wrapper;
	public FldCameraSetIsShake FldCameraSetIsShake => _FldCameraSetIsShake.Wrapper;
	public FldCameraEffectSetVisible FldCameraEffectSetVisible => _FldCameraEffectSetVisible.Wrapper;
	public FldPlayerGetResScrID FldPlayerGetResScrID => _FldPlayerGetResScrID.Wrapper;
	public FldPlayerGetDegToEnemy FldPlayerGetDegToEnemy => _FldPlayerGetDegToEnemy.Wrapper;
	public FldPlayerSetDeg FldPlayerSetDeg => _FldPlayerSetDeg.Wrapper;
	public FldPlayerAddDeg FldPlayerAddDeg => _FldPlayerAddDeg.Wrapper;
	public FldPlayerSetPos FldPlayerSetPos => _FldPlayerSetPos.Wrapper;
	public FldPlayerSetPosParam FldPlayerSetPosParam => _FldPlayerSetPosParam.Wrapper;
	public FldPlayerSetPosAddParam FldPlayerSetPosAddParam => _FldPlayerSetPosAddParam.Wrapper;
	public FldPlayerTurnToDeg FldPlayerTurnToDeg => _FldPlayerTurnToDeg.Wrapper;
	public FldPlayerTurnAddDeg FldPlayerTurnAddDeg => _FldPlayerTurnAddDeg.Wrapper;
	public FldPlayerRun FldPlayerRun => _FldPlayerRun.Wrapper;
	public FldPlayerRunToPos FldPlayerRunToPos => _FldPlayerRunToPos.Wrapper;
	public FldPlayerRunToPosParam FldPlayerRunToPosParam => _FldPlayerRunToPosParam.Wrapper;
	public FldPlayerSetAndRunToPos FldPlayerSetAndRunToPos => _FldPlayerSetAndRunToPos.Wrapper;
	public FldPlayerSetAndRunToPosParam FldPlayerSetAndRunToPosParam => _FldPlayerSetAndRunToPosParam.Wrapper;
	public FldPlayerWalk FldPlayerWalk => _FldPlayerWalk.Wrapper;
	public FldPlayerWalkToPos FldPlayerWalkToPos => _FldPlayerWalkToPos.Wrapper;
	public FldPlayerWalkToPosParam FldPlayerWalkToPosParam => _FldPlayerWalkToPosParam.Wrapper;
	public FldPlayerSetAndWalkToPos FldPlayerSetAndWalkToPos => _FldPlayerSetAndWalkToPos.Wrapper;
	public FldPlayerSetAndWalkToPosParam FldPlayerSetAndWalkToPosParam => _FldPlayerSetAndWalkToPosParam.Wrapper;
	public FldPlayerRunToTbox FldPlayerRunToTbox => _FldPlayerRunToTbox.Wrapper;
	public FldPlayerSetPosToTbox FldPlayerSetPosToTbox => _FldPlayerSetPosToTbox.Wrapper;
	public FldPlayerSetPosToGimmick FldPlayerSetPosToGimmick => _FldPlayerSetPosToGimmick.Wrapper;
	public FldPlayerWalkToDoor FldPlayerWalkToDoor => _FldPlayerWalkToDoor.Wrapper;
	public FldPlayerWalkToDoorCustom FldPlayerWalkToDoorCustom => _FldPlayerWalkToDoorCustom.Wrapper;
	public FldPlayerSetToDoor FldPlayerSetToDoor => _FldPlayerSetToDoor.Wrapper;
	public FldPlayerSetToDoorCustom FldPlayerSetToDoorCustom => _FldPlayerSetToDoorCustom.Wrapper;
	public FldPlayerSetByNpc FldPlayerSetByNpc => _FldPlayerSetByNpc.Wrapper;
	public FldPlayerSetByEnemy FldPlayerSetByEnemy => _FldPlayerSetByEnemy.Wrapper;
	public FldPlayerSetByDoor FldPlayerSetByDoor => _FldPlayerSetByDoor.Wrapper;
	public FldPlayerSetByLadder FldPlayerSetByLadder => _FldPlayerSetByLadder.Wrapper;
	public FldPlayerSetByTbox FldPlayerSetByTbox => _FldPlayerSetByTbox.Wrapper;
	public FldPlayerSetByObj FldPlayerSetByObj => _FldPlayerSetByObj.Wrapper;
	public FldPlayerSetByGather FldPlayerSetByGather => _FldPlayerSetByGather.Wrapper;
	public FldPlayerSetByGimmick FldPlayerSetByGimmick => _FldPlayerSetByGimmick.Wrapper;
	public FldPlayerSetByBgObj FldPlayerSetByBgObj => _FldPlayerSetByBgObj.Wrapper;
	public FldPlayerSetByHitCollis FldPlayerSetByHitCollis => _FldPlayerSetByHitCollis.Wrapper;
	public FldPlayerRunToBack FldPlayerRunToBack => _FldPlayerRunToBack.Wrapper;
	public FldPlayerRunByHitCollis FldPlayerRunByHitCollis => _FldPlayerRunByHitCollis.Wrapper;
	public FldPlayerRunToBackByHitCollis FldPlayerRunToBackByHitCollis => _FldPlayerRunToBackByHitCollis.Wrapper;
	public FldPlayerRunToFrontByHitCollis FldPlayerRunToFrontByHitCollis => _FldPlayerRunToFrontByHitCollis.Wrapper;
	public FldPlayerWalkByHitCollis FldPlayerWalkByHitCollis => _FldPlayerWalkByHitCollis.Wrapper;
	public FldPlayerWalkToBackByHitCollis FldPlayerWalkToBackByHitCollis => _FldPlayerWalkToBackByHitCollis.Wrapper;
	public FldPlayerWalkToFrontByHitCollis FldPlayerWalkToFrontByHitCollis => _FldPlayerWalkToFrontByHitCollis.Wrapper;
	public FldPlayerRunToBackByDoor FldPlayerRunToBackByDoor => _FldPlayerRunToBackByDoor.Wrapper;
	public FldPlayerRunToFrontByDoor FldPlayerRunToFrontByDoor => _FldPlayerRunToFrontByDoor.Wrapper;
	public FldPlayerWalkToBackByDoor FldPlayerWalkToBackByDoor => _FldPlayerWalkToBackByDoor.Wrapper;
	public FldPlayerWalkToFrontByDoor FldPlayerWalkToFrontByDoor => _FldPlayerWalkToFrontByDoor.Wrapper;
	public FldPlayerSetKeySepMoveRate FldPlayerSetKeySepMoveRate => _FldPlayerSetKeySepMoveRate.Wrapper;
	public FldPlayerSetAnim FldPlayerSetAnim => _FldPlayerSetAnim.Wrapper;
	public FldPlayerSetAnimParam FldPlayerSetAnimParam => _FldPlayerSetAnimParam.Wrapper;
	public FldPlayerSetAnimParamImmidiately FldPlayerSetAnimParamImmidiately => _FldPlayerSetAnimParamImmidiately.Wrapper;
	public FldPlayerIsAnimEnd FldPlayerIsAnimEnd => _FldPlayerIsAnimEnd.Wrapper;
	public FldPlayerSetAddAnim FldPlayerSetAddAnim => _FldPlayerSetAddAnim.Wrapper;
	public FldPlayerSetAnimSoundActive FldPlayerSetAnimSoundActive => _FldPlayerSetAnimSoundActive.Wrapper;
	public FldPlayerPlayABL FldPlayerPlayABL => _FldPlayerPlayABL.Wrapper;
	public FldPlayerStopABL FldPlayerStopABL => _FldPlayerStopABL.Wrapper;
	public FldPlayerPreLoadEffect FldPlayerPreLoadEffect => _FldPlayerPreLoadEffect.Wrapper;
	public FldPlayerIsEndPreLoadEffect FldPlayerIsEndPreLoadEffect => _FldPlayerIsEndPreLoadEffect.Wrapper;
	public FldPlayerPlayEffectByPreLoad FldPlayerPlayEffectByPreLoad => _FldPlayerPlayEffectByPreLoad.Wrapper;
	public FldPlayerPlayEffect FldPlayerPlayEffect => _FldPlayerPlayEffect.Wrapper;
	public FldPlayerIsAutoCtrl FldPlayerIsAutoCtrl => _FldPlayerIsAutoCtrl.Wrapper;
	public FldPlayerSetColActive FldPlayerSetColActive => _FldPlayerSetColActive.Wrapper;
	public FldPlayerGetBasePose FldPlayerGetBasePose => _FldPlayerGetBasePose.Wrapper;
	public FldPlayerSetBasePose FldPlayerSetBasePose => _FldPlayerSetBasePose.Wrapper;
	public FldPlayerSetAction FldPlayerSetAction => _FldPlayerSetAction.Wrapper;
	public FldPlayerSetActionAsAutoCtrl FldPlayerSetActionAsAutoCtrl => _FldPlayerSetActionAsAutoCtrl.Wrapper;
	public FldPlayerSetActionWaitTime FldPlayerSetActionWaitTime => _FldPlayerSetActionWaitTime.Wrapper;
	public FldPlayerEndLoopAction FldPlayerEndLoopAction => _FldPlayerEndLoopAction.Wrapper;
	public FldPlayerIsLoopActionLoopState FldPlayerIsLoopActionLoopState => _FldPlayerIsLoopActionLoopState.Wrapper;
	public FldPlayerIsWaitAction FldPlayerIsWaitAction => _FldPlayerIsWaitAction.Wrapper;
	public FldPlayerSetDrawSword FldPlayerSetDrawSword => _FldPlayerSetDrawSword.Wrapper;
	public FldPlayerIsDrawSword FldPlayerIsDrawSword => _FldPlayerIsDrawSword.Wrapper;
	public FldPlayerSetVisible FldPlayerSetVisible => _FldPlayerSetVisible.Wrapper;
	public FldPlayerStartFade FldPlayerStartFade => _FldPlayerStartFade.Wrapper;
	public FldPlayerPlayIcon FldPlayerPlayIcon => _FldPlayerPlayIcon.Wrapper;
	public FldPlayerStopIcon FldPlayerStopIcon => _FldPlayerStopIcon.Wrapper;
	public FldPlayerLookAtStart FldPlayerLookAtStart => _FldPlayerLookAtStart.Wrapper;
	public FldPlayerLookAtSetType FldPlayerLookAtSetType => _FldPlayerLookAtSetType.Wrapper;
	public FldPlayerLookAtSetMember FldPlayerLookAtSetMember => _FldPlayerLookAtSetMember.Wrapper;
	public FldPlayerLookAtSetNpc FldPlayerLookAtSetNpc => _FldPlayerLookAtSetNpc.Wrapper;
	public FldPlayerLookAtSetPos FldPlayerLookAtSetPos => _FldPlayerLookAtSetPos.Wrapper;
	public FldPlayerLookAtSetDeg FldPlayerLookAtSetDeg => _FldPlayerLookAtSetDeg.Wrapper;
	public FldPlayerLookAtEnd FldPlayerLookAtEnd => _FldPlayerLookAtEnd.Wrapper;
	public FldPlayerSetInputLock FldPlayerSetInputLock => _FldPlayerSetInputLock.Wrapper;
	public FldPlayerIsInputLock FldPlayerIsInputLock => _FldPlayerIsInputLock.Wrapper;
	public FldPlayerSetActionLock FldPlayerSetActionLock => _FldPlayerSetActionLock.Wrapper;
	public FldPlayerSetIsForceSquat FldPlayerSetIsForceSquat => _FldPlayerSetIsForceSquat.Wrapper;
	public FldPlayerSetIsForceDash FldPlayerSetIsForceDash => _FldPlayerSetIsForceDash.Wrapper;
	public FldPlayerSetIsForceMove FldPlayerSetIsForceMove => _FldPlayerSetIsForceMove.Wrapper;
	public FldPlayerSetIsMoveFollowCurve FldPlayerSetIsMoveFollowCurve => _FldPlayerSetIsMoveFollowCurve.Wrapper;
	public FldPlayerSetIsMoveFollowCamera FldPlayerSetIsMoveFollowCamera => _FldPlayerSetIsMoveFollowCamera.Wrapper;
	public FldPlayerSetIsFixInputL_Up FldPlayerSetIsFixInputL_Up => _FldPlayerSetIsFixInputL_Up.Wrapper;
	public FldPlayerGetAttackID FldPlayerGetAttackID => _FldPlayerGetAttackID.Wrapper;
	public FldPlayerGetAttackAttribute FldPlayerGetAttackAttribute => _FldPlayerGetAttackAttribute.Wrapper;
	public FldPlayerAttachItem FldPlayerAttachItem => _FldPlayerAttachItem.Wrapper;
	public FldPlayerIsAttachmentItemReady FldPlayerIsAttachmentItemReady => _FldPlayerIsAttachmentItemReady.Wrapper;
	public FldPlayerDetachItem FldPlayerDetachItem => _FldPlayerDetachItem.Wrapper;
	public FldPlayerPlayBattleVoice FldPlayerPlayBattleVoice => _FldPlayerPlayBattleVoice.Wrapper;
	public FldPlayerPlayPartVoice FldPlayerPlayPartVoice => _FldPlayerPlayPartVoice.Wrapper;
	public FldPlayerSetIsMebika FldPlayerSetIsMebika => _FldPlayerSetIsMebika.Wrapper;
	public FldPlayerSetMebikaCustom FldPlayerSetMebikaCustom => _FldPlayerSetMebikaCustom.Wrapper;
	public FldPlayerSetArchetypeModelVisible FldPlayerSetArchetypeModelVisible => _FldPlayerSetArchetypeModelVisible.Wrapper;
	public FldSetPlayerPos FldSetPlayerPos => _FldSetPlayerPos.Wrapper;
	public FldSetPlayerPosParam FldSetPlayerPosParam => _FldSetPlayerPosParam.Wrapper;
	public FldMemberGetUidByCharaID FldMemberGetUidByCharaID => _FldMemberGetUidByCharaID.Wrapper;
	public FldMemberIsExistByCharaID FldMemberIsExistByCharaID => _FldMemberIsExistByCharaID.Wrapper;
	public FldMemberGetFollowIndexMax FldMemberGetFollowIndexMax => _FldMemberGetFollowIndexMax.Wrapper;
	public FldMemberGetUidByFollowIndex FldMemberGetUidByFollowIndex => _FldMemberGetUidByFollowIndex.Wrapper;
	public FldMemberCreateByCharaID FldMemberCreateByCharaID => _FldMemberCreateByCharaID.Wrapper;
	public FldMemberIsSetup FldMemberIsSetup => _FldMemberIsSetup.Wrapper;
	public FldMemberDelete FldMemberDelete => _FldMemberDelete.Wrapper;
	public FldMemberSetAIActive FldMemberSetAIActive => _FldMemberSetAIActive.Wrapper;
	public FldMemberIsAIActive FldMemberIsAIActive => _FldMemberIsAIActive.Wrapper;
	public FldMemberSetAIState_Event FldMemberSetAIState_Event => _FldMemberSetAIState_Event.Wrapper;
	public FldMemberSetColActive_AdjustGround FldMemberSetColActive_AdjustGround => _FldMemberSetColActive_AdjustGround.Wrapper;
	public FldMemberGetDegToPlayer FldMemberGetDegToPlayer => _FldMemberGetDegToPlayer.Wrapper;
	public FldMemberSetDeg FldMemberSetDeg => _FldMemberSetDeg.Wrapper;
	public FldMemberSetPos FldMemberSetPos => _FldMemberSetPos.Wrapper;
	public FldMemberSetPosParam FldMemberSetPosParam => _FldMemberSetPosParam.Wrapper;
	public FldMemberTurnToDeg FldMemberTurnToDeg => _FldMemberTurnToDeg.Wrapper;
	public FldMemberTurnAddDeg FldMemberTurnAddDeg => _FldMemberTurnAddDeg.Wrapper;
	public FldMemberRun FldMemberRun => _FldMemberRun.Wrapper;
	public FldMemberRunToPos FldMemberRunToPos => _FldMemberRunToPos.Wrapper;
	public FldMemberRunToPosParam FldMemberRunToPosParam => _FldMemberRunToPosParam.Wrapper;
	public FldMemberSetAndRunToPos FldMemberSetAndRunToPos => _FldMemberSetAndRunToPos.Wrapper;
	public FldMemberSetAndRunToPosParam FldMemberSetAndRunToPosParam => _FldMemberSetAndRunToPosParam.Wrapper;
	public FldMemberWalk FldMemberWalk => _FldMemberWalk.Wrapper;
	public FldMemberWalkToPos FldMemberWalkToPos => _FldMemberWalkToPos.Wrapper;
	public FldMemberWalkToPosParam FldMemberWalkToPosParam => _FldMemberWalkToPosParam.Wrapper;
	public FldMemberSetAndWalkToPos FldMemberSetAndWalkToPos => _FldMemberSetAndWalkToPos.Wrapper;
	public FldMemberSetAndWalkToPosParam FldMemberSetAndWalkToPosParam => _FldMemberSetAndWalkToPosParam.Wrapper;
	public FldMemberSetFormation FldMemberSetFormation => _FldMemberSetFormation.Wrapper;
	public FldMemberRunToFormation FldMemberRunToFormation => _FldMemberRunToFormation.Wrapper;
	public FldMemberSetAndRunToFormation FldMemberSetAndRunToFormation => _FldMemberSetAndRunToFormation.Wrapper;
	public FldMemberWalkToFormation FldMemberWalkToFormation => _FldMemberWalkToFormation.Wrapper;
	public FldMemberSetAndWalkToFormation FldMemberSetAndWalkToFormation => _FldMemberSetAndWalkToFormation.Wrapper;
	public FldMemberSetAnim FldMemberSetAnim => _FldMemberSetAnim.Wrapper;
	public FldMemberSetAnimParam FldMemberSetAnimParam => _FldMemberSetAnimParam.Wrapper;
	public FldMemberSetAnimParamImmidiately FldMemberSetAnimParamImmidiately => _FldMemberSetAnimParamImmidiately.Wrapper;
	public FldMemberIsAnimEnd FldMemberIsAnimEnd => _FldMemberIsAnimEnd.Wrapper;
	public FldMemberSetAddAnim FldMemberSetAddAnim => _FldMemberSetAddAnim.Wrapper;
	public FldMemberSetAnimSoundActive FldMemberSetAnimSoundActive => _FldMemberSetAnimSoundActive.Wrapper;
	public FldMemberPlayABL FldMemberPlayABL => _FldMemberPlayABL.Wrapper;
	public FldMemberStopABL FldMemberStopABL => _FldMemberStopABL.Wrapper;
	public FldMemberPlayEffect FldMemberPlayEffect => _FldMemberPlayEffect.Wrapper;
	public FldMemberIsAutoCtrl FldMemberIsAutoCtrl => _FldMemberIsAutoCtrl.Wrapper;
	public FldMemberGetBasePose FldMemberGetBasePose => _FldMemberGetBasePose.Wrapper;
	public FldMemberSetBasePose FldMemberSetBasePose => _FldMemberSetBasePose.Wrapper;
	public FldMemberSetAction FldMemberSetAction => _FldMemberSetAction.Wrapper;
	public FldMemberSetActionAsAutoCtrl FldMemberSetActionAsAutoCtrl => _FldMemberSetActionAsAutoCtrl.Wrapper;
	public FldMemberSetActionWaitTime FldMemberSetActionWaitTime => _FldMemberSetActionWaitTime.Wrapper;
	public FldMemberEndLoopAction FldMemberEndLoopAction => _FldMemberEndLoopAction.Wrapper;
	public FldMemberIsLoopActionLoopState FldMemberIsLoopActionLoopState => _FldMemberIsLoopActionLoopState.Wrapper;
	public FldMemberIsWaitAction FldMemberIsWaitAction => _FldMemberIsWaitAction.Wrapper;
	public FldMemberSetVisible FldMemberSetVisible => _FldMemberSetVisible.Wrapper;
	public FldMemberStartFade FldMemberStartFade => _FldMemberStartFade.Wrapper;
	public FldMemberPlayIcon FldMemberPlayIcon => _FldMemberPlayIcon.Wrapper;
	public FldMemberStopIcon FldMemberStopIcon => _FldMemberStopIcon.Wrapper;
	public FldMemberLookAtStart FldMemberLookAtStart => _FldMemberLookAtStart.Wrapper;
	public FldMemberLookAtSetType FldMemberLookAtSetType => _FldMemberLookAtSetType.Wrapper;
	public FldMemberLookAtSetPlayer FldMemberLookAtSetPlayer => _FldMemberLookAtSetPlayer.Wrapper;
	public FldMemberLookAtSetMember FldMemberLookAtSetMember => _FldMemberLookAtSetMember.Wrapper;
	public FldMemberLookAtSetNpc FldMemberLookAtSetNpc => _FldMemberLookAtSetNpc.Wrapper;
	public FldMemberLookAtSetPos FldMemberLookAtSetPos => _FldMemberLookAtSetPos.Wrapper;
	public FldMemberLookAtSetDeg FldMemberLookAtSetDeg => _FldMemberLookAtSetDeg.Wrapper;
	public FldMemberLookAtEnd FldMemberLookAtEnd => _FldMemberLookAtEnd.Wrapper;
	public FldMemberSetMoveAnimRate FldMemberSetMoveAnimRate => _FldMemberSetMoveAnimRate.Wrapper;
	public FldMemberIsInCamera FldMemberIsInCamera => _FldMemberIsInCamera.Wrapper;
	public FldMemberSetPlayerNeighborPos FldMemberSetPlayerNeighborPos => _FldMemberSetPlayerNeighborPos.Wrapper;
	public FldMemberAllSetVisible FldMemberAllSetVisible => _FldMemberAllSetVisible.Wrapper;
	public FldMemberAllSetAIState_Event FldMemberAllSetAIState_Event => _FldMemberAllSetAIState_Event.Wrapper;
	public FldMemberAllSetAIState_BackStep FldMemberAllSetAIState_BackStep => _FldMemberAllSetAIState_BackStep.Wrapper;
	public FldMemberAddList FldMemberAddList => _FldMemberAddList.Wrapper;
	public FldMemberReloadByBtlMember FldMemberReloadByBtlMember => _FldMemberReloadByBtlMember.Wrapper;
	public FldMemberReloadByCharaID FldMemberReloadByCharaID => _FldMemberReloadByCharaID.Wrapper;
	public FldMemberIsReloadEnd FldMemberIsReloadEnd => _FldMemberIsReloadEnd.Wrapper;
	public FldMemberGetUnitID FldMemberGetUnitID => _FldMemberGetUnitID.Wrapper;
	public FldMemberGetAttackID FldMemberGetAttackID => _FldMemberGetAttackID.Wrapper;
	public FldMemberGetAttackAttribute FldMemberGetAttackAttribute => _FldMemberGetAttackAttribute.Wrapper;
	public FldMemberPlayBattleVoice FldMemberPlayBattleVoice => _FldMemberPlayBattleVoice.Wrapper;
	public FldMemberPlayPartVoice FldMemberPlayPartVoice => _FldMemberPlayPartVoice.Wrapper;
	public FldEnemyGetUidByTableNo FldEnemyGetUidByTableNo => _FldEnemyGetUidByTableNo.Wrapper;
	public FldEnemyIsExistByTableNo FldEnemyIsExistByTableNo => _FldEnemyIsExistByTableNo.Wrapper;
	public FldEnemyIsExist FldEnemyIsExist => _FldEnemyIsExist.Wrapper;
	public FldEnemyPreLoad FldEnemyPreLoad => _FldEnemyPreLoad.Wrapper;
	public FldEnemyIsPreLoadEnd FldEnemyIsPreLoadEnd => _FldEnemyIsPreLoadEnd.Wrapper;
	public FldEnemyPopByPreLoad FldEnemyPopByPreLoad => _FldEnemyPopByPreLoad.Wrapper;
	public FldEnemyCreateByPreLoad FldEnemyCreateByPreLoad => _FldEnemyCreateByPreLoad.Wrapper;
	public FldEnemyCreate FldEnemyCreate => _FldEnemyCreate.Wrapper;
	public FldEnemyCreateBySetDeg FldEnemyCreateBySetDeg => _FldEnemyCreateBySetDeg.Wrapper;
	public FldEnemyIsSetup FldEnemyIsSetup => _FldEnemyIsSetup.Wrapper;
	public FldEnemyDelete FldEnemyDelete => _FldEnemyDelete.Wrapper;
	public FldEnemyDeleteByTableNo FldEnemyDeleteByTableNo => _FldEnemyDeleteByTableNo.Wrapper;
	public FldEnemyKill FldEnemyKill => _FldEnemyKill.Wrapper;
	public FldEnemyGetResScrID FldEnemyGetResScrID => _FldEnemyGetResScrID.Wrapper;
	public FldEnemySetAIActive FldEnemySetAIActive => _FldEnemySetAIActive.Wrapper;
	public FldEnemySetColActive FldEnemySetColActive => _FldEnemySetColActive.Wrapper;
	public FldEnemySetTargetActive FldEnemySetTargetActive => _FldEnemySetTargetActive.Wrapper;
	public FldEnemySetAttractedOn FldEnemySetAttractedOn => _FldEnemySetAttractedOn.Wrapper;
	public FldEnemySetAIState_Discover FldEnemySetAIState_Discover => _FldEnemySetAIState_Discover.Wrapper;
	public FldEnemyGetDegToPlayer FldEnemyGetDegToPlayer => _FldEnemyGetDegToPlayer.Wrapper;
	public FldEnemySetDeg FldEnemySetDeg => _FldEnemySetDeg.Wrapper;
	public FldEnemySetPos FldEnemySetPos => _FldEnemySetPos.Wrapper;
	public FldEnemySetPosParam FldEnemySetPosParam => _FldEnemySetPosParam.Wrapper;
	public FldEnemyResetPos FldEnemyResetPos => _FldEnemyResetPos.Wrapper;
	public FldEnemyTurnToDeg FldEnemyTurnToDeg => _FldEnemyTurnToDeg.Wrapper;
	public FldEnemyTurnAddDeg FldEnemyTurnAddDeg => _FldEnemyTurnAddDeg.Wrapper;
	public FldEnemyRun FldEnemyRun => _FldEnemyRun.Wrapper;
	public FldEnemyRunToPos FldEnemyRunToPos => _FldEnemyRunToPos.Wrapper;
	public FldEnemyRunToPosParam FldEnemyRunToPosParam => _FldEnemyRunToPosParam.Wrapper;
	public FldEnemySetAndRunToPos FldEnemySetAndRunToPos => _FldEnemySetAndRunToPos.Wrapper;
	public FldEnemySetAndRunToPosParam FldEnemySetAndRunToPosParam => _FldEnemySetAndRunToPosParam.Wrapper;
	public FldEnemyWalk FldEnemyWalk => _FldEnemyWalk.Wrapper;
	public FldEnemyWalkToPos FldEnemyWalkToPos => _FldEnemyWalkToPos.Wrapper;
	public FldEnemyWalkToPosParam FldEnemyWalkToPosParam => _FldEnemyWalkToPosParam.Wrapper;
	public FldEnemySetAndWalkToPos FldEnemySetAndWalkToPos => _FldEnemySetAndWalkToPos.Wrapper;
	public FldEnemySetAndWalkToPosParam FldEnemySetAndWalkToPosParam => _FldEnemySetAndWalkToPosParam.Wrapper;
	public FldEnemySetAnim FldEnemySetAnim => _FldEnemySetAnim.Wrapper;
	public FldEnemySetAnimParam FldEnemySetAnimParam => _FldEnemySetAnimParam.Wrapper;
	public FldEnemySetAnimParamImmidiately FldEnemySetAnimParamImmidiately => _FldEnemySetAnimParamImmidiately.Wrapper;
	public FldEnemyIsAnimEnd FldEnemyIsAnimEnd => _FldEnemyIsAnimEnd.Wrapper;
	public FldEnemySetAnimSoundActive FldEnemySetAnimSoundActive => _FldEnemySetAnimSoundActive.Wrapper;
	public FldEnemyPlayEffect FldEnemyPlayEffect => _FldEnemyPlayEffect.Wrapper;
	public FldEnemyIsAutoCtrl FldEnemyIsAutoCtrl => _FldEnemyIsAutoCtrl.Wrapper;
	public FldEnemyGetBasePose FldEnemyGetBasePose => _FldEnemyGetBasePose.Wrapper;
	public FldEnemySetBasePose FldEnemySetBasePose => _FldEnemySetBasePose.Wrapper;
	public FldEnemySetAction FldEnemySetAction => _FldEnemySetAction.Wrapper;
	public FldEnemySetActionAsAutoCtrl FldEnemySetActionAsAutoCtrl => _FldEnemySetActionAsAutoCtrl.Wrapper;
	public FldEnemySetActionWaitTime FldEnemySetActionWaitTime => _FldEnemySetActionWaitTime.Wrapper;
	public FldEnemyEndLoopAction FldEnemyEndLoopAction => _FldEnemyEndLoopAction.Wrapper;
	public FldEnemyIsLoopActionLoopState FldEnemyIsLoopActionLoopState => _FldEnemyIsLoopActionLoopState.Wrapper;
	public FldEnemyIsWaitAction FldEnemyIsWaitAction => _FldEnemyIsWaitAction.Wrapper;
	public FldEnemySetVisible FldEnemySetVisible => _FldEnemySetVisible.Wrapper;
	public FldEnemyStartFade FldEnemyStartFade => _FldEnemyStartFade.Wrapper;
	public FldEnemyPlayIcon FldEnemyPlayIcon => _FldEnemyPlayIcon.Wrapper;
	public FldEnemyStopIcon FldEnemyStopIcon => _FldEnemyStopIcon.Wrapper;
	public FldEnemySetAIRouteID FldEnemySetAIRouteID => _FldEnemySetAIRouteID.Wrapper;
	public FldEnemySetIsAIRouteLoop FldEnemySetIsAIRouteLoop => _FldEnemySetIsAIRouteLoop.Wrapper;
	public FldEnemyRegisterEventHitScript FldEnemyRegisterEventHitScript => _FldEnemyRegisterEventHitScript.Wrapper;
	public FldEnemySetEventHitScriptActive FldEnemySetEventHitScriptActive => _FldEnemySetEventHitScriptActive.Wrapper;
	public FldEnemySetIsHide FldEnemySetIsHide => _FldEnemySetIsHide.Wrapper;
	public FldEnemyGeneratorExecute FldEnemyGeneratorExecute => _FldEnemyGeneratorExecute.Wrapper;
	public FldEnemySetTargetCursor FldEnemySetTargetCursor => _FldEnemySetTargetCursor.Wrapper;
	public FldEnemySetAccessGmc FldEnemySetAccessGmc => _FldEnemySetAccessGmc.Wrapper;
	public FldEnemyResetAccess FldEnemyResetAccess => _FldEnemyResetAccess.Wrapper;
	public FldEnemyAllSetAnimPause FldEnemyAllSetAnimPause => _FldEnemyAllSetAnimPause.Wrapper;
	public FldEnemyAllSetAIActive FldEnemyAllSetAIActive => _FldEnemyAllSetAIActive.Wrapper;
	public FldEnemyAllResetPos FldEnemyAllResetPos => _FldEnemyAllResetPos.Wrapper;
	public FldEnemyAllSetVisible FldEnemyAllSetVisible => _FldEnemyAllSetVisible.Wrapper;
	public FldEnemyKillWithinTargetRange FldEnemyKillWithinTargetRange => _FldEnemyKillWithinTargetRange.Wrapper;
	public FldEnemyRespawnReset FldEnemyRespawnReset => _FldEnemyRespawnReset.Wrapper;
	public FldEnemyGetUnitID FldEnemyGetUnitID => _FldEnemyGetUnitID.Wrapper;
	public FldEnemyGetEnemyID FldEnemyGetEnemyID => _FldEnemyGetEnemyID.Wrapper;
	public FldEnemyGetAttackID FldEnemyGetAttackID => _FldEnemyGetAttackID.Wrapper;
	public FldEnemyGetAttackAttribute FldEnemyGetAttackAttribute => _FldEnemyGetAttackAttribute.Wrapper;
	public FldEnemyIsDamageBackAttack FldEnemyIsDamageBackAttack => _FldEnemyIsDamageBackAttack.Wrapper;
	public FldEnemyIsBreak FldEnemyIsBreak => _FldEnemyIsBreak.Wrapper;
	public FldEnemyIsDark FldEnemyIsDark => _FldEnemyIsDark.Wrapper;
	public FldEnemyGetTier FldEnemyGetTier => _FldEnemyGetTier.Wrapper;
	public FldEnemyIsDead FldEnemyIsDead => _FldEnemyIsDead.Wrapper;
	public FldNpcGetUid FldNpcGetUid => _FldNpcGetUid.Wrapper;
	public FldNpcGetUidByNpcID FldNpcGetUidByNpcID => _FldNpcGetUidByNpcID.Wrapper;
	public FldNpcGetUidByCharaID FldNpcGetUidByCharaID => _FldNpcGetUidByCharaID.Wrapper;
	public FldNpcCreateByNpcID FldNpcCreateByNpcID => _FldNpcCreateByNpcID.Wrapper;
	public FldNpcIsExistByNpcID FldNpcIsExistByNpcID => _FldNpcIsExistByNpcID.Wrapper;
	public FldNpcIsExistByCharaID FldNpcIsExistByCharaID => _FldNpcIsExistByCharaID.Wrapper;
	public FldNpcGetUidByTableNo FldNpcGetUidByTableNo => _FldNpcGetUidByTableNo.Wrapper;
	public FldNpcIsExistByTableNo FldNpcIsExistByTableNo => _FldNpcIsExistByTableNo.Wrapper;
	public FldNpcCreate FldNpcCreate => _FldNpcCreate.Wrapper;
	public FldNpcIsSetup FldNpcIsSetup => _FldNpcIsSetup.Wrapper;
	public FldNpcDelete FldNpcDelete => _FldNpcDelete.Wrapper;
	public FldNpcGetNpcID FldNpcGetNpcID => _FldNpcGetNpcID.Wrapper;
	public FldNpcGetCharaID FldNpcGetCharaID => _FldNpcGetCharaID.Wrapper;
	public FldNpcGetResScrID FldNpcGetResScrID => _FldNpcGetResScrID.Wrapper;
	public FldNpcIsSetOnPoint FldNpcIsSetOnPoint => _FldNpcIsSetOnPoint.Wrapper;
	public FldNpcIsSetOnPointAnyone FldNpcIsSetOnPointAnyone => _FldNpcIsSetOnPointAnyone.Wrapper;
	public FldNpcSetSummaryOnByTable FldNpcSetSummaryOnByTable => _FldNpcSetSummaryOnByTable.Wrapper;
	public FldNpcSetSummaryOff FldNpcSetSummaryOff => _FldNpcSetSummaryOff.Wrapper;
	public FldNpcIsSummaryOn FldNpcIsSummaryOn => _FldNpcIsSummaryOn.Wrapper;
	public FldNpcSetAIActive FldNpcSetAIActive => _FldNpcSetAIActive.Wrapper;
	public FldNpcIsAIActive FldNpcIsAIActive => _FldNpcIsAIActive.Wrapper;
	public FldNpcAddWaitPointMax FldNpcAddWaitPointMax => _FldNpcAddWaitPointMax.Wrapper;
	public FldNpcIsCanOnTalk FldNpcIsCanOnTalk => _FldNpcIsCanOnTalk.Wrapper;
	public FldNpcOnTalk FldNpcOnTalk => _FldNpcOnTalk.Wrapper;
	public FldNpcIsEndTalk FldNpcIsEndTalk => _FldNpcIsEndTalk.Wrapper;
	public FldNpcSetCallOut FldNpcSetCallOut => _FldNpcSetCallOut.Wrapper;
	public FldNpcIsCallOut FldNpcIsCallOut => _FldNpcIsCallOut.Wrapper;
	public FldNpcGetDegToPlayer FldNpcGetDegToPlayer => _FldNpcGetDegToPlayer.Wrapper;
	public FldNpcSetDeg FldNpcSetDeg => _FldNpcSetDeg.Wrapper;
	public FldNpcSetPos FldNpcSetPos => _FldNpcSetPos.Wrapper;
	public FldNpcSetPosParam FldNpcSetPosParam => _FldNpcSetPosParam.Wrapper;
	public FldNpcSetPosInit FldNpcSetPosInit => _FldNpcSetPosInit.Wrapper;
	public FldNpcTurnToDeg FldNpcTurnToDeg => _FldNpcTurnToDeg.Wrapper;
	public FldNpcTurnAddDeg FldNpcTurnAddDeg => _FldNpcTurnAddDeg.Wrapper;
	public FldNpcSetColActive FldNpcSetColActive => _FldNpcSetColActive.Wrapper;
	public FldNpcRun FldNpcRun => _FldNpcRun.Wrapper;
	public FldNpcRunToPos FldNpcRunToPos => _FldNpcRunToPos.Wrapper;
	public FldNpcRunToPosParam FldNpcRunToPosParam => _FldNpcRunToPosParam.Wrapper;
	public FldNpcSetAndRunToPos FldNpcSetAndRunToPos => _FldNpcSetAndRunToPos.Wrapper;
	public FldNpcSetAndRunToPosParam FldNpcSetAndRunToPosParam => _FldNpcSetAndRunToPosParam.Wrapper;
	public FldNpcWalk FldNpcWalk => _FldNpcWalk.Wrapper;
	public FldNpcWalkToPos FldNpcWalkToPos => _FldNpcWalkToPos.Wrapper;
	public FldNpcWalkToPosParam FldNpcWalkToPosParam => _FldNpcWalkToPosParam.Wrapper;
	public FldNpcSetAndWalkToPos FldNpcSetAndWalkToPos => _FldNpcSetAndWalkToPos.Wrapper;
	public FldNpcSetAndWalkToPosParam FldNpcSetAndWalkToPosParam => _FldNpcSetAndWalkToPosParam.Wrapper;
	public FldNpcSetAnim FldNpcSetAnim => _FldNpcSetAnim.Wrapper;
	public FldNpcSetAnimParam FldNpcSetAnimParam => _FldNpcSetAnimParam.Wrapper;
	public FldNpcSetAnimParamImmidiately FldNpcSetAnimParamImmidiately => _FldNpcSetAnimParamImmidiately.Wrapper;
	public FldNpcGetAnimID FldNpcGetAnimID => _FldNpcGetAnimID.Wrapper;
	public FldNpcRemoveAllAutoCtrl FldNpcRemoveAllAutoCtrl => _FldNpcRemoveAllAutoCtrl.Wrapper;
	public FldNpcIsAnimEnd FldNpcIsAnimEnd => _FldNpcIsAnimEnd.Wrapper;
	public FldNpcSetAnimSoundActive FldNpcSetAnimSoundActive => _FldNpcSetAnimSoundActive.Wrapper;
	public FldNpcPlayABL FldNpcPlayABL => _FldNpcPlayABL.Wrapper;
	public FldNpcStopABL FldNpcStopABL => _FldNpcStopABL.Wrapper;
	public FldNpcPlayEffect FldNpcPlayEffect => _FldNpcPlayEffect.Wrapper;
	public FldNpcIsAutoCtrl FldNpcIsAutoCtrl => _FldNpcIsAutoCtrl.Wrapper;
	public FldNpcGetBasePose FldNpcGetBasePose => _FldNpcGetBasePose.Wrapper;
	public FldNpcSetBasePose FldNpcSetBasePose => _FldNpcSetBasePose.Wrapper;
	public FldNpcSetAction FldNpcSetAction => _FldNpcSetAction.Wrapper;
	public FldNpcSetActionAsAutoCtrl FldNpcSetActionAsAutoCtrl => _FldNpcSetActionAsAutoCtrl.Wrapper;
	public FldNpcSetActionWaitTime FldNpcSetActionWaitTime => _FldNpcSetActionWaitTime.Wrapper;
	public FldNpcEndLoopAction FldNpcEndLoopAction => _FldNpcEndLoopAction.Wrapper;
	public FldNpcIsLoopActionLoopState FldNpcIsLoopActionLoopState => _FldNpcIsLoopActionLoopState.Wrapper;
	public FldNpcIsWaitAction FldNpcIsWaitAction => _FldNpcIsWaitAction.Wrapper;
	public FldNpcSetVisible FldNpcSetVisible => _FldNpcSetVisible.Wrapper;
	public FldNpcStartFade FldNpcStartFade => _FldNpcStartFade.Wrapper;
	public FldNpcPlayIcon FldNpcPlayIcon => _FldNpcPlayIcon.Wrapper;
	public FldNpcStopIcon FldNpcStopIcon => _FldNpcStopIcon.Wrapper;
	public FldNpcLookAtStart FldNpcLookAtStart => _FldNpcLookAtStart.Wrapper;
	public FldNpcLookAtSetType FldNpcLookAtSetType => _FldNpcLookAtSetType.Wrapper;
	public FldNpcLookAtSetPlayer FldNpcLookAtSetPlayer => _FldNpcLookAtSetPlayer.Wrapper;
	public FldNpcLookAtSetMember FldNpcLookAtSetMember => _FldNpcLookAtSetMember.Wrapper;
	public FldNpcLookAtSetNpc FldNpcLookAtSetNpc => _FldNpcLookAtSetNpc.Wrapper;
	public FldNpcLookAtSetPos FldNpcLookAtSetPos => _FldNpcLookAtSetPos.Wrapper;
	public FldNpcLookAtSetDeg FldNpcLookAtSetDeg => _FldNpcLookAtSetDeg.Wrapper;
	public FldNpcLookAtSetDelay FldNpcLookAtSetDelay => _FldNpcLookAtSetDelay.Wrapper;
	public FldNpcLookAtSetSpeedType FldNpcLookAtSetSpeedType => _FldNpcLookAtSetSpeedType.Wrapper;
	public FldNpcLookAtEnd FldNpcLookAtEnd => _FldNpcLookAtEnd.Wrapper;
	public FldNpcAttachItem FldNpcAttachItem => _FldNpcAttachItem.Wrapper;
	public FldNpcIsAttachmentItemReady FldNpcIsAttachmentItemReady => _FldNpcIsAttachmentItemReady.Wrapper;
	public FldNpcDetachItem FldNpcDetachItem => _FldNpcDetachItem.Wrapper;
	public FldNpcSetIsMebika FldNpcSetIsMebika => _FldNpcSetIsMebika.Wrapper;
	public FldNpcUpdateCloth FldNpcUpdateCloth => _FldNpcUpdateCloth.Wrapper;
	public FldNpcGetInitNpcPosID FldNpcGetInitNpcPosID => _FldNpcGetInitNpcPosID.Wrapper;
	public FldNpcFollowerSummaryGetTalkFuncName FldNpcFollowerSummaryGetTalkFuncName => _FldNpcFollowerSummaryGetTalkFuncName.Wrapper;
	public FldNpcFollowerSummarySetParam FldNpcFollowerSummarySetParam => _FldNpcFollowerSummarySetParam.Wrapper;
	public FldNpcHavingCharaIDSetVisible FldNpcHavingCharaIDSetVisible => _FldNpcHavingCharaIDSetVisible.Wrapper;
	public FldNpcNotHavingCharaIDSetVisible FldNpcNotHavingCharaIDSetVisible => _FldNpcNotHavingCharaIDSetVisible.Wrapper;
	public FldNpcSetSummaryOn FldNpcSetSummaryOn => _FldNpcSetSummaryOn.Wrapper;
	public FldNpcSummaryOn FldNpcSummaryOn => _FldNpcSummaryOn.Wrapper;
	public FldNpcSummaryOff FldNpcSummaryOff => _FldNpcSummaryOff.Wrapper;
	public FldGetFollowerID FldGetFollowerID => _FldGetFollowerID.Wrapper;
	public FldFollowerSetVoiceResult FldFollowerSetVoiceResult => _FldFollowerSetVoiceResult.Wrapper;
	public FldFollowerSetRemindLastDay FldFollowerSetRemindLastDay => _FldFollowerSetRemindLastDay.Wrapper;
	public FldFollowerJump FldFollowerJump => _FldFollowerJump.Wrapper;
	public FldFollowerGetJumpToZoneID FldFollowerGetJumpToZoneID => _FldFollowerGetJumpToZoneID.Wrapper;
	public FldFollowerIsLayoutForFollowerScenario FldFollowerIsLayoutForFollowerScenario => _FldFollowerIsLayoutForFollowerScenario.Wrapper;
	public FldFollowerIsAbsence FldFollowerIsAbsence => _FldFollowerIsAbsence.Wrapper;
	public FldFollowerGetRankupStatus FldFollowerGetRankupStatus => _FldFollowerGetRankupStatus.Wrapper;
	public FldFollowerGetUnlockStatus FldFollowerGetUnlockStatus => _FldFollowerGetUnlockStatus.Wrapper;
	public FldFollowerUpdateLayoutInfo FldFollowerUpdateLayoutInfo => _FldFollowerUpdateLayoutInfo.Wrapper;
	public FldBgSetVisible FldBgSetVisible => _FldBgSetVisible.Wrapper;
	public FldBgSetIsCommandBattle FldBgSetIsCommandBattle => _FldBgSetIsCommandBattle.Wrapper;
	public FldBgDataGetIndexByLayoutID FldBgDataGetIndexByLayoutID => _FldBgDataGetIndexByLayoutID.Wrapper;
	public FldBgDataGetIndexByLayoutName FldBgDataGetIndexByLayoutName => _FldBgDataGetIndexByLayoutName.Wrapper;
	public FldBgDataGetIndexByNodeName FldBgDataGetIndexByNodeName => _FldBgDataGetIndexByNodeName.Wrapper;
	public FldBgDataGetNum FldBgDataGetNum => _FldBgDataGetNum.Wrapper;
	public FldBgDataIsContainLayoutName FldBgDataIsContainLayoutName => _FldBgDataIsContainLayoutName.Wrapper;
	public FldBgDataIsContainNodeName FldBgDataIsContainNodeName => _FldBgDataIsContainNodeName.Wrapper;
	public FldBgDataSetEnable FldBgDataSetEnable => _FldBgDataSetEnable.Wrapper;
	public FldBgDataGetEnable FldBgDataGetEnable => _FldBgDataGetEnable.Wrapper;
	public FldSetEnableBgDataName FldSetEnableBgDataName => _FldSetEnableBgDataName.Wrapper;
	public FldGetEnableBgDataName FldGetEnableBgDataName => _FldGetEnableBgDataName.Wrapper;
	public FldSetEnableBgDataNodeName FldSetEnableBgDataNodeName => _FldSetEnableBgDataNodeName.Wrapper;
	public FldGetEnableBgDataNodeName FldGetEnableBgDataNodeName => _FldGetEnableBgDataNodeName.Wrapper;
	public FldBgLightGetIndexByID FldBgLightGetIndexByID => _FldBgLightGetIndexByID.Wrapper;
	public FldBgLightGetIndexByName FldBgLightGetIndexByName => _FldBgLightGetIndexByName.Wrapper;
	public FldBgLightGetNum FldBgLightGetNum => _FldBgLightGetNum.Wrapper;
	public FldBgLightIsContainName FldBgLightIsContainName => _FldBgLightIsContainName.Wrapper;
	public FldBgLightSetEnable FldBgLightSetEnable => _FldBgLightSetEnable.Wrapper;
	public FldBgLightGetEnable FldBgLightGetEnable => _FldBgLightGetEnable.Wrapper;
	public FldGetEnableBgLightName FldGetEnableBgLightName => _FldGetEnableBgLightName.Wrapper;
	public FldGetEnableBgLightId FldGetEnableBgLightId => _FldGetEnableBgLightId.Wrapper;
	public FldSetEnableBgLightName FldSetEnableBgLightName => _FldSetEnableBgLightName.Wrapper;
	public FldSetEnableBgLightId FldSetEnableBgLightId => _FldSetEnableBgLightId.Wrapper;
	public FldBgEffectGetIndexByLayoutName FldBgEffectGetIndexByLayoutName => _FldBgEffectGetIndexByLayoutName.Wrapper;
	public FldBgEffectGetNum FldBgEffectGetNum => _FldBgEffectGetNum.Wrapper;
	public FldBgEffectIsContainLayoutName FldBgEffectIsContainLayoutName => _FldBgEffectIsContainLayoutName.Wrapper;
	public FldBgEffectSetVisible FldBgEffectSetVisible => _FldBgEffectSetVisible.Wrapper;
	public FldBgEffectGetVisible FldBgEffectGetVisible => _FldBgEffectGetVisible.Wrapper;
	public FldDoorGetUid FldDoorGetUid => _FldDoorGetUid.Wrapper;
	public FldDoorGetUidByClosestOnPlayer FldDoorGetUidByClosestOnPlayer => _FldDoorGetUidByClosestOnPlayer.Wrapper;
	public FldDoorGetUidByResrcUid FldDoorGetUidByResrcUid => _FldDoorGetUidByResrcUid.Wrapper;
	public FldDoorGetResScrID FldDoorGetResScrID => _FldDoorGetResScrID.Wrapper;
	public FldDoorIsPlayerInFront FldDoorIsPlayerInFront => _FldDoorIsPlayerInFront.Wrapper;
	public FldDoorGetType FldDoorGetType => _FldDoorGetType.Wrapper;
	public FldDoorSetAction FldDoorSetAction => _FldDoorSetAction.Wrapper;
	public FldDoorSetAnim FldDoorSetAnim => _FldDoorSetAnim.Wrapper;
	public FldDoorIsAnimEnd FldDoorIsAnimEnd => _FldDoorIsAnimEnd.Wrapper;
	public FldDoorSetLockState FldDoorSetLockState => _FldDoorSetLockState.Wrapper;
	public FldDoorGetLockState FldDoorGetLockState => _FldDoorGetLockState.Wrapper;
	public FldDoorSetColActive FldDoorSetColActive => _FldDoorSetColActive.Wrapper;
	public FldDoorSetIsDanger FldDoorSetIsDanger => _FldDoorSetIsDanger.Wrapper;
	public FldDoorGetLinkFlag_ST FldDoorGetLinkFlag_ST => _FldDoorGetLinkFlag_ST.Wrapper;
	public FldDoorGetLinkFlag_ED FldDoorGetLinkFlag_ED => _FldDoorGetLinkFlag_ED.Wrapper;
	public FldLadderGetUidByClosestOnPlayer FldLadderGetUidByClosestOnPlayer => _FldLadderGetUidByClosestOnPlayer.Wrapper;
	public FldLadderGetUidByResrcUid FldLadderGetUidByResrcUid => _FldLadderGetUidByResrcUid.Wrapper;
	public FldLadderOnAccess FldLadderOnAccess => _FldLadderOnAccess.Wrapper;
	public FldTboxGetUid FldTboxGetUid => _FldTboxGetUid.Wrapper;
	public FldTboxGetUidByLayoutName FldTboxGetUidByLayoutName => _FldTboxGetUidByLayoutName.Wrapper;
	public FldTboxGetResScrID FldTboxGetResScrID => _FldTboxGetResScrID.Wrapper;
	public FldTboxGetItemID FldTboxGetItemID => _FldTboxGetItemID.Wrapper;
	public FldTboxGetItemNum FldTboxGetItemNum => _FldTboxGetItemNum.Wrapper;
	public FldTboxGetRarity FldTboxGetRarity => _FldTboxGetRarity.Wrapper;
	public FldTboxPrepareOfOpen FldTboxPrepareOfOpen => _FldTboxPrepareOfOpen.Wrapper;
	public FldTboxIsReadyToOpen FldTboxIsReadyToOpen => _FldTboxIsReadyToOpen.Wrapper;
	public FldTboxSetAction FldTboxSetAction => _FldTboxSetAction.Wrapper;
	public FldTboxGetUseState FldTboxGetUseState => _FldTboxGetUseState.Wrapper;
	public FldTboxCleanupOfOpen FldTboxCleanupOfOpen => _FldTboxCleanupOfOpen.Wrapper;
	public FldTboxSetColActive FldTboxSetColActive => _FldTboxSetColActive.Wrapper;
	public FldObjGetUid FldObjGetUid => _FldObjGetUid.Wrapper;
	public FldObjGetUidByLayoutName FldObjGetUidByLayoutName => _FldObjGetUidByLayoutName.Wrapper;
	public FldObjGetItemID FldObjGetItemID => _FldObjGetItemID.Wrapper;
	public FldObjGetItemNum FldObjGetItemNum => _FldObjGetItemNum.Wrapper;
	public FldObjBreak FldObjBreak => _FldObjBreak.Wrapper;
	public FldObjIsBreak FldObjIsBreak => _FldObjIsBreak.Wrapper;
	public FldObjResetBreak FldObjResetBreak => _FldObjResetBreak.Wrapper;
	public FldObjFadeOut FldObjFadeOut => _FldObjFadeOut.Wrapper;
	public FldGatherGetUid FldGatherGetUid => _FldGatherGetUid.Wrapper;
	public FldGatherGetUidByLayoutName FldGatherGetUidByLayoutName => _FldGatherGetUidByLayoutName.Wrapper;
	public FldGatherGetUidByLayoutID FldGatherGetUidByLayoutID => _FldGatherGetUidByLayoutID.Wrapper;
	public FldGatherSetAction FldGatherSetAction => _FldGatherSetAction.Wrapper;
	public FldGatherGetItemID FldGatherGetItemID => _FldGatherGetItemID.Wrapper;
	public FldGatherGetItemNum FldGatherGetItemNum => _FldGatherGetItemNum.Wrapper;
	public FldGatherSetIsAcquired FldGatherSetIsAcquired => _FldGatherSetIsAcquired.Wrapper;
	public FldGmcGetUid FldGmcGetUid => _FldGmcGetUid.Wrapper;
	public FldGmcGetUidByLayoutName FldGmcGetUidByLayoutName => _FldGmcGetUidByLayoutName.Wrapper;
	public FldGmcGetResScrID FldGmcGetResScrID => _FldGmcGetResScrID.Wrapper;
	public FldGmcIsExist FldGmcIsExist => _FldGmcIsExist.Wrapper;
	public FldGmcSetAnim FldGmcSetAnim => _FldGmcSetAnim.Wrapper;
	public FldGmcIsAnimEnd FldGmcIsAnimEnd => _FldGmcIsAnimEnd.Wrapper;
	public FldGmcSetAnimCurrentTime FldGmcSetAnimCurrentTime => _FldGmcSetAnimCurrentTime.Wrapper;
	public FldGmcSetAnimSpeed FldGmcSetAnimSpeed => _FldGmcSetAnimSpeed.Wrapper;
	public FldGmcSetAnimSoundActive FldGmcSetAnimSoundActive => _FldGmcSetAnimSoundActive.Wrapper;
	public FldGmcPlayEffect FldGmcPlayEffect => _FldGmcPlayEffect.Wrapper;
	public FldGmcSetIsActivated FldGmcSetIsActivated => _FldGmcSetIsActivated.Wrapper;
	public FldGmcOnActivate FldGmcOnActivate => _FldGmcOnActivate.Wrapper;
	public FldGmcIsActivated FldGmcIsActivated => _FldGmcIsActivated.Wrapper;
	public FldGmcIsRunLinkScript FldGmcIsRunLinkScript => _FldGmcIsRunLinkScript.Wrapper;
	public FldGmcSetVisible FldGmcSetVisible => _FldGmcSetVisible.Wrapper;
	public FldGmcStartFade FldGmcStartFade => _FldGmcStartFade.Wrapper;
	public FldGmcSetColActive FldGmcSetColActive => _FldGmcSetColActive.Wrapper;
	public FldGmcSetColActiveWithID FldGmcSetColActiveWithID => _FldGmcSetColActiveWithID.Wrapper;
	public FldGmcSetObstacleActive FldGmcSetObstacleActive => _FldGmcSetObstacleActive.Wrapper;
	public FldGmcDestruction FldGmcDestruction => _FldGmcDestruction.Wrapper;
	public FldGmcSetAtkDirForce FldGmcSetAtkDirForce => _FldGmcSetAtkDirForce.Wrapper;
	public FldGmcSetAtkIgnoreWall FldGmcSetAtkIgnoreWall => _FldGmcSetAtkIgnoreWall.Wrapper;
	public FldGmcSetMaxHP FldGmcSetMaxHP => _FldGmcSetMaxHP.Wrapper;
	public FldGmcSetHP FldGmcSetHP => _FldGmcSetHP.Wrapper;
	public FldGmcGetHP FldGmcGetHP => _FldGmcGetHP.Wrapper;
	public FldGmcDecreaseHP FldGmcDecreaseHP => _FldGmcDecreaseHP.Wrapper;
	public FldGmcIsPlayerInFront FldGmcIsPlayerInFront => _FldGmcIsPlayerInFront.Wrapper;
	public FldGmcSetAttachPartyCharaToMyself FldGmcSetAttachPartyCharaToMyself => _FldGmcSetAttachPartyCharaToMyself.Wrapper;
	public FldGmcGetExcelData_Flag FldGmcGetExcelData_Flag => _FldGmcGetExcelData_Flag.Wrapper;
	public FldGmcGetExcelData_EnemyLayoutID FldGmcGetExcelData_EnemyLayoutID => _FldGmcGetExcelData_EnemyLayoutID.Wrapper;
	public FldGmcGetExcelData_CameraNodeName FldGmcGetExcelData_CameraNodeName => _FldGmcGetExcelData_CameraNodeName.Wrapper;
	public FldGmcGetExcelData_GmcLayoutName FldGmcGetExcelData_GmcLayoutName => _FldGmcGetExcelData_GmcLayoutName.Wrapper;
	public FldGmcRegisterTimerScript FldGmcRegisterTimerScript => _FldGmcRegisterTimerScript.Wrapper;
	public FldGmcUnregisterTimerScript FldGmcUnregisterTimerScript => _FldGmcUnregisterTimerScript.Wrapper;
	public FldGmcUpdateGridInfo FldGmcUpdateGridInfo => _FldGmcUpdateGridInfo.Wrapper;
	public FldGmcAdjustFOE FldGmcAdjustFOE => _FldGmcAdjustFOE.Wrapper;
	public FldBgObjGetResScrIDByResrcUid FldBgObjGetResScrIDByResrcUid => _FldBgObjGetResScrIDByResrcUid.Wrapper;
	public FldHitCollisGetUid FldHitCollisGetUid => _FldHitCollisGetUid.Wrapper;
	public FldHitCollisGetUidByLayoutName FldHitCollisGetUidByLayoutName => _FldHitCollisGetUidByLayoutName.Wrapper;
	public FldHitCollisIsCheckUnitInOBB FldHitCollisIsCheckUnitInOBB => _FldHitCollisIsCheckUnitInOBB.Wrapper;
	public FldHitCollisGetLinkPosID FldHitCollisGetLinkPosID => _FldHitCollisGetLinkPosID.Wrapper;
	public FldHitCollisRegisterTimerScript FldHitCollisRegisterTimerScript => _FldHitCollisRegisterTimerScript.Wrapper;
	public FldHitCollisUnregisterTimerScript FldHitCollisUnregisterTimerScript => _FldHitCollisUnregisterTimerScript.Wrapper;
	public FldActionHitGetUidByLayoutName FldActionHitGetUidByLayoutName => _FldActionHitGetUidByLayoutName.Wrapper;
	public FldActionHitSetDashJumpFollowPath FldActionHitSetDashJumpFollowPath => _FldActionHitSetDashJumpFollowPath.Wrapper;
	public FldActionHitSetDashJumpHitStop FldActionHitSetDashJumpHitStop => _FldActionHitSetDashJumpHitStop.Wrapper;
	public FldGayaHitGetUidByLayoutName FldGayaHitGetUidByLayoutName => _FldGayaHitGetUidByLayoutName.Wrapper;
	public FldGayaHitUpdateTableData FldGayaHitUpdateTableData => _FldGayaHitUpdateTableData.Wrapper;
	public FldGayaHitSetSleepInterval FldGayaHitSetSleepInterval => _FldGayaHitSetSleepInterval.Wrapper;
	public FldEnvBoxHeightChange_Start FldEnvBoxHeightChange_Start => _FldEnvBoxHeightChange_Start.Wrapper;
	public FldEnvBoxHeightChange_Reset FldEnvBoxHeightChange_Reset => _FldEnvBoxHeightChange_Reset.Wrapper;
	public FldEnvBoxHeightChange_End FldEnvBoxHeightChange_End => _FldEnvBoxHeightChange_End.Wrapper;
	public FldEnvBoxHeightChange_IsActive FldEnvBoxHeightChange_IsActive => _FldEnvBoxHeightChange_IsActive.Wrapper;
	public FldEnvBoxCreateByEnvNumberMask FldEnvBoxCreateByEnvNumberMask => _FldEnvBoxCreateByEnvNumberMask.Wrapper;
	public FldEnvBoxSetByUid FldEnvBoxSetByUid => _FldEnvBoxSetByUid.Wrapper;
	public FldCameraBoxGetUidByNodeName FldCameraBoxGetUidByNodeName => _FldCameraBoxGetUidByNodeName.Wrapper;
	public FldCameraBoxSetIsActivated FldCameraBoxSetIsActivated => _FldCameraBoxSetIsActivated.Wrapper;
	public FldCameraBoxGetIsActivated FldCameraBoxGetIsActivated => _FldCameraBoxGetIsActivated.Wrapper;
	public FldCameraBoxSetWideMode FldCameraBoxSetWideMode => _FldCameraBoxSetWideMode.Wrapper;
	public FldCameraBoxAllSetWideMode FldCameraBoxAllSetWideMode => _FldCameraBoxAllSetWideMode.Wrapper;
	public FldCameraBoxAllSetIsIgnoreInputLock FldCameraBoxAllSetIsIgnoreInputLock => _FldCameraBoxAllSetIsIgnoreInputLock.Wrapper;
	public FldMaskBoxSetOnByUid FldMaskBoxSetOnByUid => _FldMaskBoxSetOnByUid.Wrapper;
	public FldMaskBoxSetOnByGroupID FldMaskBoxSetOnByGroupID => _FldMaskBoxSetOnByGroupID.Wrapper;
	public FldMaskBoxSetIsUpdate FldMaskBoxSetIsUpdate => _FldMaskBoxSetIsUpdate.Wrapper;
	public FldMaskBoxSetOnByLine FldMaskBoxSetOnByLine => _FldMaskBoxSetOnByLine.Wrapper;
	public FldSaveEntryEnemyCheckScript_Register FldSaveEntryEnemyCheckScript_Register => _FldSaveEntryEnemyCheckScript_Register.Wrapper;
	public FldSaveEntryEnemyCheckScript_Unregister FldSaveEntryEnemyCheckScript_Unregister => _FldSaveEntryEnemyCheckScript_Unregister.Wrapper;
	public FldSaveEntryEnemyCheckScript_IsRegister FldSaveEntryEnemyCheckScript_IsRegister => _FldSaveEntryEnemyCheckScript_IsRegister.Wrapper;
	public FldSaveEntryEnemyCheckScript_AddEnemyTableNo FldSaveEntryEnemyCheckScript_AddEnemyTableNo => _FldSaveEntryEnemyCheckScript_AddEnemyTableNo.Wrapper;
	public FldSaveEntryGimmickDestination_Register FldSaveEntryGimmickDestination_Register => _FldSaveEntryGimmickDestination_Register.Wrapper;
	public FldSaveEntryGimmickDestination_Unregister FldSaveEntryGimmickDestination_Unregister => _FldSaveEntryGimmickDestination_Unregister.Wrapper;
	public FldEntryTimerScript_Register FldEntryTimerScript_Register => _FldEntryTimerScript_Register.Wrapper;
	public FldEntryTimerScript_Unregister FldEntryTimerScript_Unregister => _FldEntryTimerScript_Unregister.Wrapper;
	public FldEntryTimerLinkScript_Register FldEntryTimerLinkScript_Register => _FldEntryTimerLinkScript_Register.Wrapper;
	public FldEntryTimerLinkScript_Unregister FldEntryTimerLinkScript_Unregister => _FldEntryTimerLinkScript_Unregister.Wrapper;
	public FldEntryEnemyCheckScript_Register FldEntryEnemyCheckScript_Register => _FldEntryEnemyCheckScript_Register.Wrapper;
	public FldEntryEnemyCheckScript_Unregister FldEntryEnemyCheckScript_Unregister => _FldEntryEnemyCheckScript_Unregister.Wrapper;
	public FldEntryEnemyCheckScript_IsRegister FldEntryEnemyCheckScript_IsRegister => _FldEntryEnemyCheckScript_IsRegister.Wrapper;
	public FldEntryEnemyCheckScript_AddEnemyTableNo FldEntryEnemyCheckScript_AddEnemyTableNo => _FldEntryEnemyCheckScript_AddEnemyTableNo.Wrapper;
	public FldEntryEnemyDamageScript_Register FldEntryEnemyDamageScript_Register => _FldEntryEnemyDamageScript_Register.Wrapper;
	public FldEntryEnemyDamageScript_Unregister FldEntryEnemyDamageScript_Unregister => _FldEntryEnemyDamageScript_Unregister.Wrapper;
	public FldEntryEnemyDiscoverScript_Register FldEntryEnemyDiscoverScript_Register => _FldEntryEnemyDiscoverScript_Register.Wrapper;
	public FldEntryEnemyDiscoverScript_Unregister FldEntryEnemyDiscoverScript_Unregister => _FldEntryEnemyDiscoverScript_Unregister.Wrapper;
	public FldCreateEva FldCreateEva => _FldCreateEva.Wrapper;
	public FldReturnItemGetMapID FldReturnItemGetMapID => _FldReturnItemGetMapID.Wrapper;
	public FldReturnItemGetPosID FldReturnItemGetPosID => _FldReturnItemGetPosID.Wrapper;
	public FldChangeCameraNormal FldChangeCameraNormal => _FldChangeCameraNormal.Wrapper;
	public FldChangeCameraWatchY FldChangeCameraWatchY => _FldChangeCameraWatchY.Wrapper;
	public DUMMY DUMMY => _DUMMY.Wrapper;
	public CMD_MDL_VISIBLE CMD_MDL_VISIBLE => _CMD_MDL_VISIBLE.Wrapper;
	public CMD_MDL_ANIM CMD_MDL_ANIM => _CMD_MDL_ANIM.Wrapper;
	public CMD_MDL_ANIM_SYNC CMD_MDL_ANIM_SYNC => _CMD_MDL_ANIM_SYNC.Wrapper;
	public CMD_MDL_ANIM_SEEK CMD_MDL_ANIM_SEEK => _CMD_MDL_ANIM_SEEK.Wrapper;
	public CMD_MDL_ANIM_FRAMESYNC CMD_MDL_ANIM_FRAMESYNC => _CMD_MDL_ANIM_FRAMESYNC.Wrapper;
	public CMD_MDL_ANIM_BLENDSYNC CMD_MDL_ANIM_BLENDSYNC => _CMD_MDL_ANIM_BLENDSYNC.Wrapper;
	public CMD_MDL_ANIM_LOOPSYNC CMD_MDL_ANIM_LOOPSYNC => _CMD_MDL_ANIM_LOOPSYNC.Wrapper;
	public CMD_MDL_ANIM_SPEED CMD_MDL_ANIM_SPEED => _CMD_MDL_ANIM_SPEED.Wrapper;
	public CMD_MDL_ANIM_NEXT CMD_MDL_ANIM_NEXT => _CMD_MDL_ANIM_NEXT.Wrapper;
	public CMD_MDL_GET_ANIM CMD_MDL_GET_ANIM => _CMD_MDL_GET_ANIM.Wrapper;
	public CMD_MDL_GET_ANIM_COUNT CMD_MDL_GET_ANIM_COUNT => _CMD_MDL_GET_ANIM_COUNT.Wrapper;
	public CMD_MDL_ICON CMD_MDL_ICON => _CMD_MDL_ICON.Wrapper;
	public CMD_MDL_ICON_EX CMD_MDL_ICON_EX => _CMD_MDL_ICON_EX.Wrapper;
	public CMD_MDL_ICON_SET_SCALE CMD_MDL_ICON_SET_SCALE => _CMD_MDL_ICON_SET_SCALE.Wrapper;
	public CMD_MDL_ICON_END CMD_MDL_ICON_END => _CMD_MDL_ICON_END.Wrapper;
	public CMD_MDL_SET_SCALE CMD_MDL_SET_SCALE => _CMD_MDL_SET_SCALE.Wrapper;
	public CMD_MDL_GET_ITEM_RESHND CMD_MDL_GET_ITEM_RESHND => _CMD_MDL_GET_ITEM_RESHND.Wrapper;
	public CMD_MDL_ADD_ANIM CMD_MDL_ADD_ANIM => _CMD_MDL_ADD_ANIM.Wrapper;
	public CMD_MDL_EMOTE_ANIM CMD_MDL_EMOTE_ANIM => _CMD_MDL_EMOTE_ANIM.Wrapper;
	public CMD_MDL_ADD_ANIM_NEXT CMD_MDL_ADD_ANIM_NEXT => _CMD_MDL_ADD_ANIM_NEXT.Wrapper;
	public CMD_MDL_ADD_ANIM_SYNC CMD_MDL_ADD_ANIM_SYNC => _CMD_MDL_ADD_ANIM_SYNC.Wrapper;
	public CMD_MDL_TRACK_ADD_ANIM CMD_MDL_TRACK_ADD_ANIM => _CMD_MDL_TRACK_ADD_ANIM.Wrapper;
	public CMD_MDL_TRACK_ADD_ANIM_NEXT CMD_MDL_TRACK_ADD_ANIM_NEXT => _CMD_MDL_TRACK_ADD_ANIM_NEXT.Wrapper;
	public CMD_MDL_TRACK_ADD_ANIM_SYNC CMD_MDL_TRACK_ADD_ANIM_SYNC => _CMD_MDL_TRACK_ADD_ANIM_SYNC.Wrapper;
	public CMD_MDL_TRACK_CLEAR_ANIM CMD_MDL_TRACK_CLEAR_ANIM => _CMD_MDL_TRACK_CLEAR_ANIM.Wrapper;
	public CMD_MOVIE_PLAY CMD_MOVIE_PLAY => _CMD_MOVIE_PLAY.Wrapper;
	public CMD_MOVIE_SYNC CMD_MOVIE_SYNC => _CMD_MOVIE_SYNC.Wrapper;
	public CMD_PAD_TRIG CMD_PAD_TRIG => _CMD_PAD_TRIG.Wrapper;
	public CMD_PAD_PRESS CMD_PAD_PRESS => _CMD_PAD_PRESS.Wrapper;
	public CMD_PAD_CHK_TRIG CMD_PAD_CHK_TRIG => _CMD_PAD_CHK_TRIG.Wrapper;
	public CMD_PAD_CHK_PRESS CMD_PAD_CHK_PRESS => _CMD_PAD_CHK_PRESS.Wrapper;
	public CMD_ANALOG_ASTICK_CHECK CMD_ANALOG_ASTICK_CHECK => _CMD_ANALOG_ASTICK_CHECK.Wrapper;
	public CMD_FADE_IN CMD_FADE_IN => _CMD_FADE_IN.Wrapper;
	public CMD_FADE_OUT CMD_FADE_OUT => _CMD_FADE_OUT.Wrapper;
	public CMD_FADEEND_CHECK CMD_FADEEND_CHECK => _CMD_FADEEND_CHECK.Wrapper;
	public CMD_FADE_SYNC CMD_FADE_SYNC => _CMD_FADE_SYNC.Wrapper;
	public CMD_FADE_COLOR CMD_FADE_COLOR => _CMD_FADE_COLOR.Wrapper;
}
